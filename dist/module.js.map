{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///./styles.css","webpack:///../node_modules/css-loader/dist/runtime/api.js","webpack:///../node_modules/css-loader/dist/runtime/sourceMaps.js","webpack:///../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///../node_modules/style-loader/dist/runtime/insertBySelector.js","webpack:///../node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack:///../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack:///../node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack:///../node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"d3\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/nonce","webpack:///./utils.ts","webpack:///./styles.css?072f","webpack:///./styles.ts","webpack:///./components/Arc.tsx","webpack:///./components/SearchField.tsx","webpack:///./SimplePanel.tsx","webpack:///./components/CustomRangeSlider.tsx","webpack:///./module.ts","webpack:///./pathDataParser.ts","webpack:///./dataParser.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"::-webkit-input-placeholder { /* WebKit, Blink, Edge */\\n  color: grey;\\n}\\n:-moz-placeholder { /* Mozilla Firefox 4 to 18 */\\n color: grey;\\n opacity:  1;\\n}\\n::-moz-placeholder { /* Mozilla Firefox 19+ */\\n color: grey;\\n opacity:  1;\\n}\\n:-ms-input-placeholder { /* Internet Explorer 10-11 */\\n color: grey;\\n}\\n::-ms-input-placeholder { /* Microsoft Edge */\\n color: grey;\\n}\\n\\ninput::placeholder { /* Most modern browsers support this now. */\\n color: #808080;\\n}\\n\\n#zoom-button:hover {\\n  transform: translateY(-8px);\\n  background-color: grey !important;\\n}\\n\\n#search-field {\\n  transition: all 250ms;\\n}\\n\\n#search-field input {\\n  transition: all 250ms;\\n}\\n\\n#search-field:hover {\\n  transform: translateY(-8px);\\n}\\n\\n#search-field input:hover {\\n  background-color: rgb(195, 188, 188) !important;\\n}\\n\\n#canvas {\\n  overflow: hidden;\\n  transform-origin: -50px -50px;\\n  transition: transform 0.5s cubic-bezier(0.22, 0.61, 0.36, 1) 0s;\\n}\\n\\n#scroll-box {\\n  overflow: scroll\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./styles.css\"],\"names\":[],\"mappings\":\"AAAA,8BAA8B,wBAAwB;EACpD,WAAW;AACb;AACA,oBAAoB,4BAA4B;CAC/C,WAAW;CACX,WAAW;AACZ;AACA,qBAAqB,wBAAwB;CAC5C,WAAW;CACX,WAAW;AACZ;AACA,yBAAyB,4BAA4B;CACpD,WAAW;AACZ;AACA,0BAA0B,mBAAmB;CAC5C,WAAW;AACZ;;AAEA,qBAAqB,2CAA2C;CAC/D,cAAc;AACf;;AAEA;EACE,2BAA2B;EAC3B,iCAAiC;AACnC;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,+CAA+C;AACjD;;AAEA;EACE,gBAAgB;EAChB,6BAA6B;EAC7B,+DAA+D;AACjE;;AAEA;EACE;AACF\",\"sourcesContent\":[\"::-webkit-input-placeholder { /* WebKit, Blink, Edge */\\n  color: grey;\\n}\\n:-moz-placeholder { /* Mozilla Firefox 4 to 18 */\\n color: grey;\\n opacity:  1;\\n}\\n::-moz-placeholder { /* Mozilla Firefox 19+ */\\n color: grey;\\n opacity:  1;\\n}\\n:-ms-input-placeholder { /* Internet Explorer 10-11 */\\n color: grey;\\n}\\n::-ms-input-placeholder { /* Microsoft Edge */\\n color: grey;\\n}\\n\\ninput::placeholder { /* Most modern browsers support this now. */\\n color: #808080;\\n}\\n\\n#zoom-button:hover {\\n  transform: translateY(-8px);\\n  background-color: grey !important;\\n}\\n\\n#search-field {\\n  transition: all 250ms;\\n}\\n\\n#search-field input {\\n  transition: all 250ms;\\n}\\n\\n#search-field:hover {\\n  transform: translateY(-8px);\\n}\\n\\n#search-field input:hover {\\n  background-color: rgb(195, 188, 188) !important;\\n}\\n\\n#canvas {\\n  overflow: hidden;\\n  transform-origin: -50px -50px;\\n  transition: transform 0.5s cubic-bezier(0.22, 0.61, 0.36, 1) 0s;\\n}\\n\\n#scroll-box {\\n  overflow: scroll\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","module.exports = __WEBPACK_EXTERNAL_MODULE__305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__200__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","/*\nA collection of utility functions\n*/\n\n// find string by id\nexport function idToName(id: number, dic: any[]): string {\n    return dic.find( (obj: any) => obj.id === id).name\n}\n\n// get array of targets for node\nexport function getNodeTargets({ id, links }: { id: number; links: any[]; }): number[] {\n    return (\n        links\n        .filter( (obj: any) => obj.source === id)\n        .map( (obj: any ) => obj.target)\n    )\n}\n\n// map number to log\nexport function mapToLogRange(value: number, rangeMin: number, rangeMax: number,  minLinkSum: number, maxLinkSum: number) {\n    const logMinValue = Math.log10(minLinkSum);\n    const logMaxValue = Math.log10(maxLinkSum);\n    const logRange = logMaxValue - logMinValue;\n    const factor = (rangeMax-1) / logRange;\n\n    const logValue = Math.log10(value);\n    const mappedValue = ((logValue - logMinValue) * factor) + rangeMin;\n    return mappedValue;\n}\n\nexport function mapToLinRange(value: number, rangeMin: number, rangeMax: number,  minLinkSum: number, maxLinkSum: number) {\n    const inputRange = maxLinkSum - minLinkSum;\n    const outputRange = rangeMax - rangeMin;\n\n    const scaledValue = (value - minLinkSum) / inputRange;\n    const mappedValue = scaledValue * outputRange + rangeMin;\n    return mappedValue;\n}\n\n// get an array of evenly spaced colors\nexport function getEvenlySpacedColors(amount: number, darkMode: boolean): string[] {\n\n    // add darkmode colors\n\n    const colors = [];\n    const lightColors = ['#FFD700', '#00BFFF', '#FF8C00', '#FF1493', '#7FFF00', '#9400D3', '#00FFFF', '#FF69B4', '#32CD32', '#FFDAB9']\n    const darkColors =  ['#7CFC00', '#1E90FF', '#FFA500', '#FFC0CB', '#8B008B', '#32CD32', '#FF00FF', '#FF6347', '#FFFF00', '#FF1493']     \n      \n      for (let i = 0; i < amount; i++) {\n        const colorIndex = i % darkColors.length;\n        colors.push(darkMode ? darkColors[colorIndex] : lightColors[colorIndex]);\n      }\n\n    return colors;\n\n}\n\n// get array of n equally spaced values in specific range\nexport function linSpace(start: number, stop: number, n: number): number[] {\n    const step = (stop - start) / (n - 1);\n    return Array.from({ length: n }, (_, i) => start + i * step);\n}\n\nexport function calcStrokeWidth(arcFromSource: boolean, scale: string, arcThickness: number, e: any, linkScaleFrom: number, linkScaleTo: number, minLink: number, maxLink: number) {\n    if(arcFromSource) {\n        // check if we apply logarithmic or linear scaling\n        if(scale === \"log\") {\n            e.strokeWidth = mapToLogRange(e.arcWeightValue, linkScaleFrom, linkScaleTo, minLink, maxLink)\n        } else {\n            // call function to map to lin range instead\n            e.strokeWidth = mapToLinRange(e.arcWeightValue, linkScaleFrom, linkScaleTo, minLink, maxLink)\n        }\n    } else {\n        e.strokeWidth = arcThickness\n    }\n}\n\nexport function replaceEllipsis(label: Element, isHighlighted: Boolean){\n\n    const labelBoundingBox = label.getBoundingClientRect().width * (isHighlighted ? 1.6 : 1);\n    const mapRatio = (isHighlighted ? 0.2 : 0.3);\n    \n    const labelOffsetX = Number(label.getAttribute(\"transform\")?.split(\",\")[0].substring(10))\n\n    // check if label is out of bounds\n    if(labelBoundingBox > labelOffsetX) {\n\n        const overlap = labelBoundingBox - labelOffsetX\n\n        label.innerHTML = \"...\" + label.innerHTML.substring(overlap*mapRatio, label.innerHTML.length)\n    }\n}\n\nexport function resetLabel(label: Element) {\n    label.innerHTML = label.getAttribute(\"name\")!;\n}\n\nexport function evaluateQuery(query: string, nodeList: any[], labels: d3.Selection<d3.BaseType, unknown, HTMLElement, any>, links: d3.Selection<d3.BaseType, unknown, HTMLElement, any>, nodes: d3.Selection<d3.BaseType, unknown, HTMLElement, any>, arcOpacity: number) {\n    let matches = nodeList.map(({ name, id }) => ({ name, id }));\n    matches = matches.filter((e: any) => String(e.name).toLowerCase().includes(query.toLowerCase()))\n    const numericalMatches = new Set(matches.map((e: any) => e.id));\n    \n    if (query) {\n        // highlight labels\n        labels\n            .style(\"opacity\", (label: any) => {\n                return numericalMatches.has(label.id) ?  1 : .1\n            })\n        // highlight links\n        links\n            .style(\"opacity\", (link: any) => {\n                return (numericalMatches.has(link.source) || numericalMatches.has(link.target)) ?  arcOpacity : .1\n            })\n        // highlight nodes\n        nodes\n            .style(\"opacity\", (node: any) => {\n                return numericalMatches.has(node.id) ?  1 : .1\n            })\n    } \n}\n\nexport function getQueryMatches(query: string, nodeList: any[]) {\n    let matches = nodeList.map(({ name, id }) => ({ name, id }));\n    matches = matches.filter((e: any) => String(e.name).toLowerCase().includes(query.toLowerCase()))\n    const numericalMatches = new Set(matches.map((e: any) => e.id));\n    return numericalMatches;\n}\n\nexport function handleZoom(canvas: HTMLElement, zoomState: number) {\n    canvas.style.transform = `scale(${zoomState/10})`\n}\n\nexport function addNodeSum(links: any[], uniqueNodes: any[]) {\n    // Initialize object to store aggregated sums\n    const nodeSums: {[key: number]: number} = {};\n\n    // Loop through links array and populate nodeSums object\n    links.forEach((link: { source: any; target: any; arcWeightValue: any; }) => {\n        const {source, target, arcWeightValue} = link;\n        if (nodeSums[source]) {\n            nodeSums[source] += arcWeightValue;\n        } else {\n            nodeSums[source] = arcWeightValue;\n        }\n        \n        if (nodeSums[target]) {\n            nodeSums[target] += arcWeightValue;\n        } else {\n            nodeSums[target] = arcWeightValue;\n        }\n    });\n\n    uniqueNodes.map(function(element, index) {\n        element.sum = nodeSums[index]\n    });\n}\n\nexport function calcNodeRadius(uniqueNodes: any[], links: any[], options: any) {\n\n    const nodeScaleFrom = options.nodeRange?.split(\",\").map(Number)[0]\n    const nodeScaleTo = options.nodeRange?.split(\",\").map(Number)[1]\n\n    const minNode = Number(Math.min(...uniqueNodes.map(( e: any ) => e.sum)))\n    const maxNode = Number(Math.max(...uniqueNodes.map(( e: any ) => e.sum)))\n\n    uniqueNodes.forEach((e: { id: any, radius: any; sum: any; }) => {\n        // check if arc thickness is set to source\n        if(options.radiusFromSource) {\n            // check if we apply logarithmic or linear scaling\n            if(options.scale === \"log\") {\n                e.radius = mapToLogRange(e.sum, nodeScaleFrom, nodeScaleTo, minNode, maxNode)\n            } else {\n                e.radius = mapToLinRange(e.sum, nodeScaleFrom, nodeScaleTo, minNode, maxNode)\n            }\n        } else {\n          e.radius = options.nodeRadius\n        }\n    })\n}\n\nexport function calcDiagramHeight(nodes: any[], links: any[], panelWidth: number, fontSize: number) {\n    let maxArcHeight = 0\n    if(links.length !== 0) {\n        let maxNodesCrossed = 0;\n        let maxArc = null;\n\n        for (const link of links) {\n            const nodesCrossed = Math.abs(link.target - link.source);\n            if (nodesCrossed > maxNodesCrossed) {\n                maxNodesCrossed = nodesCrossed;\n                maxArc = link;\n            }\n        }\n    \n        const maxArcDistance = maxArc.target - maxArc.source\n        const step = (panelWidth-50 - 50) / (nodes.length - 1);\n        maxArcHeight = (maxArcDistance * step) / 2\n    }\n\n    const longestName = nodes.reduce((acc, curr) => {\n        if (curr.name.length > acc.name.length) {\n            return curr;\n        } else {\n            return acc;\n        }\n    }).name;\n    \n    // * 3.77 maps string to pixels, * 1.6 maps to highlighted tag\n    // add mapping to font size configured in the options\n    const longestNameSize = longestName.length * 3.77 * 1.6 * (fontSize/10)\n    // 31.99px is the height of the panel title\n    const graphHeight = maxArcHeight + longestNameSize + 31.99\n\n    return graphHeight\n}\n\nexport function clusterNodes(uniqueNodes: any[], links: any[], options: any, theme: any, allData: any) {\n      \n    const srcCluster = allData.find((obj: { name: any; }) => obj.name === options.srcCluster)?.values.buffer\n    const dstCluster = allData.find((obj: { name: any; }) => obj.name === options.dstCluster)?.values.buffer\n\n    // add cluster to nodes\n    for(let i = 0; i < links.length; i++) {\n        Object.assign(links[i], {[options.srcCluster]: []})\n        links[i][options.srcCluster].push(srcCluster[i])\n        Object.assign(links[i], {[options.dstCluster]: []})\n        links[i][options.dstCluster].push(dstCluster[i])\n\n        uniqueNodes[links[i].source].cluster = links[i][options.srcCluster][0]\n        uniqueNodes[links[i].target].cluster = links[i][options.dstCluster][0]\n    }\n\n    // order \n    uniqueNodes.sort((a, b) => {\n        if (a.cluster < b.cluster) {\n        return -1; // a should come before b\n        }\n        if (a.cluster > b.cluster) {\n        return 1; // a should come after b\n        }\n        return 0; // the order of a and b remains unchanged\n    });\n\n    for(let i = 0; i < uniqueNodes.length; i++) {\n        uniqueNodes[i].id = i; \n    }\n\n    // create groups for clusters\n    let clusters: any[] = []\n    \n    // create unique groups according to the setting specified in options\n    clusters = [...new Set(uniqueNodes.map( ( item: any ) => item.cluster))].map( ( cluster: any ) => ({\n      name: cluster,\n      color: \"\"\n    }))\n\n    const spacedColors = getEvenlySpacedColors(clusters.length, theme.isDark)\n\n    clusters.forEach( (e, i) => {\n      e.color = spacedColors[i]\n    })\n\n    uniqueNodes.forEach((e) => {\n      e.color = clusters.find( cluster => cluster.name === e.cluster as keyof typeof e)!.color\n    })\n\n    // reassign links source and target values because node order was changed\n\n    links.forEach(link => {\n      link.source = uniqueNodes.find( node => node.name === link.srcName).id\n      \n      link.target = uniqueNodes.find(node => node.name === link.dstName).id\n\n    });\n}\n\nexport function calcBottomOffset(labels: NodeListOf<Element>) {\n    // after the labels are rendered, we can find out the amount of margin we need to apply\n    // from the bottom and left so that the diagram is readable. The amount is being calculated from\n    // the boundingbox of the largest highlighted label\n    let labelHeights = Array.from(labels, (label) => label.getBoundingClientRect().height);\n    // Map to highlighted labels (size increases by 60%)\n    let offsetBottom = Math.max(...labelHeights)\n    offsetBottom*=1.6\n    return offsetBottom\n}\n\nexport function getFieldDisplayNames(allData: any[], sourceString?: string, targetString?: string) {\n    let displayNames = []\n    allData.forEach( field => {\n        const displayName = (field.state.displayName !== undefined) ? field.state.displayName : field.name\n        // check if the displayname is defined\n        if(field.name !== sourceString && field.name !== targetString) {\n            displayNames.push({\n                field: field.name,\n                displayName: displayName\n            })\n        }\n    })\n\n    return displayNames\n\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","export const styles = {\n    containerStyle: {\n      width: \"100%\",\n      height: \"100%\"\n    } as React.CSSProperties,\n    labelStyle: {\n      width: \"100%\",\n      height: \"100%\",\n      \"z-index\": \"10\",\n    } as React.CSSProperties,\n    buttonStyle: {\n      width: \"30px\",\n      height: \"30px\",\n      top:0,\n      position: \"absolute\"\n    } as React.CSSProperties,\n    toolTipStyle: {\n      box: {\n        position: \"absolute\",\n        left: \"\",\n        top: \"\",\n        width: \"auto\",\n        height: \"auto\",\n        background: \"white\",\n        padding: \"1em\",\n        margin: \"1em\",\n        \"max-width\": \"300px\",\n        \"border-radius\": \"5px\",\n        opacity: 0.9\n      } as React.CSSProperties,\n      text(fontSize: number) {\n        return {\n          color: \"black\",\n        \"font-size\": `${fontSize}px`,\n        margin: \"0\",\n        \"font-weight\": \"100\"\n        }\n      },\n      preface: {\n        \"font-weight\": \"900\"\n      } as React.CSSProperties,\n    }, \n    panelContainerStyle: {\n      height: \"100%\",\n      width: \"100%\"\n    } as React.CSSProperties,\n    searchFieldStyle: {\n      display: \"inline-block\",\n      margin: \"0em 1em\",\n      \"vertical-align\": \"middle\",\n    } as React.CSSProperties,\n    inputStyle(isDarkMode: boolean) {\n      return {\n        width: \"200px\",\n        height: \"40px\",\n        background: (isDarkMode) ? \"rgb(244 245 245 / 83%)\" : \"hsla(0, 0%, 0%, 1)\",\n        color: (isDarkMode) ? \"black\" : \"white\",\n        padding: \"1em\",\n        \"border-radius\": \"30px\"\n      }\n    },\n    toolBarStyle: {\n      top: \"10px\",\n      right: 0,\n      position: \"absolute\"\n    } as React.CSSProperties,\n    zoomButtonWrapper: {\n      margin: \"0em 1em\",\n      \"vertical-align\": \"middle\",\n      display: \"inline-block\"\n    } as React.CSSProperties,\n    zoomButtonStyle(isDarkMode: boolean, position: number) {\n      let styles, borderRadius = \"30px\", padding = \"5px\"\n      styles = {\n        display: \"inline-block\",\n        \"background-color\": isDarkMode ? \"rgba(244, 245, 245, 0.83)\" : \"black\",\n        \"border\": \"1px solid rgba(0, 0, 0, 0.1)\",\n        \"cursor\": \"pointer\",\n        \"transition\": \"all 250ms\",\n        \"border-top-left-radius\": \"0px\",\n        \"border-bottom-left-radius\": \"0px\",\n        \"border-top-right-radius\": \"0px\",\n        \"border-bottom-right-radius\": \"0px\",\n        \"padding-left\": padding,\n        \"padding-right\": padding\n      }\n      if(position === 0) {\n        styles[\"border-top-left-radius\"] = borderRadius\n        styles[\"border-bottom-left-radius\"] = borderRadius\n        styles[\"padding-left\"] = padding\n      } else if (position === 2) {\n        styles[\"border-top-right-radius\"] = borderRadius\n        styles[\"border-bottom-right-radius\"] = borderRadius\n        styles[\"padding-right\"] = padding\n      }\n      return styles\n    },\n    zoomIcon(isDarkMode: boolean) {\n      return {\n        height: \"40px\",\n        width: \"40px\",\n        padding: \"0.3em\",\n        filter: isDarkMode ? \"invert(0)\" : \"invert(1)\",\n        animation: \"inAnimation 0.5s ease-in\"\n      }\n    },\n}\n","import React, { useEffect, useRef, useState, ReactNode } from 'react';\nimport * as d3 from 'd3';\nimport { idToName, getNodeTargets, linSpace, resetLabel, replaceEllipsis, evaluateQuery, handleZoom, getQueryMatches, calcBottomOffset } from 'utils';\nimport '../styles.css'\nimport { styles } from 'styles'\n\nlet toolTip = {\n  source: \"\",\n  target: <p></p> as ReactNode,\n  field: <p></p> as ReactNode,\n  pos: [0,0]\n}\n\nfunction Arc(props: any) { \n  let uniqueNodes = props.parsedData.uniqueNodes;\n  let links = props.parsedData.links;\n  const containerRef = useRef(null),\n  gRef = useRef(null),\n  labelRef = useRef(null),\n  tooltipRef = useRef(null);\n  const [showTooltip, setShowTooltip] = useState(false)\n\n  const handleToggleTooltip = (isActive: boolean) => {\n    setShowTooltip(isActive);\n  }\n\n  function updateTooltip(pos: number[], isActive: boolean, sourceId: number,  targetId?: number, displayValue?: string, linkId?: number): void {\n    \n    // when only sourceId is passed, display node and its targets\n    if(targetId === undefined) {\n      toolTip.source = idToName(sourceId,uniqueNodes)\n      // get targets for passed nodes as strings\n      const nodeTargets = getNodeTargets({ id: sourceId, links })\n      if(nodeTargets.length > 1) {\n        toolTip.target = nodeTargets\n                        .map((id) => idToName(id, uniqueNodes))\n                        .filter((value, index, array) => array.indexOf(value) === index)\n                        .map((string, index) => (\n                          <p style={styles.toolTipStyle.text(props.zoom)} key={index}>\n                            {string}\n                            <br />\n                          </p>\n                        ))\n      } else if (nodeTargets.length === 1) {\n        toolTip.target = idToName(nodeTargets[0], uniqueNodes)\n      } else {\n        toolTip.target = \"\";\n      }\n      if(props.graphOptions.isCluster) {\n        toolTip.field = <p><b style={styles.toolTipStyle.preface}>Cluster: </b> {uniqueNodes[sourceId].cluster}</p>\n      } else {\n        toolTip.field = <p><b style={styles.toolTipStyle.preface}>Weight: </b>{uniqueNodes[sourceId].sum}</p>\n      }\n    } else {\n      toolTip.source = idToName(sourceId,uniqueNodes)\n      toolTip.target = idToName(targetId,uniqueNodes)\n     \n      const hoverLink = (links.find((item: { source: any; target: any; }) => item.source === sourceId && item.target === targetId))\n      toolTip.field = props.parsedData.fields.map((field: any, index: number) => (    \n                        <p key={index}><b style={styles.toolTipStyle.preface}>{field.displayName}:</b>\n                        {hoverLink[`${field.field}Display`].map((string: any, index: number) => (\n                              <p style={styles.toolTipStyle.text(props.zoom)} key={index}>\n                                {string}\n                                <br />\n                              </p>\n                            ))\n                          }\n                        </p>\n                      ))\n      \n      \n      \n    }\n   \n    // toggle tooltip\n    handleToggleTooltip(isActive)\n\n    // update position\n    const panelContainer = document.querySelectorAll(`[data-panelid=\"${props.panelId}\"]`)[0]\n    if(panelContainer !== undefined) {\n      const mapBounds = panelContainer.getBoundingClientRect();\n      let offsetY = pos[1] - mapBounds.top,\n      offsetX = pos[0] - mapBounds.left\n      \n      const toolTipDom = document.querySelectorAll(\"#tooltip\")[0] as HTMLElement,\n      toolTipBounds = toolTipDom.getBoundingClientRect();\n      \n      let leftOrRight = \"left\";\n      if(offsetX + toolTipBounds.right > mapBounds.right) {\n        leftOrRight = \"right\";\n        offsetX = mapBounds.right - pos[0]\n      }\n    \n      let topOrBottom = \"top\" \n      // add margin of 31.99px\n      if(toolTipBounds.height+pos[1]+31.99 > mapBounds.bottom) {\n        topOrBottom = \"bottom\";\n        offsetY = mapBounds.bottom - pos[1]\n      }\n    \n      if (topOrBottom === \"top\") {\n        toolTipDom.style.top = `${offsetY}px`;\n      } else {\n        toolTipDom.style.bottom = `${offsetY}px`;\n      }\n      \n      if (leftOrRight === \"left\") {\n        toolTipDom.style.left = `${offsetX}px`;\n      } else {\n        toolTipDom.style.right = `${offsetX}px`;\n      }\n    }\n  };\n\n  useEffect(() => {\n    // removes the graph if it exists in the dom so it gets rendered with updated dimensions\n    d3.selectAll(`[data-panelid=\"${props.panelId}\"] circle, [data-panelid=\"${props.panelId}\"] path, [data-panelid=\"${props.panelId}\"] text`).remove();\n\n    const width = props.width,\n    height = props.height\n\n    const container = containerRef.current,\n    graph = gRef.current,\n    labelBox = labelRef.current;\n\n    // render labels\n    const text = d3.select(labelBox)\n      .selectAll(`[data-panelid=\"${props.panelId}\"] text`)\n      .data(uniqueNodes)\n\n    text\n      .enter()\n      .append(\"text\")\n      // if node has large radius, offset the label for readability\n      .attr(\"x\", (d: any) => { return uniqueNodes.find((e: { id: any; }) => e.id === d.id).radius >= 7 ? -(uniqueNodes.find((e: { id: any; }) => e.id === d.id).radius*1.6) : -10 })\n      .attr(\"y\", (d: any) => { return uniqueNodes.find((e: { id: any; }) => e.id === d.id).radius >= 7 ? (uniqueNodes.find((e: { id: any; }) => e.id === d.id).radius*0.8) : 10 })\n      .text((d, i) => uniqueNodes[i].name)\n      .style(\"text-anchor\", \"end\")\n      .attr('fill', () => {return props.isDarkMode ? \"white\" : \"black\"})\n      .attr('font-size', props.graphOptions.fontSize)\n      .attr('transform', (d, i) => (\"translate(\" + 0 + \",\" + (height) + \")rotate(-45)\"))\n      .style(\"margin-right\", \"5px\")\n      .attr('name', (d, i) => { return uniqueNodes[i].name })\n      .attr('id', (d, i) => { return i })\n\n    // get array of equally spaced values for positioning of graph on x axis\n    const values = linSpace(props.graphOptions.marginLeft, width-props.graphOptions.marginRight, uniqueNodes.length);\n\n    const labelsAsHtml = document.querySelectorAll(`[data-panelid=\"${props.panelId}\"] text`)\n\n    let offsetBottom = calcBottomOffset(labelsAsHtml)\n\n    // Update the labels position\n    d3.selectAll(`[data-panelid=\"${props.panelId}\"] text`)\n    .attr('transform', (d, i) => (\"translate(\" + values[i] + \",\" + (height-calcBottomOffset(labelsAsHtml)) + \")rotate(-45)\"))\n\n    // check if label is out of bounds\n    Array.from(labelsAsHtml).forEach(element => {\n      replaceEllipsis(element, false)\n    });\n\n    offsetBottom = calcBottomOffset(labelsAsHtml)\n\n    // Update the labels position\n    d3.selectAll(`[data-panelid=\"${props.panelId}\"] text`)\n    .attr('transform', (d, i) => (\"translate(\" + values[i] + \",\" + (height-offsetBottom) + \")rotate(-45)\"))\n\n    // render nodes\n    const svg = d3.select(container)\n    .selectAll(`[data-panelid=\"${props.panelId}\"] circle`)\n    .data(uniqueNodes)\n\n    svg\n      .enter()\n      .append(\"circle\")\n      .attr(\"cx\", (d, i) => values[i])\n      .attr(\"cy\", height-offsetBottom)\n      .attr(\"r\", (n: any) => { return  n?.radius })\n      .style(\"fill\", (d, i) => uniqueNodes[i].color)\n      .attr(\"id\", (d, i) => uniqueNodes[i].id)\n      .attr(\"name\", (d, i) => uniqueNodes[i].name)\n      .attr(\"radius\", (d, i) => uniqueNodes[i].radius);\n\n    // render links\n    const g = d3.select(graph)\n      .selectAll(`[data-panelid=\"${props.panelId}\"] path`)\n      .data(links)\n\n    g\n      .enter()\n      .append('path')\n      .attr('d', function (d, i) {\n        const start = values[links[i].source]\n        const end = values[links[i].target]\n\n        const radiusX = Math.abs(start - end) / 2; // X-axis radius\n        let radiusY = radiusX * 1; // Y-axis radius (adjust the value as desired for the elliptical shape)\n        if(props.graphOptions.hopMode) {\n          if(links[i].isOverlap) { radiusY = radiusX * links[i].mapRadiusY }\n        }\n        const largeArcFlag = Math.abs(start - end) > Math.PI ? 1 : 0; // Determines whether the arc should be greater than or less than 180 degrees\n        return [\n          'M', start, height - offsetBottom,\n          'A', radiusX, ',', radiusY, 0, largeArcFlag, ',', start < end ? 1 : 0, end, ',', height - offsetBottom\n        ]\n        .join(' ');\n      })\n      .style(\"fill\", \"none\")\n      .attr(\"stroke\", (l: any) => { return  l?.color })\n      .attr(\"id\", (d, i) => links[i].id)\n      .attr(\"stroke-width\", (l: any) => { return  l?.strokeWidth })\n      .style(\"opacity\", props.graphOptions.arcOpacity)\n      .attr(\"source\", (d, i) => links[i].source)\n      .attr(\"target\", (d, i) => links[i].target)\n      .attr(\"sum\", (d, i) => links[i].sum)\n      .attr(\"displayValue\", (d, i) => links[i].displayValue)\n      .attr(\"path\", (d, i) => links[i].path)\n    \n    /********************************** Highlighting **********************************/ \n    const nodes = d3.selectAll(`[data-panelid=\"${props.panelId}\"] circle`)\n    const paths = d3.selectAll(`[data-panelid=\"${props.panelId}\"] path`)\n    const labels = d3.selectAll(`[data-panelid=\"${props.panelId}\"] text`)\n    const duration = 200;\n\n    const isQuery = props.query.length !==0\n    const queryMatches = getQueryMatches(props.query, uniqueNodes)\n\n    nodes\n      .on(\"mouseover\", function (d) {\n        // Tooltip\n\n        updateTooltip([d.clientX,d.clientY], true, Number(d.srcElement.id));\n        labelsAsHtml[d.srcElement.id].setAttribute(\"name\", labelsAsHtml[d.srcElement.id].innerHTML)\n        const nodeTargets = getNodeTargets({ id: Number(d.srcElement.id), links })\n        // add ellipsis for node being hovered over & target nodes\n        replaceEllipsis(labelsAsHtml[d.srcElement.id],true)\n        nodeTargets.forEach(e => {\n          replaceEllipsis(labelsAsHtml[e],true)\n        })\n        nodes\n          .style(\"opacity\", ( n: any) => {\n            if(isQuery) {\n              return queryMatches.has(n.id) ? 1 : 0.1\n            } else {\n              return nodeTargets.includes(n.id) ? 1 : 0.1\n            }\n            \n          })\n          .transition()\n          .attr(\"r\", (n: any) => {\n            if(isQuery) {\n              return uniqueNodes[n.id].radius\n            } else {\n              return nodeTargets.includes(n.id) ? uniqueNodes[n.id].radius*2 : uniqueNodes[n.id].radius\n            }  \n          })\n          .duration(duration)\n        d3.select(this)\n          .style(\"opacity\", 1)\n          .transition()\n          .duration(duration)\n          .attr(\"r\", uniqueNodes[d.srcElement.id].radius*2)\n        paths\n          .transition()\n          .style('opacity', (l: any) => {\n            if(isQuery) {\n              return queryMatches.has(l.source) || queryMatches.has(l.target) ? props.graphOptions.arcOpacity : .1\n            } else {\n              /* eslint-disable eqeqeq */\n              return d.srcElement.id == l?.source || d.srcElement.id == l?.target ? props.graphOptions.arcOpacity : .1\n            }  \n          })\n          .attr('stroke-width', (l: any) => {\n            /* eslint-disable eqeqeq */\n            return d.srcElement.id == l?.source || d.srcElement.id == l?.target ? l?.strokeWidth*2 : l?.strokeWidth\n          })\n          .duration(duration)\n        labels\n          .transition()\n          .duration(duration)\n          .attr(\"font-size\", (label_d: any) => {\n            if(isQuery) {\n              return label_d.name === d.srcElement.getAttribute(\"name\") ? props.graphOptions.fontSize*1.6 : props.graphOptions.fontSize\n            } else {\n              return label_d.name === d.srcElement.getAttribute(\"name\") || nodeTargets.includes(label_d.id) ? props.graphOptions.fontSize*1.6 : props.graphOptions.fontSize\n            }\n          })\n          .style(\"opacity\", (label_d: any) => {\n            if(isQuery) {\n              return label_d.name === d.srcElement.getAttribute(\"name\") ? 1 : .1\n            } else {\n              return label_d.name === d.srcElement.getAttribute(\"name\") || nodeTargets.includes(label_d.id) ? 1 : .1\n            }\n          })\n      })\n      .on('mouseout', function (d) {\n        const nodeTargets = getNodeTargets({ id: Number(d.srcElement.id), links })\n        replaceEllipsis(labelsAsHtml[d.srcElement.id], false)\n        resetLabel(labelsAsHtml[d.srcElement.id])\n        nodeTargets.forEach(e => {\n          resetLabel(labelsAsHtml[e])\n        })\n        handleToggleTooltip(false);\n        nodes\n          .transition()\n          .duration(duration)\n          .attr(\"r\", (n: any) => {\n            return uniqueNodes[n.id].radius\n          })\n          .style(\"opacity\",(n: any) => {\n            if(isQuery) {\n              return queryMatches.has(n.id) ? 1 : .1\n            } else {\n              return 1\n            }\n          })\n        d3.select(this)\n          .transition()\n          .duration(duration)\n          .attr(\"r\", uniqueNodes[d.srcElement.id].radius)\n        paths\n          .transition()\n          .duration(duration)\n          .style(\"opacity\",(l: any) => {\n            if(isQuery) {\n              return queryMatches.has(l.source) || queryMatches.has(l.target) ? props.graphOptions.arcOpacity : .1\n            } else {\n              return props.graphOptions.arcOpacity\n            }\n          })\n          .attr('stroke-width', (l: any) => {\n            return l?.strokeWidth\n          })\n        labels\n          .transition()\n          .duration(duration)\n          .attr(\"font-size\", props.graphOptions.fontSize)\n          .style(\"opacity\",(l: any) => {\n            if(isQuery) {\n              return queryMatches.has(l.id) ? 1 : .1\n            } else {\n              return 1\n            }\n          })\n      })\n\n      /********************************** Link tooltip **********************************/ \n\n      paths\n      .on(\"mouseover\", function (d) {\n        updateTooltip([d.clientX,d.clientY], true, Number(d.srcElement.getAttribute(\"source\")), Number(d.srcElement.getAttribute(\"target\")), d.srcElement.getAttribute(\"displayValue\"), d.srcElement.id);\n        paths\n          .style(\"opacity\",(l: any) => {\n            if(isQuery) {\n              return queryMatches.has(l.source) || queryMatches.has(l.target) ? props.graphOptions.arcOpacity : .1\n            } else if (props.graphOptions.hopMode) {\n              return Number(d.srcElement.getAttribute(\"path\")) === l.path ? props.graphOptions.arcOpacity : .1\n            } else {\n              return .1\n            }\n          })\n          .transition()\n          .duration(duration)\n        d3.select(this)\n          .transition()\n          .style(\"opacity\", props.graphOptions.arcOpacity) \n          .duration(duration)\n      })\n      .on('mouseout', function (d) {\n        handleToggleTooltip(false);\n        paths\n          .transition()\n          .duration(duration)\n          .style(\"opacity\",(l: any) => {\n            if(isQuery) {\n              return queryMatches.has(l.source) || queryMatches.has(l.target) ? props.graphOptions.arcOpacity : .1\n            } else {\n              return props.graphOptions.arcOpacity\n            }\n          })\n          .attr('stroke-width', (l: any) => {\n            return l?.strokeWidth\n          })\n        d3.select(this)\n          .transition()\n          .style(\"opacity\",(l: any) => {\n            if(isQuery) {\n              return queryMatches.has(l.source) || queryMatches.has(l.target) ? props.graphOptions.arcOpacity : .1\n            } else {\n              return props.graphOptions.arcOpacity\n            }\n          })\n          .duration(duration)\n          .attr('stroke-width', (l: any) => {\n            return l?.strokeWidth\n          })\n      })    \n\n    if(props.graphOptions.search && isQuery) {evaluateQuery(props.query,uniqueNodes, labels, paths, nodes, props.graphOptions.arcOpacity)}\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props.graphOptions, links, props.height, props.width, uniqueNodes]);\n\n  if(document.querySelectorAll(`[data-panelid=\"${props.panelId}\"] #canvas`)[0] !== undefined) {\n    handleZoom(document.querySelectorAll(`[data-panelid=\"${props.panelId}\"] #canvas`)[0] as HTMLElement, props.zoomState)\n  }\n  \n  return (       \n      <div style={styles.containerStyle}>\n        <div id={\"canvas\"} style={styles.containerStyle} > \n          <svg style={styles.containerStyle} ref = {containerRef}>\n            <g style={styles.containerStyle} ref = {gRef}></g>\n            <svg style={styles.labelStyle} ref = {labelRef}></svg>\n          </svg>\n\n        </div> \n        {showTooltip && (\n          <div ref={tooltipRef} style={styles.toolTipStyle.box} id='tooltip'>\n            <p style={styles.toolTipStyle.text(props.graphOptions.tooltipFontSize)} ><b style={styles.toolTipStyle.preface}>{props.graphOptions.toolTipSource}</b> {\" \"}{toolTip.source}</p>\n            <br/>\n            <div style={styles.toolTipStyle.text(props.graphOptions.tooltipFontSize)} ><b style={styles.toolTipStyle.preface}>{props.graphOptions.toolTipTarget}</b>{toolTip.target}</div>\n            <br/>\n            <p style={styles.toolTipStyle.text(props.graphOptions.tooltipFontSize)} > {toolTip.field}</p>\n          </div>\n        )}\n      </div>      \n  );\n}\n\n\nexport default Arc;\n\n\n","import React, { ChangeEvent } from 'react'\nimport { styles } from 'styles'\n\nexport default function SearchField(props: any) {\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        props.onQuery(e.target.value)\n    }\n\n    return (\n      <div id=\"search-field\" style={styles.searchFieldStyle}>\n        <input placeholder=\"Search nodes/edges\" style={styles.inputStyle(props.isDarkMode)} type=\"text\" onChange={handleChange}/>\n      </div>\n    )\n}\n","import  { useState } from 'react';\nimport * as React from 'react';\nimport { PanelProps } from '@grafana/data';\nimport { SimpleOptions } from 'types';\nimport { useTheme2 } from '@grafana/ui';\nimport Arc from './components/Arc';\nimport SearchField from './components/SearchField';\nimport { parseData } from 'dataParser';\nimport { parsePathData } from 'pathDataParser';\n\nimport { styles } from 'styles';\nimport { calcDiagramHeight } from 'utils';\n\ninterface Props extends PanelProps<SimpleOptions> {}\n/**\n * Grafana Arc diagram panel\n *\n * @param {*} { options, data, width, height, id }\n * @return { Arc } Arc diagram\n */\nexport const SimplePanel: React.FC<Props> = ({ options, data, width, height, id }: any) => {\n  const [query, setQuery] = useState(\"\");\n  const [zoomState, setZoomState] = useState(10);\n  \n  const onClick = (isIncrement: boolean, isReset?: boolean) => {\n    if(!isIncrement && zoomState === 10) {\n      return\n    } else {\n      setZoomState((isIncrement) ? zoomState+1 : zoomState-1)\n    }\n    if(isReset) {\n      setZoomState(10)\n    }\n  }\n\n  let graphOptions = {\n    ...options,\n  };\n\n  const theme = useTheme2();\n\n  if (options.isCluster && data.series[0].fields.length < 5) {\n    return <div>Node clustering requires a 4th group by</div>;\n  }\n\n  if (options.isCluster && data.series[0].fields.length > 5) {\n    //return <div>Node clustering does not support a 5th group by</div>;\n  }\n\n  if (options.isCluster && (options.srcCluster === \"\"  || options.dstCluster === \"\")) {\n    return <div>Choose fields for clustering</div>;\n  }\n\n  // check if datasource is timeseries\n  const bucketAggs = data.request.targets[0].bucketAggs\n  let dataSourceConflict;\n  for (let i = 0; i < bucketAggs.length; i++) {\n    const dataSource = bucketAggs[i];\n    if (dataSource.type === \"date_histogram\") {\n      dataSourceConflict = true;\n      break;\n    } else {\n      dataSourceConflict = false;\n    }\n  }\n\n  if(dataSourceConflict) {\n    return <div>Datasource type Date Histogram not supported</div>;\n  }\n\n\n  // check if source equals dst\n  if(!options.hopMode) {\n    const source = options.src ? data.series[0].fields.find((obj: { name: any; }) => obj.name === options.src).name : data.series[0].fields[0].name;\n    const target = options.dest ? data.series[0].fields.find((obj: { name: any; }) => obj.name === options.dest).name : data.series[0].fields[1].name;\n    // catch errors\n    if (source === target) {\n      return <div>Source equals target</div>;\n    }\n\n    if(options.isCluster && (options.srcCluster === source || options.srcCluster === target || options.dstCluster === source || options.dstCluster === target)) {\n      return <div>Fields for clustering can not be links source or target fields</div>;\n    }\n  }\n\n  let parsedData: { uniqueNodes: any[]; links: any[] } = {\n    uniqueNodes: [],\n    links: []\n  };\n\n  try {\n    if(!options.hopMode) {\n      parsedData = parseData(data, graphOptions, theme);\n    } else {\n      parsedData = parsePathData(data, graphOptions, theme)\n    }\n  } catch (error) {\n    console.error('parsing error: ', error);\n  }\n\n  // check if diagram fits panel\n  if (calcDiagramHeight(parsedData.uniqueNodes, parsedData.links, width, options.fontSize) > height) {\n    return <div>Increase panels height to fit diagram</div>;\n  }\n  \n\n  const textColor = theme.colors.text.primary;\n\n  return (\n    <div id='scroll-box' style={styles.panelContainerStyle}>\n      <Arc\n        textColor={textColor}\n        parsedData={parsedData}\n        graphOptions={graphOptions}\n        width={width}\n        height={height}\n        query={query}\n        isDarkMode={theme.isDark}\n        panelId={id}\n        zoomState={zoomState}\n      ></Arc>\n      <div style={styles.toolBarStyle}>\n        {options.search && <SearchField\n          onQuery={setQuery}\n          nodeList={parsedData.uniqueNodes}\n          isDarkMode={theme.isDark}\n        ></SearchField>}\n        {options.zoom && \n        <div style={styles.zoomButtonWrapper}>\n          <button id=\"zoom-button\" style={styles.zoomButtonStyle(theme.isDark, 0)} onClick={() => onClick(false)}>\n            <img style={styles.zoomIcon(theme.isDark)} src=\"public/plugins/esnet-arcdiagram-panel/img/area_zoom_out.svg\" alt=\"\"/>\n          </button>\n          <button id=\"zoom-button\" style={styles.zoomButtonStyle(theme.isDark, 1)} onClick={() => onClick(true)}>\n            <img style={styles.zoomIcon(theme.isDark)} src=\"public/plugins/esnet-arcdiagram-panel/img/area_zoom_in.svg\" alt=\"\"/>\n          </button>\n          <button id=\"zoom-button\" style={styles.zoomButtonStyle(theme.isDark, 2)} onClick={() => onClick(true, true)}>\n            <img style={styles.zoomIcon(theme.isDark)} src=\"public/plugins/esnet-arcdiagram-panel/img/reset_icon.svg\" alt=\"\"/>\n          </button>\n        </div>\n        } \n      </div>\n    </div>\n  );\n};\n\n\n\n","import React, { ReactNode, useCallback } from 'react';\nimport { RangeSlider } from '@grafana/ui';\nimport { StandardEditorProps, StringFieldConfigSettings } from '@grafana/data';\n\n\ninterface Props extends StandardEditorProps<string, StringFieldConfigSettings> {\n  suffix?: ReactNode;\n}\n\nexport const CustomRangeSlider: React.FC<Props> = ({ value, onChange, item, suffix }) => {\n\n  const onValueChange = useCallback(\n    (value: number[] | undefined) => {\n      onChange(String(value))\n    },\n    \n    [onChange]\n  );\n\n  return (\n    <div>\n      <RangeSlider\n          min={1}\n          max={50}\n          onAfterChange={onValueChange}\n          onChange={onValueChange}\n          orientation=\"horizontal\"\n          value={[\n              1,\n              15\n          ]}\n      />\n    </div>\n  )\n};\n\n","import { PanelPlugin, getFieldDisplayName, FieldOverrideContext, FieldConfigProperty } from '@grafana/data';\nimport { SimpleOptions } from './types';\nimport { SimplePanel } from './SimplePanel';\nimport { CustomRangeSlider } from './components/CustomRangeSlider'\n\nconst AppearanceCategory = ['Appearance'];\nconst DataCategory = ['Data'];\nconst ModeCategory = ['Mode'];\n\n\nexport const plugin = new PanelPlugin<SimpleOptions>(SimplePanel).setPanelOptions(builder => {\n  return builder\n    .addBooleanSwitch({\n      path: 'hopMode',\n      name: 'Visualize AS path',\n      defaultValue: false,\n      category: ModeCategory,\n      showIf: config => !config.isCluster\n    })\n    .addSelect({\n      path: 'delimiter',\n      name: 'String delimiter',\n      description: 'Character to seperate nodes by',\n      defaultValue: \"Space\",\n      category: ModeCategory,\n      settings: {\n        allowCustomValue: false,\n        options: [\n          { \n            label: \"Space\", \n            value: \"space\"\n          },\n          { \n            label: \",\", \n            value: \",\",\n          },\n          { \n            label: \";\", \n            value: \";\",\n          },\n          { \n            label: \":\", \n            value: \":\",\n          }\n        ],\n      },\n      showIf: config => config.hopMode\n    })\n    .addBooleanSwitch({\n      path: 'arcFromSource',\n      name: 'Arc thickness from source',\n      defaultValue: false,\n      category: AppearanceCategory,\n    })\n    .addBooleanSwitch({\n      path: 'radiusFromSource',\n      name: 'Node radius from source',\n      defaultValue: false,\n      category: AppearanceCategory,\n      showIf: config => !config.hopMode\n    })\n    .addSelect({\n      path: 'arcWeightSource',\n      name: 'Weight field',\n      description: 'Select a field for the arc and node weight (has to be a metric):',\n      category: AppearanceCategory,\n      settings: {\n        allowCustomValue: false,\n        options: [],\n        getOptions: async (context: FieldOverrideContext) => {\n          const options = [];\n          if (context && context.data) {\n            for (const frame of context.data) {\n              for (const field of frame.fields) {\n                const value = field.name;\n                options.push({ value, label: value });\n              }\n            }\n          }\n          return Promise.resolve(options);\n        },\n      },\n      showIf: config => config.arcFromSource || config.radiusFromSource,\n    })\n    .addSliderInput({\n      path: 'arcThickness',\n      name: 'Arc thickness',\n      defaultValue: 1,\n      settings: {\n        min: 1,\n        max: 15,\n        step: 1,\n      },\n      showIf: config => !config.arcFromSource,\n      category: AppearanceCategory,\n    })\n    .addSliderInput({\n      path: 'arcOpacity',\n      name: 'Arc opacity',\n      defaultValue: 1,\n      settings: {\n        min: .6,\n        max: 1,\n        step: .1,\n      },\n      category: AppearanceCategory,\n    })\n    .addSliderInput({\n      path: 'nodeRadius',\n      name: 'Node radius',\n      defaultValue: 5,\n      settings: {\n        min: 5,\n        max: 15,\n        step: 1,\n      },\n      showIf: config => !config.radiusFromSource,\n      category: AppearanceCategory,\n    })\n    .addSelect({\n      path: 'linkColorConfig',\n      name: 'Link color',\n      description: 'Select configuration for the link color (\"By Field\" will overwrite threshold)',\n      defaultValue: \"default\",\n      category: AppearanceCategory,\n      settings: {\n        allowCustomValue: false,\n        options: [\n          { \n            label: \"Default\", \n            value: \"default\"\n          },\n          { \n            label: \"By field\", \n            value: \"field\",\n          }\n        ],\n      },\n      showIf: config => !config.hopMode,\n    })\n    .addSelect({\n      path: 'colorConfigField',\n      name: 'Field',\n      description: 'Select a field to base the link color on',\n      category: AppearanceCategory,\n      settings: {\n        allowCustomValue: false,\n        options: [],\n        getOptions: async (context: FieldOverrideContext) => {\n          const options = [];\n          if (context && context.data) {\n            for (const frame of context.data) {\n              for (const field of frame.fields) {\n                const name = getFieldDisplayName(field, frame, context.data);\n                const value = name;\n                options.push({ value, label: name });\n              }\n            }\n          }\n          return Promise.resolve(options);\n        },\n      },\n      showIf: config => config.linkColorConfig !== \"default\",\n    })\n    .addColorPicker({\n      path: 'nodeColor',\n      name: 'Node Color',\n      defaultValue: 'blue',\n      category: AppearanceCategory,\n      showIf: config => !config.isCluster\n    })\n    .addSliderInput({\n      path: 'fontSize',\n      name: 'Font size',\n      defaultValue: 10,\n      settings: {\n        min: 5,\n        max: 20,\n        step: 1,\n      },\n      category: AppearanceCategory,\n    })\n    .addSliderInput({\n      path: 'tooltipFontSize',\n      name: 'Tooltip font size',\n      defaultValue: 8,\n      settings: {\n        min: 8,\n        max: 20,\n        step: 1,\n      },\n      category: AppearanceCategory,\n    })\n    .addSliderInput({\n      path: 'yRad',\n      name: 'Margin between overlapping links',\n      defaultValue: 1.3,\n      settings: {\n        min: 1,\n        max: 2,\n        step: .1,\n      },\n      showIf: config => config.hopMode,\n      category: AppearanceCategory,\n    })\n    .addSliderInput({\n      path: 'marginLeft',\n      name: 'Margin from left border',\n      defaultValue: 50,\n      settings: {\n        min: 0,\n        max: 200,\n        step: 1,\n      },\n      category: AppearanceCategory,\n    })\n    .addSliderInput({\n      path: 'marginRight',\n      name: 'Margin from right border',\n      defaultValue: 50,\n      settings: {\n        min: 0,\n        max: 200,\n        step: 1,\n      },\n      category: AppearanceCategory,\n    })\n    .addBooleanSwitch({\n      path: 'search',\n      name: 'Show search bar',\n      defaultValue: false,\n      category: AppearanceCategory,\n    })\n    .addBooleanSwitch({\n      path: 'zoom',\n      name: 'Show zoom button',\n      defaultValue: false,\n      category: AppearanceCategory,\n    })\n    .addTextInput({\n      path: \"toolTipSource\",\n      name: 'Tooltip source',\n      category: AppearanceCategory,\n      defaultValue: \"From: \",\n      description: 'Text to be displayed infront of target node.',\n    })\n    .addTextInput({\n      path: \"toolTipTarget\",\n      name: 'Tooltip target',\n      category: AppearanceCategory,\n      defaultValue: \"To: \",\n      description: 'Text to be displayed infront of source node.',\n    })\n    .addSelect({\n      path: 'scale',\n      name: 'Scaling',\n      defaultValue: \"lin\",\n      description: 'Select the scaling of the diagram',\n      settings: {\n        allowCustomValue: false,\n        options: [\n          {\n            label: 'Linear',\n            value: 'lin',\n          },\n          {\n            label: \"Logarithmic\",\n            value: \"log\"\n          }\n        ],\n      },\n      showIf: config => config.radiusFromSource || config.arcFromSource,\n      category: DataCategory,\n    })\n    .addCustomEditor({\n      id: \"setRange\",\n      path: \"arcRange\",\n      editor: CustomRangeSlider,\n      name: 'Range for weighted links',\n      description: 'Range which the arc thickness is being mapped to',\n      category: DataCategory,\n      defaultValue: \"1,15\",\n      showIf: config => config.arcFromSource,\n    })\n    .addCustomEditor({\n      id: \"setRange\",\n      path: \"nodeRange\",\n      editor: CustomRangeSlider,\n      name: 'Range for weighted nodes',\n      description: 'Range which the node radius is being mapped to',\n      category: DataCategory,\n      defaultValue: \"1,15\",\n      showIf: config => config.radiusFromSource,\n    })\n    .addBooleanSwitch({\n      path: 'isCluster',\n      name: 'Activate node clustering',\n      defaultValue: false,\n      category: DataCategory,\n    })\n    .addSelect({\n      path: 'srcCluster',\n      name: 'Source cluster',\n      description: 'Select the field to cluster the source by:',\n      category: DataCategory,\n      defaultValue: \"\",\n      settings: {\n        allowCustomValue: false,\n        options: [],\n        getOptions: async (context: FieldOverrideContext) => {\n          const options = [];\n          if (context && context.data) {\n            for (const frame of context.data) {\n              for (const field of frame.fields) {\n                const name = getFieldDisplayName(field, frame, context.data);\n                const value = name;\n                options.push({ value, label: name });\n              }\n            }\n          }\n          return Promise.resolve(options);\n        },\n      },\n      showIf: config => config.isCluster\n    })\n    .addSelect({\n      path: 'dstCluster',\n      name: 'Destination cluster',\n      description: 'Select the field to cluster the target by:',\n      category: DataCategory,\n      defaultValue: \"\",\n      settings: {\n        allowCustomValue: false,\n        options: [],\n        getOptions: async (context: FieldOverrideContext) => {\n          const options = [];\n          if (context && context.data) {\n            for (const frame of context.data) {\n              for (const field of frame.fields) {\n                const name = getFieldDisplayName(field, frame, context.data);\n                const value = name;\n                options.push({ value, label: name });\n              }\n            }\n          }\n          return Promise.resolve(options);\n        },\n      },\n      showIf: config => config.isCluster\n    })\n    .addSelect({\n      path: 'pathField',\n      name: 'Path',\n      description: 'Select the field to use as traceroute:',\n      category: DataCategory,\n      defaultValue: \"\",\n      settings: {\n        allowCustomValue: false,\n        options: [],\n        getOptions: async (context: FieldOverrideContext) => {\n          const options = [];\n          if (context && context.data) {\n            for (const frame of context.data) {\n              for (const field of frame.fields) {\n                const name = getFieldDisplayName(field, frame, context.data);\n                const value = name;\n                options.push({ value, label: name });\n              }\n            }\n          }\n          return Promise.resolve(options);\n        },\n      },\n      showIf: config => config.hopMode\n    })\n    .addSelect({\n      path: 'src',\n      name: 'Source',\n      description: 'Select the field to use as source:',\n      category: DataCategory,\n      settings: {\n        allowCustomValue: false,\n        options: [],\n        getOptions: async (context: FieldOverrideContext) => {\n          const options = [];\n          if (context && context.data) {\n            for (const frame of context.data) {\n              for (const field of frame.fields) {\n                const name = getFieldDisplayName(field, frame, context.data);\n                const value = name;\n                options.push({ value, label: name });\n              }\n            }\n          }\n          return Promise.resolve(options);\n        },\n      },\n      showIf: config => !config.hopMode\n    })\n    .addSelect({\n      path: 'dest',\n      name: 'Destination',\n      description: 'Select the field to use as target:',\n      category: DataCategory,\n      defaultValue: \"\",\n      settings: {\n        allowCustomValue: false,\n        options: [],\n        getOptions: async (context: FieldOverrideContext) => {\n          const options = [];\n          if (context && context.data) {\n            for (const frame of context.data) {\n              for (const field of frame.fields) {\n                const name = getFieldDisplayName(field, frame, context.data);\n                const value = name;\n                options.push({ value, label: name });\n              }\n            }\n          }\n          return Promise.resolve(options);\n        },\n      },\n      showIf: config => !config.hopMode\n    })\n})\n.useFieldConfig({\n  disableStandardOptions: [FieldConfigProperty.NoValue, FieldConfigProperty.Max, FieldConfigProperty.Min],\n  standardOptions: {\n    [FieldConfigProperty.Color]: {\n      settings: {\n        byValueSupport: true,\n        bySeriesSupport: true,\n        preferThresholdsMode: true,\n      },\n    },\n  },\n});\n\n\n","import { calcNodeRadius, calcStrokeWidth, getEvenlySpacedColors, getFieldDisplayNames } from \"utils\";\n\n/**\n * Takes data from Grafana query and returns it in the format needed for this panel\n *\n * @param data the data returned by the query\n * @param options the field options from the editor panel\n * @param theme needed for utility functions for example to map color strings to hex values\n * @return {uniqueNodes} list of unique nodes to be rendered on the x axis\n * @return {links} array of objects with fields source, target, sum, strokewidth where each object represents one link\n * @return {hexColors} colors converted to hex\n */\n\nexport function parsePathData(data: { series: any[] }, options: any, theme: any) { // <- should that have proper typing?\n\n  const allData = data.series[0].fields;\n  const paths = allData[0].values;\n\n  const arcWeightString = options.arcWeightSource ? allData.find((obj: { name: any; }) => obj.name === options.arcWeightSource).name : allData[allData.length -1].name\n  const arcWeightValues = allData.find((obj: { name: any; }) => obj.name === arcWeightString)?.values\n  \n  const fields = getFieldDisplayNames(allData)\n\n  const delimiter = options.delimiter === \"space\" ? \" \" : options.delimiter\n\n  /********************************** Nodes **********************************/\n\n    let uniqueNodes = Array.from([...new Set(allData[0].values.join(delimiter).split(delimiter))]).map((str, index) => ({\n      id: index,\n      name: str,\n      sum: 1,\n      radius: 5,\n      color: options.nodeColor\n    }));\n\n  /********************************** Links **********************************/\n\n    const pathColors = getEvenlySpacedColors(paths.length, theme.isDark)\n\n    let links: Array<{ source: number | undefined; target: number | undefined; path: number; arcWeightValue: number; strokeWidth: number; color: string; displayValue: string; isOverlap: boolean; mapRadiusY: number; id: number }> = [];\n\n    paths.forEach((path: string, pathIndex: number) => {\n      const pathNodes = String(path).split(' ');\n\n      for (let i = 0; i < pathNodes.length; i++) {\n        const source = uniqueNodes.find( (node: any) => node.name === pathNodes[i])?.id;\n\n        const target = uniqueNodes.find( (node: any) => node.name === pathNodes[i+1])?.id;\n        const isOverlap = links.some((link: any) => link.source === source && link.target === target);\n      \n        if(target !== undefined) {\n          const link = {\n            id: 0, \n            source, \n            target, \n            path: pathIndex,\n            arcWeightValue: arcWeightValues[pathIndex],\n            strokeWidth: 1,\n            color: pathColors[pathIndex],\n            displayValue: `${allData[allData.length -1].display(allData[allData.length -1].values[pathIndex]).text}${(allData[allData.length -1].display(allData[allData.length -1].values[pathIndex]).suffix !== undefined) ? allData[allData.length -1].display(allData[allData.length -1].values[pathIndex]).suffix : \"\"}`,\n            isOverlap,\n            mapRadiusY: 0\n          }\n          fields.forEach( field => {\n            Object.assign(link, {[field.field]: []})\n            link[field.field].push(allData.find((obj: { name: any; }) => obj.name === field.field)?.values[pathIndex])\n            const display = allData.find((obj: { name: any; }) => obj.name === field.field).display(allData.find((obj: { name: any; }) => obj.name === field.field)?.values[pathIndex])\n            const suffix = display.suffix === undefined ? \"\" : display.suffix\n            Object.assign(link, {[`${field.field}Display`]: [`${display.text} ${suffix}`]})\n          })\n          links.push(link);\n        }\n      }\n    });\n \n    links.forEach( (link: any, index: number) => {\n      link.id = index\n    })\n\n    // assign overlap index to render elliptical arc\n    const overlapLinks = links.filter(link => link.isOverlap)\n\n    const overlapGroups = [];\n    const visited = [];\n\n    for (let i = 0; i < overlapLinks.length; i++) {\n      const currentLink = overlapLinks[i];\n      const overlapGroup = [currentLink];\n      // keep track of visited links, go to next iteration if link already part of group\n      if(visited.includes(currentLink)) {\n        continue\n      }\n      for (let j = i + 1; j < overlapLinks.length; j++) {\n        const compareLink = overlapLinks[j]\n        if(currentLink.source === compareLink.source && currentLink.target === compareLink.target) {\n          overlapGroup.push(compareLink);\n          visited.push(compareLink)\n        }\n      }\n      overlapGroups.push(overlapGroup)\n    }\n      \n    // iterate over overlapGroups and assign radiusY\n    for (let i = 0; i < overlapGroups.length; i++) {\n      const currentGroup = overlapGroups[i]\n      let mapRadiusY = options.yRad\n      for (let j = 0; j < currentGroup.length; j++) {\n        const currentLink = currentGroup[j]\n        currentLink.mapRadiusY = mapRadiusY\n        mapRadiusY += options.yRad-1\n      }\n    }\n\n    \n\n  /********************************** Stroke width/ node radius **********************************/\n\n    // set range for mapping\n    const linkScaleFrom = options.arcRange?.split(\",\").map(Number)[0]\n    const linkScaleTo = options.arcRange?.split(\",\").map(Number)[1]\n\n    const minLink = Number(Math.min(...links.map(( e: any ) => e.arcWeightValue)))\n    const maxLink = Number(Math.max(...links.map(( e: any ) => e.arcWeightValue)))\n\n    for (let i = 0; i < links.length; i++) {\n      calcStrokeWidth(options.arcFromSource, options.scale, options.arcThickness, links[i], linkScaleFrom, linkScaleTo, minLink, maxLink)\n    }\n\n    calcNodeRadius(uniqueNodes, links, options)\n  /**********************************************************************************/\n  return {uniqueNodes, links, fields};\n}\n","import { calcStrokeWidth, getEvenlySpacedColors, addNodeSum, calcNodeRadius, clusterNodes, getFieldDisplayNames } from 'utils';\n\n/**\n * Takes data from Grafana query and returns it in the format needed for this panel\n *\n * @param data the data returned by the query\n * @param options the field options from the editor panel\n * @param theme needed for utility functions for example to map color strings to hex values\n * @return {uniqueNodes} list of unique nodes to be rendered on the x axis\n * @return {links} array of objects with fields source, target, arcWeightValue, strokewidth where each object represents one link\n * @return {hexColors} colors converted to hex\n */\n\nexport function parseData(data: { series: any[] }, options: any, theme: any) { // <- should that have proper typing?\n\n  const allData = data.series[0].fields;\n\n  // if src/dst not defined in options, take first/second group by default\n  const sourceString = options.src ? allData.find((obj: { name: any; }) => obj.name === options.src).name : allData[0].name;\n  const targetString = options.dest ? allData.find((obj: { name: any; }) => obj.name === options.dest).name : allData[1].name;\n  const sourceValues = allData.find((obj: { name: any; }) => obj.name === sourceString)?.values\n  const targetValues = allData.find((obj: { name: any; }) => obj.name === targetString)?.values\n  const arcWeightString = options.arcWeightSource ? allData.find((obj: { name: any; }) => obj.name === options.arcWeightSource).name : allData[allData.length -1].name\n  const arcWeightValues = allData.find((obj: { name: any; }) => obj.name === arcWeightString)?.values\n\n  const fields = getFieldDisplayNames(allData, sourceString, targetString)\n\n  const hexColors = {\n    nodeColor: theme.visualization.getColorByName(options.nodeColor),\n  }\n  \n  /********************************** Nodes **********************************/\n  \n    // get source and target arrays and create array of unique nodes from them\n    const uniqueNodes = Array.from([...new Set([...sourceValues, ...targetValues])]).map((str, index) => ({\n      id: index,\n      name: str,\n      sum: 0,\n      radius: 0,\n      cluster: \"\",\n      color: hexColors.nodeColor\n    }));\n\n  /********************************** Links **********************************/\n\n    let srcById = sourceValues.map((name: any) => {\n      const dictionaryItem = uniqueNodes.find(item => item.name === name);\n      return dictionaryItem ? dictionaryItem.id : null;\n    });\n\n    let dstById = targetValues.map((name: any) => {\n      const dictionaryItem = uniqueNodes.find(item => item.name === name);\n      return dictionaryItem ? dictionaryItem.id : null;\n    });\n\n    let links = srcById.map((element: any, index: string | number) => ({\n      srcName: sourceValues[index],\n      dstName: targetValues[index],\n      source: element,\n      target: dstById[index],\n      arcWeightValue: arcWeightValues[index],\n      strokeWidth: 0,\n      color: allData[allData.length -1].display(allData[allData.length -1].values[index]).color,\n      // for coloring the links by source, add a field with the name of the selected field\n      [options.colorConfigField]: allData.find((obj: { name: any; }) => obj.name === options.colorConfigField)?.values[index],\n    }));\n\n    //if(!options.isCluster) {\n      links.forEach((link: any, index: number) => {\n        fields.forEach( field => {\n          Object.assign(link, {[field.field]: []})\n          link[field.field].push(allData.find((obj: { name: any; }) => obj.name === field.field)?.values[index])\n          const display = allData.find((obj: { name: any; }) => obj.name === field.field).display(allData.find((obj: { name: any; }) => obj.name === field.field)?.values[index])\n          const suffix = display.suffix === undefined ? \"\" : display.suffix\n          Object.assign(link, {[`${field.field}Display`]: [`${display.text} ${suffix}`]})\n        })\n      });\n      \n    //}\n\n  /********************************** Node clustering **********************************/\n\n    if(options.isCluster) {\n      clusterNodes(uniqueNodes, links, options, theme, allData)\n    }\n\n  /********************************** Bundle overlapping links **********************************/ \n\n    if(allData.length > 3) {\n      const uniqueLinks = links.reduce((acc: any, cur: any, index: number) => {\n        const existing = acc.find((e: any) => e.source === cur.source && e.target === cur.target);\n        if (existing) {\n          fields.forEach(field => {\n            if(allData.find( (obj: any) => obj.name === field.field).state.range !== undefined) {\n              let newValue = (existing[field.field][0]) + (cur[field.field][0])\n              existing[field.field] = [newValue]\n              const display = allData.find((obj: { name: any; }) => obj.name === field.field).display(newValue)\n              existing[`${field.field}Display`] = [`${display.text} ${display.suffix}`]\n            } else {\n              if (!existing[field.field].includes(cur[field.field])) {\n                cur[field.field].forEach((fieldEntry: any) => {\n                  existing[field.field].push(fieldEntry);\n                });\n              }\n              existing[`${field.field}Display`] = existing[field.field]\n            }\n          }) \n        } else {\n          const addLink = {\n            srcName: cur.srcName,\n            dstName: cur.dstName,\n            source: cur.source,\n            target: cur.target,\n            arcWeightValue: cur.arcWeightValue,\n            displayValue: cur.displayValue,\n            strokeWidth: 0,\n            color: cur.color,\n            [options.colorConfigField]: cur[options.colorConfigField]\n          }\n          fields.forEach(field => {\n            Object.assign(addLink, {[field.field]: []})\n            addLink[field.field] = cur[field.field]\n            const display = allData.find((obj: { name: any; }) => obj.name === field.field).display(cur[field.field][0])\n            const suffix = display.suffix === undefined ? \"\" : display.suffix\n            if(allData.find( (obj: any) => obj.name === field.field).state.range !== undefined) {\n              Object.assign(addLink, {[`${field.field}Display`]: [`${display.text} ${suffix}`]})\n            } else {\n              Object.assign(addLink, {[`${field.field}Display`]: cur[field.field]})\n            }\n          })\n          acc.push(addLink);\n        }\n        return acc;\n      }, []);\n      links = uniqueLinks;\n    }\n    // accumulate nodesums after potential bundling\n    addNodeSum(links, uniqueNodes)\n    calcNodeRadius(uniqueNodes, links, options)\n\n  /********************************** Colors **********************************/ \n\n    // create groups for the field specified\n    let groups: any[] = []\n    if(options.linkColorConfig !== \"default\" && options.colorConfigField) {\n      // create unique groups according to the setting specified in options\n      groups = [...new Set(links.map(item => {\n        if (Array.isArray(item[options.colorConfigField])) {\n          return item[options.colorConfigField][item[options.colorConfigField].length - 1];\n        }\n        return item[options.colorConfigField];\n      }))].map(group => ({\n        [options.colorConfigField]: group,\n        color: \"\"\n      }));\n\n      const spacedColors = getEvenlySpacedColors(groups.length, theme.isDark)\n\n      groups.forEach( (e, i) => {\n        e.color = spacedColors[i]\n      })\n    }\n\n  /********************************** Stroke width/ node radius **********************************/\n\n    // set range for mapping\n    const linkScaleFrom = options.arcRange?.split(\",\").map(Number)[0],\n    linkScaleTo = options.arcRange?.split(\",\").map(Number)[1]\n\n    const minLink = Number(Math.min(...links.map(( e: any ) => e.arcWeightValue))),\n    maxLink = Number(Math.max(...links.map(( e: any ) => e.arcWeightValue)))\n      \n    links.forEach((e: {source: number, strokeWidth: number; arcWeightValue: number; color: string; field: string; srcName: string}, index: number) => {\n      calcStrokeWidth(options.arcFromSource, options.scale, options.arcThickness, e, linkScaleFrom, linkScaleTo, minLink, maxLink)\n      // link color by field\n      if (options.linkColorConfig === \"field\" && groups) {\n        const linkGroup = (!Array.isArray(e[options.colorConfigField])) ? e[options.colorConfigField] : e[options.colorConfigField][e[options.colorConfigField].length - 1]\n        e.color = groups.find( group => group[options.colorConfigField] === linkGroup)!.color\n      }\n    });\n    \n  /**********************************************************************************/\n  return {uniqueNodes, links, hexColors, fields};\n}\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__WEBPACK_EXTERNAL_MODULE__305__","__WEBPACK_EXTERNAL_MODULE__388__","__WEBPACK_EXTERNAL_MODULE__200__","__WEBPACK_EXTERNAL_MODULE__650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","nc","idToName","dic","find","name","getNodeTargets","links","filter","source","mapToLogRange","rangeMin","rangeMax","minLinkSum","maxLinkSum","logMinValue","Math","log10","factor","mapToLinRange","getEvenlySpacedColors","amount","darkMode","colors","lightColors","darkColors","colorIndex","calcStrokeWidth","arcFromSource","scale","arcThickness","linkScaleFrom","linkScaleTo","minLink","maxLink","strokeWidth","arcWeightValue","replaceEllipsis","label","isHighlighted","labelBoundingBox","getBoundingClientRect","width","mapRatio","labelOffsetX","Number","getAttribute","split","substring","overlap","innerHTML","resetLabel","calcNodeRadius","uniqueNodes","nodeScaleFrom","nodeRange","nodeScaleTo","minNode","min","sum","maxNode","max","forEach","radiusFromSource","radius","nodeRadius","calcBottomOffset","labels","labelHeights","Array","from","height","offsetBottom","getFieldDisplayNames","allData","sourceString","targetString","displayNames","field","displayName","state","styles","containerStyle","labelStyle","buttonStyle","top","position","toolTipStyle","box","left","background","padding","margin","opacity","text","fontSize","color","preface","panelContainerStyle","searchFieldStyle","display","inputStyle","isDarkMode","toolBarStyle","right","zoomButtonWrapper","zoomButtonStyle","borderRadius","zoomIcon","animation","toolTip","p","pos","props","parsedData","containerRef","useRef","gRef","labelRef","tooltipRef","showTooltip","setShowTooltip","useState","handleToggleTooltip","isActive","updateTooltip","sourceId","targetId","displayValue","linkId","nodeTargets","array","indexOf","string","zoom","br","graphOptions","isCluster","b","cluster","hoverLink","fields","panelContainer","querySelectorAll","panelId","mapBounds","offsetY","offsetX","toolTipDom","toolTipBounds","leftOrRight","topOrBottom","bottom","canvas","zoomState","useEffect","d3","container","current","graph","labelBox","selectAll","enter","append","attr","values","start","stop","step","_","linSpace","marginLeft","marginRight","labelsAsHtml","end","radiusX","abs","radiusY","hopMode","isOverlap","mapRadiusY","largeArcFlag","PI","l","arcOpacity","path","nodes","paths","duration","isQuery","query","queryMatches","nodeList","matches","String","toLowerCase","includes","Set","getQueryMatches","on","clientX","clientY","srcElement","has","transition","label_d","search","numericalMatches","link","node","evaluateQuery","transform","div","svg","ref","g","tooltipFontSize","toolTipSource","toolTipTarget","SearchField","input","placeholder","type","onChange","onQuery","CustomRangeSlider","suffix","onValueChange","useCallback","RangeSlider","onAfterChange","orientation","AppearanceCategory","DataCategory","ModeCategory","plugin","PanelPlugin","setQuery","setZoomState","onClick","isIncrement","isReset","theme","useTheme2","series","srcCluster","dstCluster","bucketAggs","request","targets","dataSourceConflict","src","dest","arcWeightString","arcWeightSource","arcWeightValues","delimiter","str","nodeColor","pathColors","isDark","pathIndex","pathNodes","some","assign","overlapLinks","overlapGroups","visited","currentLink","overlapGroup","j","compareLink","currentGroup","yRad","arcRange","parsePathData","sourceValues","targetValues","hexColors","visualization","getColorByName","srcById","dictionaryItem","dstById","srcName","dstName","colorConfigField","buffer","sort","clusters","spacedColors","clusterNodes","uniqueLinks","reduce","acc","cur","existing","range","newValue","fieldEntry","addLink","nodeSums","addNodeSum","groups","linkColorConfig","isArray","group","linkGroup","parseData","error","console","panelWidth","maxArcHeight","maxNodesCrossed","maxArc","nodesCrossed","curr","calcDiagramHeight","textColor","primary","Arc","button","img","alt","setPanelOptions","builder","addBooleanSwitch","defaultValue","category","showIf","config","addSelect","description","settings","allowCustomValue","getOptions","context","frame","Promise","resolve","addSliderInput","getFieldDisplayName","addColorPicker","addTextInput","addCustomEditor","editor","useFieldConfig","disableStandardOptions","FieldConfigProperty","standardOptions","byValueSupport","bySeriesSupport","preferThresholdsMode"],"sourceRoot":""}