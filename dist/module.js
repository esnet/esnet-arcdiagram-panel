/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
define(["@grafana/data","react","@grafana/ui","d3"], (__WEBPACK_EXTERNAL_MODULE__grafana_data__, __WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE__grafana_ui__, __WEBPACK_EXTERNAL_MODULE_d3__) => { return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./SimplePanel.tsx":
/*!*************************!*\
  !*** ./SimplePanel.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SimplePanel\": () => (/* binding */ SimplePanel)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @grafana/ui */ \"@grafana/ui\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_grafana_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_Arc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Arc */ \"./components/Arc.tsx\");\n/* harmony import */ var _components_SearchField__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/SearchField */ \"./components/SearchField.tsx\");\n/* harmony import */ var dataParser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dataParser */ \"./dataParser.ts\");\n/* harmony import */ var styles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! styles */ \"./styles.ts\");\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! utils */ \"./utils.ts\");\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _object_spread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n    return target;\n}\n\n\n\n\n\n\n\n/**\n * Grafana Arc diagram panel\n *\n * @param {*} { options, data, width, height, id }\n * @return { Arc } Arc diagram\n */ const SimplePanel = ({ options , data , width , height , id  })=>{\n    const [query, setQuery] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    let graphOptions = _object_spread({}, options);\n    const theme = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_1__.useTheme2)();\n    if (data.series[0].fields.length > 4) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, \"4th group by not supported\");\n    }\n    // check if source equals dst \n    const source = options.src ? data.series[0].fields.find((obj)=>obj.name === options.src).name : data.series[0].fields[0].name;\n    const target = options.dest ? data.series[0].fields.find((obj)=>obj.name === options.dest).name : data.series[0].fields[1].name;\n    // catch errors\n    if (source === target) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, \"Source equals target\");\n    }\n    let parsedData = {\n        uniqueNodes: [],\n        links: []\n    };\n    try {\n        parsedData = (0,dataParser__WEBPACK_IMPORTED_MODULE_4__.parseData)(data, graphOptions, theme);\n    } catch (error) {\n        console.error('parsing error: ', error);\n    }\n    // check if diagram fits panel\n    if ((0,utils__WEBPACK_IMPORTED_MODULE_6__.calcDiagramHeight)(parsedData.uniqueNodes, parsedData.links, width) > height) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, \"Increase panels height to fit diagram\");\n    }\n    const textColor = theme.colors.text.primary;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_5__.styles.panelContainerStyle\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Arc__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        textColor: textColor,\n        parsedData: parsedData,\n        graphOptions: graphOptions,\n        width: width,\n        height: height,\n        query: query,\n        isDarkMode: theme.isDark,\n        panelId: id\n    }), options.search && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_SearchField__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        onQuery: setQuery,\n        nodeList: parsedData.uniqueNodes,\n        isDarkMode: theme.isDark\n    }));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9TaW1wbGVQYW5lbC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFHQTtBQUNMO0FBQ2dCO0FBQ1o7QUFDUDtBQUNVO0FBRzFDOzs7OztDQUtDLEdBQ00sTUFBTVEsY0FBK0IsQ0FBQyxFQUFFQyxRQUFPLEVBQUVDLEtBQUksRUFBRUMsTUFBSyxFQUFFQyxPQUFNLEVBQUVDLEdBQUUsRUFBTyxHQUFLO0lBQ3pGLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHZCwrQ0FBUUEsQ0FBQztJQUVuQyxJQUFJZSxlQUFlLG1CQUNkUDtJQUdMLE1BQU1RLFFBQVFmLHNEQUFTQTtJQUV2QixJQUFJUSxLQUFLUSxNQUFNLENBQUMsRUFBRSxDQUFDQyxNQUFNLENBQUNDLE1BQU0sR0FBRyxHQUFHO1FBQ3BDLHFCQUFPLDJEQUFDQyxhQUFJO0lBQ2QsQ0FBQztJQUVELDhCQUE4QjtJQUM5QixNQUFNQyxTQUFTYixRQUFRYyxHQUFHLEdBQUdiLEtBQUtRLE1BQU0sQ0FBQyxFQUFFLENBQUNDLE1BQU0sQ0FBQ0ssSUFBSSxDQUFDLENBQUNDLE1BQXdCQSxJQUFJQyxJQUFJLEtBQUtqQixRQUFRYyxHQUFHLEVBQUVHLElBQUksR0FBR2hCLEtBQUtRLE1BQU0sQ0FBQyxFQUFFLENBQUNDLE1BQU0sQ0FBQyxFQUFFLENBQUNPLElBQUk7SUFDL0ksTUFBTUMsU0FBU2xCLFFBQVFtQixJQUFJLEdBQUdsQixLQUFLUSxNQUFNLENBQUMsRUFBRSxDQUFDQyxNQUFNLENBQUNLLElBQUksQ0FBQyxDQUFDQyxNQUF3QkEsSUFBSUMsSUFBSSxLQUFLakIsUUFBUW1CLElBQUksRUFBRUYsSUFBSSxHQUFHaEIsS0FBS1EsTUFBTSxDQUFDLEVBQUUsQ0FBQ0MsTUFBTSxDQUFDLEVBQUUsQ0FBQ08sSUFBSTtJQUVqSixlQUFlO0lBQ2YsSUFBSUosV0FBV0ssUUFBUTtRQUNyQixxQkFBTywyREFBQ04sYUFBSTtJQUNkLENBQUM7SUFFRCxJQUFJUSxhQUFtRDtRQUNyREMsYUFBYSxFQUFFO1FBQ2ZDLE9BQU8sRUFBRTtJQUNYO0lBRUEsSUFBSTtRQUNGRixhQUFheEIscURBQVNBLENBQUNLLE1BQU1NLGNBQWNDO0lBQzdDLEVBQUUsT0FBT2UsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsbUJBQW1CQTtJQUNuQztJQUVBLDhCQUE4QjtJQUM5QixJQUFJekIsd0RBQWlCQSxDQUFDc0IsV0FBV0MsV0FBVyxFQUFFRCxXQUFXRSxLQUFLLEVBQUVwQixTQUFTQyxRQUFRO1FBQy9FLHFCQUFPLDJEQUFDUyxhQUFJO0lBQ2QsQ0FBQztJQUVELE1BQU1hLFlBQVlqQixNQUFNa0IsTUFBTSxDQUFDQyxJQUFJLENBQUNDLE9BQU87SUFFM0MscUJBQ0UsMkRBQUNoQjtRQUFJaUIsT0FBT2hDLDhEQUEwQjtxQkFDcEMsMkRBQUNILHVEQUFHQTtRQUNGK0IsV0FBV0E7UUFDWEwsWUFBWUE7UUFDWmIsY0FBY0E7UUFDZEwsT0FBT0E7UUFDUEMsUUFBUUE7UUFDUkUsT0FBT0E7UUFDUDBCLFlBQVl2QixNQUFNd0IsTUFBTTtRQUN4QkMsU0FBUzdCO1FBRVZKLFFBQVFrQyxNQUFNLGtCQUFJLDJEQUFDdkMsK0RBQVdBO1FBQzdCd0MsU0FBUzdCO1FBQ1Q4QixVQUFVaEIsV0FBV0MsV0FBVztRQUNoQ1UsWUFBWXZCLE1BQU13QixNQUFNOztBQUtoQyxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vU2ltcGxlUGFuZWwudHN4P2Y0MGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUGFuZWxQcm9wcyB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuaW1wb3J0IHsgU2ltcGxlT3B0aW9ucyB9IGZyb20gJ3R5cGVzJztcbmltcG9ydCB7IHVzZVRoZW1lMiB9IGZyb20gJ0BncmFmYW5hL3VpJztcbmltcG9ydCBBcmMgZnJvbSAnLi9jb21wb25lbnRzL0FyYyc7XG5pbXBvcnQgU2VhcmNoRmllbGQgZnJvbSAnLi9jb21wb25lbnRzL1NlYXJjaEZpZWxkJztcbmltcG9ydCB7IHBhcnNlRGF0YSB9IGZyb20gJ2RhdGFQYXJzZXInO1xuaW1wb3J0IHsgc3R5bGVzIH0gZnJvbSAnc3R5bGVzJztcbmltcG9ydCB7IGNhbGNEaWFncmFtSGVpZ2h0IH0gZnJvbSAndXRpbHMnO1xuXG5pbnRlcmZhY2UgUHJvcHMgZXh0ZW5kcyBQYW5lbFByb3BzPFNpbXBsZU9wdGlvbnM+IHt9XG4vKipcbiAqIEdyYWZhbmEgQXJjIGRpYWdyYW0gcGFuZWxcbiAqXG4gKiBAcGFyYW0geyp9IHsgb3B0aW9ucywgZGF0YSwgd2lkdGgsIGhlaWdodCwgaWQgfVxuICogQHJldHVybiB7IEFyYyB9IEFyYyBkaWFncmFtXG4gKi9cbmV4cG9ydCBjb25zdCBTaW1wbGVQYW5lbDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgb3B0aW9ucywgZGF0YSwgd2lkdGgsIGhlaWdodCwgaWQgfTogYW55KSA9PiB7XG4gIGNvbnN0IFtxdWVyeSwgc2V0UXVlcnldID0gdXNlU3RhdGUoXCJcIik7XG5cbiAgbGV0IGdyYXBoT3B0aW9ucyA9IHtcbiAgICAuLi5vcHRpb25zLFxuICB9O1xuICBcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZTIoKTtcblxuICBpZiAoZGF0YS5zZXJpZXNbMF0uZmllbGRzLmxlbmd0aCA+IDQpIHtcbiAgICByZXR1cm4gPGRpdj40dGggZ3JvdXAgYnkgbm90IHN1cHBvcnRlZDwvZGl2PjtcbiAgfVxuXG4gIC8vIGNoZWNrIGlmIHNvdXJjZSBlcXVhbHMgZHN0IFxuICBjb25zdCBzb3VyY2UgPSBvcHRpb25zLnNyYyA/IGRhdGEuc2VyaWVzWzBdLmZpZWxkcy5maW5kKChvYmo6IHsgbmFtZTogYW55OyB9KSA9PiBvYmoubmFtZSA9PT0gb3B0aW9ucy5zcmMpLm5hbWUgOiBkYXRhLnNlcmllc1swXS5maWVsZHNbMF0ubmFtZTtcbiAgY29uc3QgdGFyZ2V0ID0gb3B0aW9ucy5kZXN0ID8gZGF0YS5zZXJpZXNbMF0uZmllbGRzLmZpbmQoKG9iajogeyBuYW1lOiBhbnk7IH0pID0+IG9iai5uYW1lID09PSBvcHRpb25zLmRlc3QpLm5hbWUgOiBkYXRhLnNlcmllc1swXS5maWVsZHNbMV0ubmFtZTtcblxuICAvLyBjYXRjaCBlcnJvcnNcbiAgaWYgKHNvdXJjZSA9PT0gdGFyZ2V0KSB7XG4gICAgcmV0dXJuIDxkaXY+U291cmNlIGVxdWFscyB0YXJnZXQ8L2Rpdj47XG4gIH1cblxuICBsZXQgcGFyc2VkRGF0YTogeyB1bmlxdWVOb2RlczogYW55W107IGxpbmtzOiBhbnlbXSB9ID0ge1xuICAgIHVuaXF1ZU5vZGVzOiBbXSxcbiAgICBsaW5rczogW11cbiAgfTtcblxuICB0cnkge1xuICAgIHBhcnNlZERhdGEgPSBwYXJzZURhdGEoZGF0YSwgZ3JhcGhPcHRpb25zLCB0aGVtZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcigncGFyc2luZyBlcnJvcjogJywgZXJyb3IpO1xuICB9XG5cbiAgLy8gY2hlY2sgaWYgZGlhZ3JhbSBmaXRzIHBhbmVsXG4gIGlmIChjYWxjRGlhZ3JhbUhlaWdodChwYXJzZWREYXRhLnVuaXF1ZU5vZGVzLCBwYXJzZWREYXRhLmxpbmtzLCB3aWR0aCkgPiBoZWlnaHQpIHtcbiAgICByZXR1cm4gPGRpdj5JbmNyZWFzZSBwYW5lbHMgaGVpZ2h0IHRvIGZpdCBkaWFncmFtPC9kaXY+O1xuICB9XG5cbiAgY29uc3QgdGV4dENvbG9yID0gdGhlbWUuY29sb3JzLnRleHQucHJpbWFyeTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgc3R5bGU9e3N0eWxlcy5wYW5lbENvbnRhaW5lclN0eWxlfT5cbiAgICAgIDxBcmNcbiAgICAgICAgdGV4dENvbG9yPXt0ZXh0Q29sb3J9XG4gICAgICAgIHBhcnNlZERhdGE9e3BhcnNlZERhdGF9XG4gICAgICAgIGdyYXBoT3B0aW9ucz17Z3JhcGhPcHRpb25zfVxuICAgICAgICB3aWR0aD17d2lkdGh9XG4gICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICBxdWVyeT17cXVlcnl9XG4gICAgICAgIGlzRGFya01vZGU9e3RoZW1lLmlzRGFya31cbiAgICAgICAgcGFuZWxJZD17aWR9XG4gICAgICA+PC9BcmM+XG4gICAgICB7b3B0aW9ucy5zZWFyY2ggJiYgPFNlYXJjaEZpZWxkXG4gICAgICAgIG9uUXVlcnk9e3NldFF1ZXJ5fVxuICAgICAgICBub2RlTGlzdD17cGFyc2VkRGF0YS51bmlxdWVOb2Rlc31cbiAgICAgICAgaXNEYXJrTW9kZT17dGhlbWUuaXNEYXJrfVxuICAgICAgPjwvU2VhcmNoRmllbGQ+fVxuICAgICAgXG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5cblxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VUaGVtZTIiLCJBcmMiLCJTZWFyY2hGaWVsZCIsInBhcnNlRGF0YSIsInN0eWxlcyIsImNhbGNEaWFncmFtSGVpZ2h0IiwiU2ltcGxlUGFuZWwiLCJvcHRpb25zIiwiZGF0YSIsIndpZHRoIiwiaGVpZ2h0IiwiaWQiLCJxdWVyeSIsInNldFF1ZXJ5IiwiZ3JhcGhPcHRpb25zIiwidGhlbWUiLCJzZXJpZXMiLCJmaWVsZHMiLCJsZW5ndGgiLCJkaXYiLCJzb3VyY2UiLCJzcmMiLCJmaW5kIiwib2JqIiwibmFtZSIsInRhcmdldCIsImRlc3QiLCJwYXJzZWREYXRhIiwidW5pcXVlTm9kZXMiLCJsaW5rcyIsImVycm9yIiwiY29uc29sZSIsInRleHRDb2xvciIsImNvbG9ycyIsInRleHQiLCJwcmltYXJ5Iiwic3R5bGUiLCJwYW5lbENvbnRhaW5lclN0eWxlIiwiaXNEYXJrTW9kZSIsImlzRGFyayIsInBhbmVsSWQiLCJzZWFyY2giLCJvblF1ZXJ5Iiwibm9kZUxpc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./SimplePanel.tsx\n");

/***/ }),

/***/ "./components/Arc.tsx":
/*!****************************!*\
  !*** ./components/Arc.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3 */ \"d3\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(d3__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! utils */ \"./utils.ts\");\n/* harmony import */ var styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styles */ \"./styles.ts\");\n\n\n\n\nlet toolTip = {\n    source: \"\",\n    target: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null),\n    sum: \"\",\n    field: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null),\n    pos: [\n        0,\n        0\n    ]\n};\nfunction Arc(props) {\n    let uniqueNodes = props.parsedData.uniqueNodes;\n    let links = props.parsedData.links;\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), gRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), labelRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), tooltipRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [showTooltip, setShowTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const handleToggleTooltip = (isActive)=>{\n        setShowTooltip(isActive);\n    };\n    function updateTooltip(pos, isActive, sourceId, targetId, displayValue) {\n        // when only sourceId is passed, display node and its targets\n        if (targetId === undefined) {\n            toolTip.source = (0,utils__WEBPACK_IMPORTED_MODULE_2__.idToName)(sourceId, uniqueNodes);\n            // get targets for passed nodes as strings\n            toolTip.target = (0,utils__WEBPACK_IMPORTED_MODULE_2__.getNodeTargets)({\n                id: sourceId,\n                links\n            }).map((id)=>(0,utils__WEBPACK_IMPORTED_MODULE_2__.idToName)(id, uniqueNodes)).filter((value, index, array)=>array.indexOf(value) === index).map((string, index)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n                    style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.toolTipStyle.text,\n                    key: index\n                }, string, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"br\", null)));\n            // reset metric and field  \n            toolTip.sum = \"\";\n            toolTip.field = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null);\n        } else {\n            toolTip.source = (0,utils__WEBPACK_IMPORTED_MODULE_2__.idToName)(sourceId, uniqueNodes);\n            toolTip.target = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n                style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.toolTipStyle.text\n            }, (0,utils__WEBPACK_IMPORTED_MODULE_2__.idToName)(targetId, uniqueNodes));\n            toolTip.sum = displayValue;\n            toolTip.field = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"b\", {\n                style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.toolTipStyle.preface\n            }, props.parsedData.additionalField), links.find((item)=>item.source === sourceId && item.target === targetId).field.map((string, index)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n                    style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.toolTipStyle.text,\n                    key: index\n                }, string, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"br\", null))));\n        }\n        // toggle tooltip\n        handleToggleTooltip(isActive);\n        // update position\n        const panelContainer = document.querySelectorAll(`[data-panelid=\"${props.panelId}\"]`)[0];\n        console.log(\"here\");\n        if (panelContainer !== undefined) {\n            console.log(\"container\");\n            const mapBounds = panelContainer.getBoundingClientRect();\n            let offsetY = pos[1] - mapBounds.top, offsetX = pos[0] - mapBounds.left;\n            const toolTipDom = document.querySelectorAll(\".tooltip\")[0], toolTipBounds = toolTipDom.getBoundingClientRect();\n            let leftOrRight = \"left\";\n            if (offsetX + toolTipBounds.right > mapBounds.right) {\n                leftOrRight = \"right\";\n                offsetX = mapBounds.right - pos[0];\n            }\n            let topOrBottom = \"top\";\n            if (offsetY + toolTipBounds.bottom - 350 > mapBounds.bottom) {\n                topOrBottom = \"bottom\";\n                offsetY = mapBounds.bottom - pos[1];\n            }\n            if (topOrBottom === \"top\") {\n                toolTipDom.style.top = `${offsetY}px`;\n            } else {\n                toolTipDom.style.bottom = `${offsetY}px`;\n            }\n            if (leftOrRight === \"left\") {\n                toolTipDom.style.left = `${offsetX}px`;\n            } else {\n                toolTipDom.style.right = `${offsetX}px`;\n            }\n        }\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // removes the graph if it exists in the dom so it gets rendered with updated dimensions\n        d3__WEBPACK_IMPORTED_MODULE_1__.selectAll(`[data-panelid=\"${props.panelId}\"] circle, [data-panelid=\"${props.panelId}\"] path, [data-panelid=\"${props.panelId}\"] text`).remove();\n        const width = props.width, height = props.height;\n        const container = containerRef.current, graph = gRef.current, labelBox = labelRef.current;\n        // render labels\n        const text = d3__WEBPACK_IMPORTED_MODULE_1__.select(labelBox).selectAll(`[data-panelid=\"${props.panelId}\"] text`).data(uniqueNodes);\n        text.enter().append(\"text\")// if node has large radius, offset the label for readability\n        .attr(\"x\", (d)=>{\n            return uniqueNodes.find((e)=>e.id === d.id).radius >= 5 ? -(uniqueNodes.find((e)=>e.id === d.id).radius * 2) : -10;\n        }).attr(\"y\", (d)=>{\n            return uniqueNodes.find((e)=>e.id === d.id).radius >= 5 ? uniqueNodes.find((e)=>e.id === d.id).radius * 2 : 10;\n        }).text((d, i)=>uniqueNodes[i].name).style(\"text-anchor\", \"end\").attr('fill', ()=>{\n            return props.isDarkMode ? \"white\" : \"black\";\n        }).attr('font-size', 10).attr('transform', (d, i)=>\"translate(\" + 0 + \",\" + height + \")rotate(-45)\").style(\"margin-right\", \"5px\").attr('name', (d, i)=>{\n            return uniqueNodes[i].name;\n        }).attr('id', (d, i)=>{\n            return i;\n        });\n        // after the labels are rendered, we can find out the amount of margin we need to apply\n        // from the bottom and left so that the diagram is readable. The amount is being calculated from\n        // the boundingbox of the largest highlighted label and the most left label\n        let offsetBottom = Math.max(...Array.from($(\"text\"), (text)=>text.getBoundingClientRect().height));\n        // Map to highlighted labels (size increases by 60%)\n        offsetBottom *= 1.6;\n        // get array of equally spaced values for positioning of graph on x axis\n        const values = (0,utils__WEBPACK_IMPORTED_MODULE_2__.linSpace)(50, width - 50, uniqueNodes.length);\n        // Update the labels position\n        d3__WEBPACK_IMPORTED_MODULE_1__.selectAll(`[data-panelid=\"${props.panelId}\"] text`).attr('transform', (d, i)=>\"translate(\" + values[i] + \",\" + (height - offsetBottom) + \")rotate(-45)\");\n        // check if label is out of bounds\n        const labelsAsHtml = document.getElementsByTagName(\"text\");\n        Array.from(labelsAsHtml).forEach((element)=>{\n            (0,utils__WEBPACK_IMPORTED_MODULE_2__.replaceEllipsis)(element, false);\n        });\n        if (props.graphOptions.search) {\n            (0,utils__WEBPACK_IMPORTED_MODULE_2__.evaluateQuery)(props.query, uniqueNodes, labelsAsHtml);\n        }\n        // render nodes\n        const svg = d3__WEBPACK_IMPORTED_MODULE_1__.select(container).selectAll(`[data-panelid=\"${props.panelId}\"] circle`).data(uniqueNodes);\n        svg.enter().append(\"circle\").attr(\"cx\", (d, i)=>values[i]).attr(\"cy\", height - offsetBottom).attr(\"r\", (n)=>{\n            return n === null || n === void 0 ? void 0 : n.radius;\n        }).style(\"fill\", props.parsedData.hexColors.nodeColor).attr(\"id\", (d, i)=>uniqueNodes[i].id).attr(\"name\", (d, i)=>uniqueNodes[i].name).attr(\"radius\", (d, i)=>uniqueNodes[i].radius);\n        // render links\n        const g = d3__WEBPACK_IMPORTED_MODULE_1__.select(graph).selectAll(`[data-panelid=\"${props.panelId}\"] path`).data(links);\n        g.enter().append('path').attr('d', function(d, i) {\n            const start = values[links[i].source];\n            const end = values[links[i].target];\n            return [\n                'M',\n                start,\n                height - offsetBottom,\n                'A',\n                (start - end) / 2,\n                ',',\n                (start - end) / 2,\n                0,\n                0,\n                ',',\n                start < end ? 1 : 0,\n                end,\n                ',',\n                height - offsetBottom\n            ].join(' ');\n        }).style(\"fill\", \"none\").attr(\"stroke\", (l)=>{\n            return l === null || l === void 0 ? void 0 : l.color;\n        }).attr(\"id\", \"arc\").attr(\"stroke-width\", (l)=>{\n            return l === null || l === void 0 ? void 0 : l.strokeWidth;\n        }).style(\"stroke-opacity\", props.graphOptions.arcOpacity).attr(\"source\", (d, i)=>links[i].source).attr(\"target\", (d, i)=>links[i].target).attr(\"sum\", (d, i)=>links[i].sum).attr(\"displayValue\", (d, i)=>links[i].displayValue);\n        /********************************** Highlighting **********************************/ const nodes = d3__WEBPACK_IMPORTED_MODULE_1__.selectAll(`[data-panelid=\"${props.panelId}\"] circle`);\n        const paths = d3__WEBPACK_IMPORTED_MODULE_1__.selectAll(`[data-panelid=\"${props.panelId}\"] path`);\n        const labels = d3__WEBPACK_IMPORTED_MODULE_1__.selectAll(`[data-panelid=\"${props.panelId}\"] text`);\n        const duration = 200;\n        nodes.on(\"mouseover\", function(d) {\n            // Tooltip\n            updateTooltip([\n                d.clientX,\n                d.clientY\n            ], true, Number(d.srcElement.id));\n            labelsAsHtml[d.srcElement.id].setAttribute(\"name\", labelsAsHtml[d.srcElement.id].innerHTML);\n            const nodeTargets = (0,utils__WEBPACK_IMPORTED_MODULE_2__.getNodeTargets)({\n                id: Number(d.srcElement.id),\n                links\n            });\n            // add ellipsis for node being hovered over & target nodes\n            (0,utils__WEBPACK_IMPORTED_MODULE_2__.replaceEllipsis)(labelsAsHtml[d.srcElement.id], true);\n            nodeTargets.forEach((e)=>{\n                (0,utils__WEBPACK_IMPORTED_MODULE_2__.replaceEllipsis)(labelsAsHtml[e], true);\n            });\n            nodes.style(\"opacity\", (n)=>{\n                return nodeTargets.includes(n.id) ? 1 : 0.5;\n            }).transition().attr(\"r\", (n)=>{\n                return nodeTargets.includes(n.id) ? uniqueNodes[n.id].radius * 2 : uniqueNodes[n.id].radius;\n            }).duration(duration);\n            d3__WEBPACK_IMPORTED_MODULE_1__.select(this).style(\"opacity\", 1).transition().duration(duration).attr(\"r\", uniqueNodes[d.srcElement.id].radius * 2);\n            paths.transition().style('stroke-opacity', (l)=>{\n                /* eslint-disable eqeqeq */ return d.srcElement.id == (l === null || l === void 0 ? void 0 : l.source) ? props.graphOptions.arcOpacity : props.graphOptions.arcOpacity * .5;\n            }).attr('stroke-width', (l)=>{\n                /* eslint-disable eqeqeq */ return d.srcElement.id == (l === null || l === void 0 ? void 0 : l.source) ? (l === null || l === void 0 ? void 0 : l.strokeWidth) * 2 : l === null || l === void 0 ? void 0 : l.strokeWidth;\n            }).duration(duration);\n            labels.transition().duration(duration).attr(\"font-size\", (label_d)=>{\n                return label_d.name === d.srcElement.getAttribute(\"name\") || nodeTargets.includes(label_d.id) ? 16 : 10;\n            }).style(\"opacity\", (label_d)=>{\n                return label_d.name === d.srcElement.getAttribute(\"name\") || nodeTargets.includes(label_d.id) ? 1 : .1;\n            });\n        }).on('mouseout', function(d) {\n            const nodeTargets = (0,utils__WEBPACK_IMPORTED_MODULE_2__.getNodeTargets)({\n                id: Number(d.srcElement.id),\n                links\n            });\n            (0,utils__WEBPACK_IMPORTED_MODULE_2__.resetLabel)(labelsAsHtml[d.srcElement.id]);\n            nodeTargets.forEach((e)=>{\n                (0,utils__WEBPACK_IMPORTED_MODULE_2__.resetLabel)(labelsAsHtml[e]);\n            });\n            handleToggleTooltip(false);\n            nodes.transition().duration(duration).attr(\"r\", (n)=>{\n                return uniqueNodes[n.id].radius;\n            }).style('opacity', 1);\n            d3__WEBPACK_IMPORTED_MODULE_1__.select(this).transition().duration(duration).attr(\"r\", uniqueNodes[d.srcElement.id].radius);\n            paths.transition().duration(duration).style('stroke-opacity', props.graphOptions.arcOpacity).attr('stroke-width', (l)=>{\n                return l === null || l === void 0 ? void 0 : l.strokeWidth;\n            });\n            labels.transition().duration(duration).attr(\"font-size\", 10).style(\"opacity\", 1);\n        });\n        /********************************** Link tooltip **********************************/ paths.on(\"mouseover\", function(d) {\n            updateTooltip([\n                d.clientX,\n                d.clientY\n            ], true, Number(d.srcElement.getAttribute(\"source\")), Number(d.srcElement.getAttribute(\"target\")), d.srcElement.getAttribute(\"displayValue\"));\n            paths.style(\"opacity\", props.graphOptions.arcOpacity * 0.5).transition().duration(duration);\n            d3__WEBPACK_IMPORTED_MODULE_1__.select(this).transition().style('opacity', props.graphOptions.arcOpacity).duration(duration);\n        }).on('mouseout', function(d) {\n            handleToggleTooltip(false);\n            paths.style(\"opacity\", props.graphOptions.arcOpacity).transition().duration(duration);\n            d3__WEBPACK_IMPORTED_MODULE_1__.select(this).transition().style('opacity', props.graphOptions.arcOpacity).duration(duration);\n        });\n    /* eslint-disable react-hooks/exhaustive-deps */ }, [\n        props.graphOptions,\n        links,\n        props.height,\n        props.parsedData.hexColors.nodeColor,\n        props.width,\n        uniqueNodes\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.containerStyle\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.containerStyle,\n        ref: containerRef\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.containerStyle,\n        ref: gRef\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n        className: \"text-container\",\n        style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.labelStyle,\n        ref: labelRef\n    })), showTooltip && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: tooltipRef,\n        style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.toolTipStyle.box,\n        className: \"tooltip\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.toolTipStyle.text\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"b\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.toolTipStyle.preface\n    }, props.graphOptions.toolTipSource), \" \", \" \", toolTip.source), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.toolTipStyle.text\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"b\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.toolTipStyle.preface\n    }, props.graphOptions.toolTipTarget), toolTip.target), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.toolTipStyle.text\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"b\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.toolTipStyle.preface\n    }, props.graphOptions.toolTipMetric), \" \", toolTip.sum), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_3__.styles.toolTipStyle.text\n    }, \" \", toolTip.field)));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Arc);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Arc.tsx\n");

/***/ }),

/***/ "./components/CustomRangeSlider.tsx":
/*!******************************************!*\
  !*** ./components/CustomRangeSlider.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CustomRangeSlider\": () => (/* binding */ CustomRangeSlider)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @grafana/ui */ \"@grafana/ui\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_grafana_ui__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst CustomRangeSlider = ({ value , onChange , item , suffix  })=>{\n    const onValueChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value)=>{\n        onChange(String(value));\n    }, [\n        onChange\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_1__.RangeSlider, {\n        min: 1,\n        max: 50,\n        onAfterChange: onValueChange,\n        onChange: onValueChange,\n        orientation: \"horizontal\",\n        value: [\n            1,\n            15\n        ]\n    }));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0N1c3RvbVJhbmdlU2xpZGVyLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFzRDtBQUNaO0FBUW5DLE1BQU1HLG9CQUFxQyxDQUFDLEVBQUVDLE1BQUssRUFBRUMsU0FBUSxFQUFFQyxLQUFJLEVBQUVDLE9BQU0sRUFBRSxHQUFLO0lBRXZGLE1BQU1DLGdCQUFnQlAsa0RBQVdBLENBQy9CLENBQUNHLFFBQWdDO1FBQy9CQyxTQUFTSSxPQUFPTDtJQUNsQixHQUVBO1FBQUNDO0tBQVM7SUFHWixxQkFDRSwyREFBQ0ssMkJBQ0MsMkRBQUNSLG9EQUFXQTtRQUNSUyxLQUFLO1FBQ0xDLEtBQUs7UUFDTEMsZUFBZUw7UUFDZkgsVUFBVUc7UUFDVk0sYUFBWTtRQUNaVixPQUFPO1lBQ0g7WUFDQTtTQUNIOztBQUlYLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL0N1c3RvbVJhbmdlU2xpZGVyLnRzeD9hOWExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBSZWFjdE5vZGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUmFuZ2VTbGlkZXIgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5pbXBvcnQgeyBTdGFuZGFyZEVkaXRvclByb3BzLCBTdHJpbmdGaWVsZENvbmZpZ1NldHRpbmdzIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5cblxuaW50ZXJmYWNlIFByb3BzIGV4dGVuZHMgU3RhbmRhcmRFZGl0b3JQcm9wczxzdHJpbmcsIFN0cmluZ0ZpZWxkQ29uZmlnU2V0dGluZ3M+IHtcbiAgc3VmZml4PzogUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgY29uc3QgQ3VzdG9tUmFuZ2VTbGlkZXI6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHZhbHVlLCBvbkNoYW5nZSwgaXRlbSwgc3VmZml4IH0pID0+IHtcblxuICBjb25zdCBvblZhbHVlQ2hhbmdlID0gdXNlQ2FsbGJhY2soXG4gICAgKHZhbHVlOiBudW1iZXJbXSB8IHVuZGVmaW5lZCkgPT4ge1xuICAgICAgb25DaGFuZ2UoU3RyaW5nKHZhbHVlKSlcbiAgICB9LFxuICAgIFxuICAgIFtvbkNoYW5nZV1cbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8UmFuZ2VTbGlkZXJcbiAgICAgICAgICBtaW49ezF9XG4gICAgICAgICAgbWF4PXs1MH1cbiAgICAgICAgICBvbkFmdGVyQ2hhbmdlPXtvblZhbHVlQ2hhbmdlfVxuICAgICAgICAgIG9uQ2hhbmdlPXtvblZhbHVlQ2hhbmdlfVxuICAgICAgICAgIG9yaWVudGF0aW9uPVwiaG9yaXpvbnRhbFwiXG4gICAgICAgICAgdmFsdWU9e1tcbiAgICAgICAgICAgICAgMSxcbiAgICAgICAgICAgICAgMTVcbiAgICAgICAgICBdfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtcblxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlQ2FsbGJhY2siLCJSYW5nZVNsaWRlciIsIkN1c3RvbVJhbmdlU2xpZGVyIiwidmFsdWUiLCJvbkNoYW5nZSIsIml0ZW0iLCJzdWZmaXgiLCJvblZhbHVlQ2hhbmdlIiwiU3RyaW5nIiwiZGl2IiwibWluIiwibWF4Iiwib25BZnRlckNoYW5nZSIsIm9yaWVudGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/CustomRangeSlider.tsx\n");

/***/ }),

/***/ "./components/SearchField.tsx":
/*!************************************!*\
  !*** ./components/SearchField.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SearchField)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styles */ \"./styles.ts\");\n\n\nfunction SearchField(props) {\n    const handleChange = (e)=>{\n        props.onQuery(e.target.value);\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_1__.styles.searchFieldStyle\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_1__.styles.inputStyle(props.isDarkMode),\n        type: \"text\",\n        name: \"name\",\n        onChange: handleChange\n    }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1NlYXJjaEZpZWxkLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBDO0FBQ1g7QUFFaEIsU0FBU0UsWUFBWUMsS0FBVSxFQUFFO0lBRTVDLE1BQU1DLGVBQWUsQ0FBQ0MsSUFBcUM7UUFDdkRGLE1BQU1HLE9BQU8sQ0FBQ0QsRUFBRUUsTUFBTSxDQUFDQyxLQUFLO0lBQ2hDO0lBRUEscUJBQ0UsMkRBQUNDO1FBQUlDLE9BQU9ULDJEQUF1QjtxQkFDakMsMkRBQUNXO1FBQU1GLE9BQU9ULHFEQUFpQixDQUFDRSxNQUFNVyxVQUFVO1FBQUdDLE1BQUs7UUFBT0MsTUFBSztRQUFPQyxVQUFVYjs7QUFHN0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NvbXBvbmVudHMvU2VhcmNoRmllbGQudHN4PzlkZTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENoYW5nZUV2ZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBzdHlsZXMgfSBmcm9tICdzdHlsZXMnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNlYXJjaEZpZWxkKHByb3BzOiBhbnkpIHtcblxuICAgIGNvbnN0IGhhbmRsZUNoYW5nZSA9IChlOiBDaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgICAgICBwcm9wcy5vblF1ZXJ5KGUudGFyZ2V0LnZhbHVlKVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuc2VhcmNoRmllbGRTdHlsZX0+XG4gICAgICAgIDxpbnB1dCBzdHlsZT17c3R5bGVzLmlucHV0U3R5bGUocHJvcHMuaXNEYXJrTW9kZSl9IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cIm5hbWVcIiBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfS8+XG4gICAgICA8L2Rpdj5cbiAgICApXG59XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJzdHlsZXMiLCJTZWFyY2hGaWVsZCIsInByb3BzIiwiaGFuZGxlQ2hhbmdlIiwiZSIsIm9uUXVlcnkiLCJ0YXJnZXQiLCJ2YWx1ZSIsImRpdiIsInN0eWxlIiwic2VhcmNoRmllbGRTdHlsZSIsImlucHV0IiwiaW5wdXRTdHlsZSIsImlzRGFya01vZGUiLCJ0eXBlIiwibmFtZSIsIm9uQ2hhbmdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/SearchField.tsx\n");

/***/ }),

/***/ "./dataParser.ts":
/*!***********************!*\
  !*** ./dataParser.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseData\": () => (/* binding */ parseData)\n/* harmony export */ });\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! utils */ \"./utils.ts\");\n\n/**\n * Takes data from Grafana query and returns it in the format needed for this panel\n *\n * @param data the data returned by the query\n * @param options the field options from the editor panel\n * @param theme needed for utility functions for example to map color strings to hex values\n * @return {uniqueNodes} list of unique nodes to be rendered on the x axis\n * @return {links} array of objects with fields source, target, sum, strokewidth where each object represents one link\n * @return {hexColors} colors converted to hex\n */ function parseData(data, options, theme) {\n    var _allData_find, _allData_find1, _options_arcRange, _options_arcRange1, _options_NodeRange, _options_NodeRange1;\n    const allData = data.series[0].fields;\n    /********************************** Nodes/links **********************************/ // if src/dst not defined in options, take first/second group by default\n    const sourceString = options.src ? allData.find((obj)=>obj.name === options.src).name : allData[0].name;\n    const targetString = options.dest ? allData.find((obj)=>obj.name === options.dest).name : allData[1].name;\n    const sourceValues = (_allData_find = allData.find((obj)=>obj.name === sourceString)) === null || _allData_find === void 0 ? void 0 : _allData_find.values;\n    const targetValues = (_allData_find1 = allData.find((obj)=>obj.name === targetString)) === null || _allData_find1 === void 0 ? void 0 : _allData_find1.values;\n    // get the field that's neither used as source or dest\n    let additionalField = \"\";\n    if (allData.length > 3) {\n        const usedFields = [\n            sourceString,\n            targetString,\n            allData[allData.length - 1].name\n        ];\n        const compareArray = allData.map((obj)=>obj.name);\n        additionalField = compareArray.filter((obj)=>!usedFields.includes(obj))[0];\n    }\n    // get source and target arrays and create array of unique nodes from them\n    const uniqueNodes = Array.from([\n        ...new Set([\n            ...sourceValues,\n            ...targetValues\n        ])\n    ]).map((str, index)=>({\n            id: index,\n            name: str,\n            sum: 0,\n            radius: 0\n        }));\n    let srcById = sourceValues.map((name)=>{\n        const dictionaryItem = uniqueNodes.find((item)=>item.name === name);\n        return dictionaryItem ? dictionaryItem.id : null;\n    });\n    let dstById = targetValues.map((name)=>{\n        const dictionaryItem = uniqueNodes.find((item)=>item.name === name);\n        return dictionaryItem ? dictionaryItem.id : null;\n    });\n    let links = srcById.map((element, index)=>{\n        var _allData_find, _allData_find1;\n        return {\n            source: element,\n            target: dstById[index],\n            sum: (_allData_find = allData.find((obj)=>obj.name === allData[allData.length - 1].name)) === null || _allData_find === void 0 ? void 0 : _allData_find.values.buffer[index],\n            strokeWidth: 0,\n            color: \"\",\n            field: additionalField === \"\" ? [\n                additionalField\n            ] : allData.find((obj)=>obj.name === additionalField).values.buffer[index],\n            [options.colorConfigField]: (_allData_find1 = allData.find((obj)=>obj.name === options.colorConfigField)) === null || _allData_find1 === void 0 ? void 0 : _allData_find1.values.buffer[index],\n            displayValue: `${allData[allData.length - 1].display(allData[allData.length - 1].values.buffer[index]).text}${allData[allData.length - 1].display(allData[allData.length - 1].values.buffer[index]).suffix !== undefined ? allData[allData.length - 1].display(allData[allData.length - 1].values.buffer[index]).suffix : \"\"}`\n        };\n    });\n    // Initialize object to store aggregated sums\n    const nodeSums = {};\n    // Loop through links array and populate nodeSums object\n    links.forEach((link)=>{\n        const { source , sum  } = link;\n        if (nodeSums[source]) {\n            nodeSums[source] += sum;\n        } else {\n            nodeSums[source] = sum;\n        }\n    });\n    // Create array of unique nodes with aggregated sums\n    const nodes = Object.keys(nodeSums).map((nodeId)=>({\n            id: nodeId,\n            sum: nodeSums[nodeId]\n        }));\n    links.forEach(function(link) {\n        const target = link.target;\n        if (!nodeSums[target]) {\n            nodes.push({\n                id: target,\n                sum: 1\n            });\n            nodeSums[target] = 1;\n        }\n    });\n    uniqueNodes.map(function(element, index) {\n        element.sum = nodes[index].sum;\n    });\n    /********************************** Scaling/coloring **********************************/ // color\n    const hexColors = {\n        nodeColor: theme.visualization.getColorByName(options.nodeColor),\n        linkColor: theme.visualization.getColorByName(options.linkColor)\n    };\n    // set range for log mapping\n    const linkScaleFrom = (_options_arcRange = options.arcRange) === null || _options_arcRange === void 0 ? void 0 : _options_arcRange.split(\",\").map(Number)[0];\n    const linkScaleTo = (_options_arcRange1 = options.arcRange) === null || _options_arcRange1 === void 0 ? void 0 : _options_arcRange1.split(\",\").map(Number)[1];\n    const nodeScaleFrom = (_options_NodeRange = options.NodeRange) === null || _options_NodeRange === void 0 ? void 0 : _options_NodeRange.split(\",\").map(Number)[0];\n    const nodeScaleTo = (_options_NodeRange1 = options.NodeRange) === null || _options_NodeRange1 === void 0 ? void 0 : _options_NodeRange1.split(\",\").map(Number)[1];\n    const minLink = Number(Math.min(...links.map((e)=>e.sum))), maxLink = Number(Math.max(...links.map((e)=>e.sum))), minNode = Number(Math.min(...uniqueNodes.map((e)=>e.sum))), maxNode = Number(Math.max(...uniqueNodes.map((e)=>e.sum)));\n    // create groups for the field specified\n    let groups = [];\n    if (options.linkColorConfig !== \"default\" && options.colorConfigField) {\n        // create unique groups according to the setting specified in options\n        groups = [\n            ...new Set(links.map((item)=>item[options.colorConfigField]))\n        ].map((group)=>({\n                [options.colorConfigField]: group,\n                color: \"\"\n            }));\n        const spacedColors = (0,utils__WEBPACK_IMPORTED_MODULE_0__.getEvenlySpacedColors)(groups.length, theme.isDark);\n        groups.forEach((e, i)=>{\n            e.color = spacedColors[i];\n        });\n    }\n    links.forEach((e)=>{\n        (0,utils__WEBPACK_IMPORTED_MODULE_0__.calcStrokeWidth)(options.arcFromSource, options.scale, options.arcThickness, e, linkScaleFrom, linkScaleTo, minLink, maxLink);\n        // link color by field\n        if (options.linkColorConfig === \"field\" && groups) {\n            e.color = groups.find((group)=>group[options.colorConfigField] === e[options.colorConfigField]).color;\n        } else {\n            e.color = hexColors.linkColor;\n        }\n    });\n    uniqueNodes.forEach((e)=>{\n        // check if arc thickness is set to source\n        if (options.radiusFromSource) {\n            // check if we apply logarithmic or linear scaling\n            if (options.scale === \"log\") {\n                // check if node only receiving. if yes, give it the size of the largest incoming link\n                if (![\n                    ...new Set(links.map((node)=>node.source))\n                ].includes(e.id)) {\n                    e.radius = Math.max(...links.filter((link)=>link.target === e.id).map((el)=>el.strokeWidth)) / 2;\n                } else {\n                    e.radius = (0,utils__WEBPACK_IMPORTED_MODULE_0__.mapToLogRange)(e.sum, nodeScaleFrom, nodeScaleTo, minNode, maxNode);\n                }\n            } else {\n                if (![\n                    ...new Set(links.map((node)=>node.source))\n                ].includes(e.id)) {\n                    e.radius = Math.max(...links.filter((link)=>link.target === e.id).map((el)=>el.strokeWidth)) / 2;\n                } else {\n                    // scaling factor change via options to be implemented\n                    e.radius = e.sum / 100000000000000;\n                }\n            }\n        } else {\n            e.radius = options.nodeRadius;\n        }\n    });\n    const uniqueLinks = links.reduce((acc, cur)=>{\n        const existing = acc.find((e)=>e.source === cur.source && e.target === cur.target);\n        if (existing) {\n            existing.sum += cur.sum;\n            if (!existing.field.includes(cur.field)) {\n                existing.field.push(cur.field);\n            }\n        } else {\n            acc.push({\n                source: cur.source,\n                target: cur.target,\n                sum: cur.sum,\n                displayValue: cur.displayValue,\n                strokeWidth: 0,\n                color: cur.color,\n                field: [\n                    cur.field\n                ],\n                [options.colorConfigField]: cur[options.colorConfigField]\n            });\n        }\n        return acc;\n    }, []);\n    uniqueLinks.forEach((e)=>{\n        (0,utils__WEBPACK_IMPORTED_MODULE_0__.calcStrokeWidth)(options.arcFromSource, options.scale, options.arcThickness, e, linkScaleFrom, linkScaleTo, minLink, maxLink);\n    });\n    if (allData.length > 3) {\n        links = uniqueLinks;\n    }\n    return {\n        uniqueNodes,\n        links,\n        hexColors,\n        additionalField\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dataParser.ts\n");

/***/ }),

/***/ "./module.ts":
/*!*******************!*\
  !*** ./module.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"plugin\": () => (/* binding */ plugin)\n/* harmony export */ });\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @grafana/data */ \"@grafana/data\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_grafana_data__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _SimplePanel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SimplePanel */ \"./SimplePanel.tsx\");\n/* harmony import */ var _components_CustomRangeSlider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/CustomRangeSlider */ \"./components/CustomRangeSlider.tsx\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _async_to_generator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\n\n\n\nconst AppearanceCategory = [\n    'Appearance'\n];\nconst DataCategory = [\n    'Data'\n];\nconst plugin = new _grafana_data__WEBPACK_IMPORTED_MODULE_0__.PanelPlugin(_SimplePanel__WEBPACK_IMPORTED_MODULE_1__.SimplePanel).setPanelOptions((builder)=>{\n    return builder.addBooleanSwitch({\n        path: 'arcFromSource',\n        name: 'Arc thickness from source',\n        defaultValue: false,\n        category: AppearanceCategory\n    }).addSliderInput({\n        path: 'arcThickness',\n        name: 'Arc thickness',\n        defaultValue: 1,\n        settings: {\n            min: 1,\n            max: 15,\n            step: 1\n        },\n        showIf: (config)=>!config.arcFromSource,\n        category: AppearanceCategory\n    }).addSliderInput({\n        path: 'arcOpacity',\n        name: 'Arc opacity',\n        defaultValue: 1,\n        settings: {\n            min: .1,\n            max: 1,\n            step: .1\n        },\n        category: AppearanceCategory\n    }).addBooleanSwitch({\n        path: 'radiusFromSource',\n        name: 'Node radius from source',\n        defaultValue: false,\n        category: AppearanceCategory\n    }).addSliderInput({\n        path: 'nodeRadius',\n        name: 'Node radius',\n        defaultValue: 5,\n        settings: {\n            min: 5,\n            max: 15,\n            step: 1\n        },\n        showIf: (config)=>!config.radiusFromSource,\n        category: AppearanceCategory\n    }).addSelect({\n        path: 'linkColorConfig',\n        name: 'Link color',\n        description: 'Select configuration for the link color',\n        defaultValue: \"default\",\n        category: AppearanceCategory,\n        settings: {\n            allowCustomValue: false,\n            options: [\n                {\n                    label: \"Default\",\n                    value: \"default\"\n                },\n                {\n                    label: \"By field\",\n                    value: \"field\"\n                }\n            ]\n        }\n    }).addSelect({\n        path: 'colorConfigField',\n        name: 'Field',\n        description: 'Select a field to base the link color on:',\n        category: AppearanceCategory,\n        settings: {\n            allowCustomValue: false,\n            options: [],\n            getOptions: function() {\n                var _ref = _async_to_generator(function*(context) {\n                    const options = [];\n                    if (context && context.data) {\n                        for (const frame of context.data){\n                            for (const field of frame.fields){\n                                const name = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_0__.getFieldDisplayName)(field, frame, context.data);\n                                const value = name;\n                                options.push({\n                                    value,\n                                    label: name\n                                });\n                            }\n                        }\n                    }\n                    return Promise.resolve(options);\n                });\n                return function(context) {\n                    return _ref.apply(this, arguments);\n                };\n            }()\n        },\n        showIf: (config)=>config.linkColorConfig !== \"default\"\n    }).addColorPicker({\n        path: 'linkColor',\n        name: 'Link Color',\n        defaultValue: 'blue',\n        showIf: (config)=>config.linkColorConfig === \"default\",\n        category: AppearanceCategory\n    }).addColorPicker({\n        path: 'nodeColor',\n        name: 'Node Color',\n        defaultValue: 'blue',\n        category: AppearanceCategory\n    }).addBooleanSwitch({\n        path: 'search',\n        name: 'Activate search bar',\n        defaultValue: false,\n        category: AppearanceCategory\n    }).addSelect({\n        path: 'scale',\n        name: 'Scaling',\n        defaultValue: \"lin\",\n        description: 'Select the scaling of the diagram',\n        settings: {\n            allowCustomValue: false,\n            options: [\n                {\n                    label: 'Linear',\n                    value: 'lin'\n                },\n                {\n                    label: \"Logarithmic\",\n                    value: \"log\"\n                }\n            ]\n        },\n        showIf: (config)=>config.radiusFromSource || config.arcFromSource,\n        category: DataCategory\n    }).addCustomEditor({\n        id: \"setRange\",\n        path: \"arcRange\",\n        editor: _components_CustomRangeSlider__WEBPACK_IMPORTED_MODULE_2__.CustomRangeSlider,\n        name: 'Range for weighted links',\n        description: 'Range which the arc thickness is being mapped to',\n        category: DataCategory,\n        defaultValue: \"1,15\",\n        showIf: (config)=>config.scale === \"log\" && config.arcFromSource\n    }).addCustomEditor({\n        id: \"setRange\",\n        path: \"NodeRange\",\n        editor: _components_CustomRangeSlider__WEBPACK_IMPORTED_MODULE_2__.CustomRangeSlider,\n        name: 'Range for weighted nodes',\n        description: 'Range which the node radius is being mapped to',\n        category: DataCategory,\n        defaultValue: \"1,15\",\n        showIf: (config)=>config.scale === \"log\" && config.radiusFromSource\n    }).addSelect({\n        path: 'src',\n        name: 'Source',\n        description: 'Select the field to use as source:',\n        category: DataCategory,\n        settings: {\n            allowCustomValue: false,\n            options: [],\n            getOptions: function() {\n                var _ref = _async_to_generator(function*(context) {\n                    const options = [];\n                    if (context && context.data) {\n                        for (const frame of context.data){\n                            for (const field of frame.fields){\n                                const name = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_0__.getFieldDisplayName)(field, frame, context.data);\n                                const value = name;\n                                options.push({\n                                    value,\n                                    label: name\n                                });\n                            }\n                        }\n                    }\n                    return Promise.resolve(options);\n                });\n                return function(context) {\n                    return _ref.apply(this, arguments);\n                };\n            }()\n        }\n    }).addSelect({\n        path: 'dest',\n        name: 'Destination',\n        description: 'Select the field to use as target:',\n        category: DataCategory,\n        defaultValue: \"\",\n        settings: {\n            allowCustomValue: false,\n            options: [],\n            getOptions: function() {\n                var _ref = _async_to_generator(function*(context) {\n                    const options = [];\n                    if (context && context.data) {\n                        for (const frame of context.data){\n                            for (const field of frame.fields){\n                                const name = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_0__.getFieldDisplayName)(field, frame, context.data);\n                                const value = name;\n                                options.push({\n                                    value,\n                                    label: name\n                                });\n                            }\n                        }\n                    }\n                    return Promise.resolve(options);\n                });\n                return function(context) {\n                    return _ref.apply(this, arguments);\n                };\n            }()\n        }\n    }).addTextInput({\n        path: \"toolTipSource\",\n        name: 'Tooltip text',\n        category: DataCategory,\n        defaultValue: \"From: \",\n        description: 'Text to be displayed infront of target node.'\n    }).addTextInput({\n        path: \"toolTipTarget\",\n        name: 'Tooltip text',\n        category: DataCategory,\n        defaultValue: \"To: \",\n        description: 'Text to be displayed infront of source node.'\n    }).addTextInput({\n        path: \"toolTipMetric\",\n        name: 'Tooltip text',\n        category: DataCategory,\n        defaultValue: \"Sum: \",\n        description: 'Text to be displayed infront of metric.'\n    });\n}).useFieldConfig({\n    disableStandardOptions: [\n        _grafana_data__WEBPACK_IMPORTED_MODULE_0__.FieldConfigProperty.NoValue,\n        _grafana_data__WEBPACK_IMPORTED_MODULE_0__.FieldConfigProperty.Max,\n        _grafana_data__WEBPACK_IMPORTED_MODULE_0__.FieldConfigProperty.Min\n    ],\n    standardOptions: {\n        [_grafana_data__WEBPACK_IMPORTED_MODULE_0__.FieldConfigProperty.Color]: {\n            settings: {\n                byValueSupport: true,\n                bySeriesSupport: true,\n                preferThresholdsMode: true\n            }\n        }\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./module.ts\n");

/***/ }),

/***/ "./styles.ts":
/*!*******************!*\
  !*** ./styles.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"styles\": () => (/* binding */ styles)\n/* harmony export */ });\nconst styles = {\n    containerStyle: {\n        width: \"100%\",\n        height: \"100%\"\n    },\n    labelStyle: {\n        width: \"100%\",\n        height: \"100%\",\n        \"z-index\": \"10\"\n    },\n    buttonStyle: {\n        width: \"30px\",\n        height: \"30px\",\n        top: 0,\n        position: \"absolute\"\n    },\n    toolTipStyle: {\n        box: {\n            position: \"absolute\",\n            left: \"\",\n            top: \"\",\n            width: \"auto\",\n            height: \"auto\",\n            background: \"white\",\n            padding: \"1em\",\n            margin: \"1em\",\n            \"max-width\": \"200px\",\n            \"border-radius\": \"5px\",\n            opacity: 0.9\n        },\n        text: {\n            color: \"black\",\n            \"font-size\": \"10px\",\n            margin: \"0\",\n            \"font-weight\": \"100\"\n        },\n        preface: {\n            \"font-weight\": \"900\"\n        }\n    },\n    panelContainerStyle: {\n        height: \"100%\",\n        width: \"100%\"\n    },\n    searchFieldStyle: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        padding: \"1em\"\n    },\n    inputStyle (isDarkMode) {\n        return {\n            width: \"200px\",\n            height: \"25px\",\n            background: isDarkMode ? \"rgb(244 245 245 / 83%)\" : \"hsla(0, 0%, 0%, 0.5)\",\n            color: isDarkMode ? \"black\" : \"white\",\n            \"border-radius\": \"5px\"\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFNBQVM7SUFDbEJDLGdCQUFnQjtRQUNkQyxPQUFPO1FBQ1BDLFFBQVE7SUFDVjtJQUNBQyxZQUFZO1FBQ1ZGLE9BQU87UUFDUEMsUUFBUTtRQUNSLFdBQVc7SUFDYjtJQUNBRSxhQUFhO1FBQ1hILE9BQU87UUFDUEMsUUFBUTtRQUNSRyxLQUFJO1FBQ0pDLFVBQVU7SUFDWjtJQUNBQyxjQUFjO1FBQ1pDLEtBQUs7WUFDSEYsVUFBVTtZQUNWRyxNQUFNO1lBQ05KLEtBQUs7WUFDTEosT0FBTztZQUNQQyxRQUFRO1lBQ1JRLFlBQVk7WUFDWkMsU0FBUztZQUNUQyxRQUFRO1lBQ1IsYUFBYTtZQUNiLGlCQUFpQjtZQUNqQkMsU0FBUztRQUNYO1FBQ0FDLE1BQU07WUFDSkMsT0FBTztZQUNQLGFBQWE7WUFDYkgsUUFBUTtZQUNSLGVBQWU7UUFDakI7UUFDQUksU0FBUztZQUNQLGVBQWU7UUFDakI7SUFDRjtJQUNBQyxxQkFBcUI7UUFDbkJmLFFBQVE7UUFDUkQsT0FBTztJQUNUO0lBQ0FpQixrQkFBa0I7UUFDaEJaLFVBQVU7UUFDVkQsS0FBSztRQUNMYyxPQUFPO1FBQ1BSLFNBQVM7SUFDWDtJQUNBUyxZQUFXQyxVQUFtQixFQUFFO1FBQzlCLE9BQU87WUFDTHBCLE9BQU87WUFDUEMsUUFBUTtZQUNSUSxZQUFZLGFBQWUsMkJBQTJCLHNCQUFzQjtZQUM1RUssT0FBTyxhQUFlLFVBQVUsT0FBTztZQUN2QyxpQkFBaUI7UUFDbkI7SUFDRjtBQUNKLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZXMudHM/N2IzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgc3R5bGVzID0ge1xuICAgIGNvbnRhaW5lclN0eWxlOiB7XG4gICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICBoZWlnaHQ6IFwiMTAwJVwiXG4gICAgfSBhcyBSZWFjdC5DU1NQcm9wZXJ0aWVzLFxuICAgIGxhYmVsU3R5bGU6IHtcbiAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgICBcInotaW5kZXhcIjogXCIxMFwiLFxuICAgIH0gYXMgUmVhY3QuQ1NTUHJvcGVydGllcyxcbiAgICBidXR0b25TdHlsZToge1xuICAgICAgd2lkdGg6IFwiMzBweFwiLFxuICAgICAgaGVpZ2h0OiBcIjMwcHhcIixcbiAgICAgIHRvcDowLFxuICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIlxuICAgIH0gYXMgUmVhY3QuQ1NTUHJvcGVydGllcyxcbiAgICB0b29sVGlwU3R5bGU6IHtcbiAgICAgIGJveDoge1xuICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgICBsZWZ0OiBcIlwiLFxuICAgICAgICB0b3A6IFwiXCIsXG4gICAgICAgIHdpZHRoOiBcImF1dG9cIixcbiAgICAgICAgaGVpZ2h0OiBcImF1dG9cIixcbiAgICAgICAgYmFja2dyb3VuZDogXCJ3aGl0ZVwiLFxuICAgICAgICBwYWRkaW5nOiBcIjFlbVwiLFxuICAgICAgICBtYXJnaW46IFwiMWVtXCIsXG4gICAgICAgIFwibWF4LXdpZHRoXCI6IFwiMjAwcHhcIixcbiAgICAgICAgXCJib3JkZXItcmFkaXVzXCI6IFwiNXB4XCIsXG4gICAgICAgIG9wYWNpdHk6IDAuOVxuICAgICAgfSBhcyBSZWFjdC5DU1NQcm9wZXJ0aWVzLFxuICAgICAgdGV4dDoge1xuICAgICAgICBjb2xvcjogXCJibGFja1wiLFxuICAgICAgICBcImZvbnQtc2l6ZVwiOiBcIjEwcHhcIixcbiAgICAgICAgbWFyZ2luOiBcIjBcIixcbiAgICAgICAgXCJmb250LXdlaWdodFwiOiBcIjEwMFwiXG4gICAgICB9IGFzIFJlYWN0LkNTU1Byb3BlcnRpZXMsXG4gICAgICBwcmVmYWNlOiB7XG4gICAgICAgIFwiZm9udC13ZWlnaHRcIjogXCI5MDBcIlxuICAgICAgfSBhcyBSZWFjdC5DU1NQcm9wZXJ0aWVzLFxuICAgIH0sIFxuICAgIHBhbmVsQ29udGFpbmVyU3R5bGU6IHtcbiAgICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgICB3aWR0aDogXCIxMDAlXCJcbiAgICB9IGFzIFJlYWN0LkNTU1Byb3BlcnRpZXMsXG4gICAgc2VhcmNoRmllbGRTdHlsZToge1xuICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgIHRvcDogMCxcbiAgICAgIHJpZ2h0OiAwLFxuICAgICAgcGFkZGluZzogXCIxZW1cIlxuICAgIH0gYXMgUmVhY3QuQ1NTUHJvcGVydGllcyxcbiAgICBpbnB1dFN0eWxlKGlzRGFya01vZGU6IGJvb2xlYW4pIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdpZHRoOiBcIjIwMHB4XCIsXG4gICAgICAgIGhlaWdodDogXCIyNXB4XCIsXG4gICAgICAgIGJhY2tncm91bmQ6IChpc0RhcmtNb2RlKSA/IFwicmdiKDI0NCAyNDUgMjQ1IC8gODMlKVwiIDogXCJoc2xhKDAsIDAlLCAwJSwgMC41KVwiLFxuICAgICAgICBjb2xvcjogKGlzRGFya01vZGUpID8gXCJibGFja1wiIDogXCJ3aGl0ZVwiLFxuICAgICAgICBcImJvcmRlci1yYWRpdXNcIjogXCI1cHhcIlxuICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJzdHlsZXMiLCJjb250YWluZXJTdHlsZSIsIndpZHRoIiwiaGVpZ2h0IiwibGFiZWxTdHlsZSIsImJ1dHRvblN0eWxlIiwidG9wIiwicG9zaXRpb24iLCJ0b29sVGlwU3R5bGUiLCJib3giLCJsZWZ0IiwiYmFja2dyb3VuZCIsInBhZGRpbmciLCJtYXJnaW4iLCJvcGFjaXR5IiwidGV4dCIsImNvbG9yIiwicHJlZmFjZSIsInBhbmVsQ29udGFpbmVyU3R5bGUiLCJzZWFyY2hGaWVsZFN0eWxlIiwicmlnaHQiLCJpbnB1dFN0eWxlIiwiaXNEYXJrTW9kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./styles.ts\n");

/***/ }),

/***/ "./utils.ts":
/*!******************!*\
  !*** ./utils.ts ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"calcDiagramHeight\": () => (/* binding */ calcDiagramHeight),\n/* harmony export */   \"calcStrokeWidth\": () => (/* binding */ calcStrokeWidth),\n/* harmony export */   \"evaluateQuery\": () => (/* binding */ evaluateQuery),\n/* harmony export */   \"getEvenlySpacedColors\": () => (/* binding */ getEvenlySpacedColors),\n/* harmony export */   \"getNodeTargets\": () => (/* binding */ getNodeTargets),\n/* harmony export */   \"idToName\": () => (/* binding */ idToName),\n/* harmony export */   \"linSpace\": () => (/* binding */ linSpace),\n/* harmony export */   \"mapToLinRange\": () => (/* binding */ mapToLinRange),\n/* harmony export */   \"mapToLogRange\": () => (/* binding */ mapToLogRange),\n/* harmony export */   \"replaceEllipsis\": () => (/* binding */ replaceEllipsis),\n/* harmony export */   \"resetLabel\": () => (/* binding */ resetLabel)\n/* harmony export */ });\n/*\nA collection of utility functions\n*/ // find string by id\nfunction idToName(id, dic) {\n    return dic.find((obj)=>obj.id === id).name;\n}\n// get array of targets for node\nfunction getNodeTargets({ id , links  }) {\n    return links.filter((obj)=>obj.source === id).map((obj)=>obj.target);\n}\n// map number to log\nfunction mapToLogRange(value, rangeMin, rangeMax, minLinkSum, maxLinkSum) {\n    const logMinValue = Math.log10(minLinkSum);\n    const logMaxValue = Math.log10(maxLinkSum);\n    const logRange = logMaxValue - logMinValue;\n    const factor = (rangeMax - 1) / logRange;\n    const logValue = Math.log10(value);\n    const mappedValue = (logValue - logMinValue) * factor + rangeMin;\n    return mappedValue;\n}\nfunction mapToLinRange(value) {\n    console.log(value);\n}\n// get an array of evenly spaced colors\nfunction getEvenlySpacedColors(amount, darkMode) {\n    // add darkmode colors\n    const colors = [];\n    const lightColors = [\n        '#FFD700',\n        '#00BFFF',\n        '#FF8C00',\n        '#FF1493',\n        '#7FFF00',\n        '#9400D3',\n        '#00FFFF',\n        '#FF69B4',\n        '#32CD32',\n        '#FFDAB9'\n    ];\n    const darkColors = [\n        '#7CFC00',\n        '#1E90FF',\n        '#FFA500',\n        '#FFC0CB',\n        '#8B008B',\n        '#32CD32',\n        '#FF00FF',\n        '#FF6347',\n        '#FFFF00',\n        '#FF1493'\n    ];\n    for(let i = 0; i < amount; i++){\n        const colorIndex = i % darkColors.length;\n        colors.push(darkMode ? darkColors[colorIndex] : lightColors[colorIndex]);\n    }\n    return colors;\n}\n// get array of n equally spaced values in specific range\nfunction linSpace(start, stop, n) {\n    const step = (stop - start) / (n - 1);\n    return Array.from({\n        length: n\n    }, (_, i)=>start + i * step);\n}\nfunction calcStrokeWidth(arcFromSource, scale, arcThickness, e, linkScaleFrom, linkScaleTo, minLink, maxLink) {\n    if (arcFromSource) {\n        // check if we apply logarithmic or linear scaling\n        if (scale === \"log\") {\n            e.strokeWidth = mapToLogRange(e.sum, linkScaleFrom, linkScaleTo, minLink, maxLink);\n        } else {\n            // call function to map to lin range instead\n            e.strokeWidth = e.sum / 10000000000000;\n        }\n    } else {\n        e.strokeWidth = arcThickness;\n    }\n}\nfunction replaceEllipsis(label, isHighlighted) {\n    var _label_getAttribute;\n    const labelBoundingBox = label.getBoundingClientRect().width * (isHighlighted ? 1.6 : 1);\n    const mapRatio = isHighlighted ? 0.2 : 0.3;\n    const labelOffsetX = Number((_label_getAttribute = label.getAttribute(\"transform\")) === null || _label_getAttribute === void 0 ? void 0 : _label_getAttribute.split(\",\")[0].substring(10));\n    // check if label is out of bounds\n    if (labelBoundingBox > labelOffsetX) {\n        const overlap = labelBoundingBox - labelOffsetX;\n        label.innerHTML = \"...\" + label.innerHTML.substring(overlap * mapRatio, label.innerHTML.length);\n    }\n}\nfunction resetLabel(label) {\n    label.innerHTML = label.getAttribute(\"name\");\n}\nfunction evaluateQuery(query, nodeList, labels) {\n    for(let i = 0; i < labels.length; i++){\n        if (query) {\n            let matches = nodeList.map(({ name , id  })=>({\n                    name,\n                    id\n                }));\n            matches = matches.filter((e)=>e.name.toLowerCase().includes(query.toLowerCase()));\n            let numericalMatches = matches.map((e)=>e.id);\n            if (numericalMatches.includes(Number(labels[i].id))) {\n                labels[i].style.opacity = \"1\";\n            } else {\n                labels[i].style.opacity = \"0.2\";\n            }\n        } else {\n            labels[i].style.opacity = \"1\";\n        }\n    }\n}\nfunction calcDiagramHeight(nodes, links, panelWidth) {\n    let maxNodesCrossed = 0;\n    let maxArc = null;\n    for (const link of links){\n        const nodesCrossed = Math.abs(link.target - link.source) - 1;\n        if (nodesCrossed > maxNodesCrossed) {\n            maxNodesCrossed = nodesCrossed;\n            maxArc = link;\n        }\n    }\n    const maxArcDistance = maxArc.target - maxArc.source;\n    const step = (panelWidth - 50 - 50) / (nodes.length - 1);\n    const maxArcHeight = maxArcDistance * step / 2;\n    const longestName = nodes.reduce((acc, curr)=>{\n        if (curr.name.length > acc.name.length) {\n            return curr;\n        } else {\n            return acc;\n        }\n    }).name;\n    // * 3.77 maps string to pixels, * 1.6 maps to highlighted tag\n    const longestNameSize = longestName.length * 3.77 * 1.6;\n    const graphHeight = maxArcHeight + longestNameSize;\n    return graphHeight;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils.ts\n");

/***/ }),

/***/ "@grafana/data":
/*!********************************!*\
  !*** external "@grafana/data" ***!
  \********************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_data__;

/***/ }),

/***/ "@grafana/ui":
/*!******************************!*\
  !*** external "@grafana/ui" ***!
  \******************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_ui__;

/***/ }),

/***/ "d3":
/*!*********************!*\
  !*** external "d3" ***!
  \*********************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_d3__;

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./module.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});;