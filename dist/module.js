/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
define(["@grafana/data","react","@grafana/ui","d3"], (__WEBPACK_EXTERNAL_MODULE__grafana_data__, __WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE__grafana_ui__, __WEBPACK_EXTERNAL_MODULE_d3__) => { return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../node_modules/css-loader/dist/cjs.js!./styles.css":
/*!***********************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./styles.css ***!
  \***********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ \"../node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"::-webkit-input-placeholder { /* WebKit, Blink, Edge */\\n  color: grey;\\n}\\n:-moz-placeholder { /* Mozilla Firefox 4 to 18 */\\n color: grey;\\n opacity:  1;\\n}\\n::-moz-placeholder { /* Mozilla Firefox 19+ */\\n color: grey;\\n opacity:  1;\\n}\\n:-ms-input-placeholder { /* Internet Explorer 10-11 */\\n color: grey;\\n}\\n::-ms-input-placeholder { /* Microsoft Edge */\\n color: grey;\\n}\\n\\ninput::placeholder { /* Most modern browsers support this now. */\\n color: #808080;\\n}\\n\\n#zoom-button:hover {\\n  transform: translateY(-8px);\\n  background-color: grey !important;\\n}\\n\\n#search-field {\\n  transition: all 250ms;\\n}\\n\\n#search-field input {\\n  transition: all 250ms;\\n}\\n\\n#search-field:hover {\\n  transform: translateY(-8px);\\n}\\n\\n#search-field input:hover {\\n  background-color: rgb(195, 188, 188) !important;\\n}\\n\\n#canvas {\\n  overflow: hidden;\\n  transform-origin: -50px -50px;\\n  transition: transform 0.5s cubic-bezier(0.22, 0.61, 0.36, 1) 0s;\\n}\\n\\n#scroll-box {\\n  overflow: scroll\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./styles.css\"],\"names\":[],\"mappings\":\"AAAA,8BAA8B,wBAAwB;EACpD,WAAW;AACb;AACA,oBAAoB,4BAA4B;CAC/C,WAAW;CACX,WAAW;AACZ;AACA,qBAAqB,wBAAwB;CAC5C,WAAW;CACX,WAAW;AACZ;AACA,yBAAyB,4BAA4B;CACpD,WAAW;AACZ;AACA,0BAA0B,mBAAmB;CAC5C,WAAW;AACZ;;AAEA,qBAAqB,2CAA2C;CAC/D,cAAc;AACf;;AAEA;EACE,2BAA2B;EAC3B,iCAAiC;AACnC;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,+CAA+C;AACjD;;AAEA;EACE,gBAAgB;EAChB,6BAA6B;EAC7B,+DAA+D;AACjE;;AAEA;EACE;AACF\",\"sourcesContent\":[\"::-webkit-input-placeholder { /* WebKit, Blink, Edge */\\n  color: grey;\\n}\\n:-moz-placeholder { /* Mozilla Firefox 4 to 18 */\\n color: grey;\\n opacity:  1;\\n}\\n::-moz-placeholder { /* Mozilla Firefox 19+ */\\n color: grey;\\n opacity:  1;\\n}\\n:-ms-input-placeholder { /* Internet Explorer 10-11 */\\n color: grey;\\n}\\n::-ms-input-placeholder { /* Microsoft Edge */\\n color: grey;\\n}\\n\\ninput::placeholder { /* Most modern browsers support this now. */\\n color: #808080;\\n}\\n\\n#zoom-button:hover {\\n  transform: translateY(-8px);\\n  background-color: grey !important;\\n}\\n\\n#search-field {\\n  transition: all 250ms;\\n}\\n\\n#search-field input {\\n  transition: all 250ms;\\n}\\n\\n#search-field:hover {\\n  transform: translateY(-8px);\\n}\\n\\n#search-field input:hover {\\n  background-color: rgb(195, 188, 188) !important;\\n}\\n\\n#canvas {\\n  overflow: hidden;\\n  transform-origin: -50px -50px;\\n  transition: transform 0.5s cubic-bezier(0.22, 0.61, 0.36, 1) 0s;\\n}\\n\\n#scroll-box {\\n  overflow: scroll\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDMEc7QUFDakI7QUFDekYsOEJBQThCLG1GQUEyQixDQUFDLDRGQUFxQztBQUMvRjtBQUNBLHdFQUF3RSx5Q0FBeUMsR0FBRyxzQkFBc0IsNENBQTRDLGVBQWUsR0FBRyx1QkFBdUIsd0NBQXdDLGVBQWUsR0FBRywyQkFBMkIsNENBQTRDLEdBQUcsNEJBQTRCLG1DQUFtQyxHQUFHLHlCQUF5Qiw4REFBOEQsR0FBRyx3QkFBd0IsZ0NBQWdDLHNDQUFzQyxHQUFHLG1CQUFtQiwwQkFBMEIsR0FBRyx5QkFBeUIsMEJBQTBCLEdBQUcseUJBQXlCLGdDQUFnQyxHQUFHLCtCQUErQixvREFBb0QsR0FBRyxhQUFhLHFCQUFxQixrQ0FBa0Msb0VBQW9FLEdBQUcsaUJBQWlCLHVCQUF1QixPQUFPLDJGQUEyRixXQUFXLEtBQUssbUJBQW1CLFdBQVcsVUFBVSxLQUFLLG1CQUFtQixXQUFXLFVBQVUsS0FBSyxtQkFBbUIsV0FBVyxLQUFLLG1CQUFtQixXQUFXLE1BQU0sbUJBQW1CLFdBQVcsTUFBTSxLQUFLLFlBQVksYUFBYSxPQUFPLEtBQUssWUFBWSxPQUFPLEtBQUssWUFBWSxPQUFPLEtBQUssWUFBWSxPQUFPLEtBQUssWUFBWSxPQUFPLEtBQUssWUFBWSxhQUFhLGFBQWEsT0FBTyxLQUFLLEtBQUssdURBQXVELHlDQUF5QyxHQUFHLHNCQUFzQiw0Q0FBNEMsZUFBZSxHQUFHLHVCQUF1Qix3Q0FBd0MsZUFBZSxHQUFHLDJCQUEyQiw0Q0FBNEMsR0FBRyw0QkFBNEIsbUNBQW1DLEdBQUcseUJBQXlCLDhEQUE4RCxHQUFHLHdCQUF3QixnQ0FBZ0Msc0NBQXNDLEdBQUcsbUJBQW1CLDBCQUEwQixHQUFHLHlCQUF5QiwwQkFBMEIsR0FBRyx5QkFBeUIsZ0NBQWdDLEdBQUcsK0JBQStCLG9EQUFvRCxHQUFHLGFBQWEscUJBQXFCLGtDQUFrQyxvRUFBb0UsR0FBRyxpQkFBaUIsdUJBQXVCLG1CQUFtQjtBQUNoaEY7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3N0eWxlcy5jc3M/ODFmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7IC8qIFdlYktpdCwgQmxpbmssIEVkZ2UgKi9cXG4gIGNvbG9yOiBncmV5O1xcbn1cXG46LW1vei1wbGFjZWhvbGRlciB7IC8qIE1vemlsbGEgRmlyZWZveCA0IHRvIDE4ICovXFxuIGNvbG9yOiBncmV5O1xcbiBvcGFjaXR5OiAgMTtcXG59XFxuOjotbW96LXBsYWNlaG9sZGVyIHsgLyogTW96aWxsYSBGaXJlZm94IDE5KyAqL1xcbiBjb2xvcjogZ3JleTtcXG4gb3BhY2l0eTogIDE7XFxufVxcbjotbXMtaW5wdXQtcGxhY2Vob2xkZXIgeyAvKiBJbnRlcm5ldCBFeHBsb3JlciAxMC0xMSAqL1xcbiBjb2xvcjogZ3JleTtcXG59XFxuOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIgeyAvKiBNaWNyb3NvZnQgRWRnZSAqL1xcbiBjb2xvcjogZ3JleTtcXG59XFxuXFxuaW5wdXQ6OnBsYWNlaG9sZGVyIHsgLyogTW9zdCBtb2Rlcm4gYnJvd3NlcnMgc3VwcG9ydCB0aGlzIG5vdy4gKi9cXG4gY29sb3I6ICM4MDgwODA7XFxufVxcblxcbiN6b29tLWJ1dHRvbjpob3ZlciB7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLThweCk7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5ICFpbXBvcnRhbnQ7XFxufVxcblxcbiNzZWFyY2gtZmllbGQge1xcbiAgdHJhbnNpdGlvbjogYWxsIDI1MG1zO1xcbn1cXG5cXG4jc2VhcmNoLWZpZWxkIGlucHV0IHtcXG4gIHRyYW5zaXRpb246IGFsbCAyNTBtcztcXG59XFxuXFxuI3NlYXJjaC1maWVsZDpob3ZlciB7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLThweCk7XFxufVxcblxcbiNzZWFyY2gtZmllbGQgaW5wdXQ6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE5NSwgMTg4LCAxODgpICFpbXBvcnRhbnQ7XFxufVxcblxcbiNjYW52YXMge1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHRyYW5zZm9ybS1vcmlnaW46IC01MHB4IC01MHB4O1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNXMgY3ViaWMtYmV6aWVyKDAuMjIsIDAuNjEsIDAuMzYsIDEpIDBzO1xcbn1cXG5cXG4jc2Nyb2xsLWJveCB7XFxuICBvdmVyZmxvdzogc2Nyb2xsXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsOEJBQThCLHdCQUF3QjtFQUNwRCxXQUFXO0FBQ2I7QUFDQSxvQkFBb0IsNEJBQTRCO0NBQy9DLFdBQVc7Q0FDWCxXQUFXO0FBQ1o7QUFDQSxxQkFBcUIsd0JBQXdCO0NBQzVDLFdBQVc7Q0FDWCxXQUFXO0FBQ1o7QUFDQSx5QkFBeUIsNEJBQTRCO0NBQ3BELFdBQVc7QUFDWjtBQUNBLDBCQUEwQixtQkFBbUI7Q0FDNUMsV0FBVztBQUNaOztBQUVBLHFCQUFxQiwyQ0FBMkM7Q0FDL0QsY0FBYztBQUNmOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLCtDQUErQztBQUNqRDs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQiw2QkFBNkI7RUFDN0IsK0RBQStEO0FBQ2pFOztBQUVBO0VBQ0U7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgeyAvKiBXZWJLaXQsIEJsaW5rLCBFZGdlICovXFxuICBjb2xvcjogZ3JleTtcXG59XFxuOi1tb3otcGxhY2Vob2xkZXIgeyAvKiBNb3ppbGxhIEZpcmVmb3ggNCB0byAxOCAqL1xcbiBjb2xvcjogZ3JleTtcXG4gb3BhY2l0eTogIDE7XFxufVxcbjo6LW1vei1wbGFjZWhvbGRlciB7IC8qIE1vemlsbGEgRmlyZWZveCAxOSsgKi9cXG4gY29sb3I6IGdyZXk7XFxuIG9wYWNpdHk6ICAxO1xcbn1cXG46LW1zLWlucHV0LXBsYWNlaG9sZGVyIHsgLyogSW50ZXJuZXQgRXhwbG9yZXIgMTAtMTEgKi9cXG4gY29sb3I6IGdyZXk7XFxufVxcbjo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHsgLyogTWljcm9zb2Z0IEVkZ2UgKi9cXG4gY29sb3I6IGdyZXk7XFxufVxcblxcbmlucHV0OjpwbGFjZWhvbGRlciB7IC8qIE1vc3QgbW9kZXJuIGJyb3dzZXJzIHN1cHBvcnQgdGhpcyBub3cuICovXFxuIGNvbG9yOiAjODA4MDgwO1xcbn1cXG5cXG4jem9vbS1idXR0b246aG92ZXIge1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC04cHgpO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JleSAhaW1wb3J0YW50O1xcbn1cXG5cXG4jc2VhcmNoLWZpZWxkIHtcXG4gIHRyYW5zaXRpb246IGFsbCAyNTBtcztcXG59XFxuXFxuI3NlYXJjaC1maWVsZCBpbnB1dCB7XFxuICB0cmFuc2l0aW9uOiBhbGwgMjUwbXM7XFxufVxcblxcbiNzZWFyY2gtZmllbGQ6aG92ZXIge1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC04cHgpO1xcbn1cXG5cXG4jc2VhcmNoLWZpZWxkIGlucHV0OmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxOTUsIDE4OCwgMTg4KSAhaW1wb3J0YW50O1xcbn1cXG5cXG4jY2FudmFzIHtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICB0cmFuc2Zvcm0tb3JpZ2luOiAtNTBweCAtNTBweDtcXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjVzIGN1YmljLWJlemllcigwLjIyLCAwLjYxLCAwLjM2LCAxKSAwcztcXG59XFxuXFxuI3Njcm9sbC1ib3gge1xcbiAgb3ZlcmZsb3c6IHNjcm9sbFxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/css-loader/dist/cjs.js!./styles.css\n");

/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/api.js":
/*!******************************************************!*\
  !*** ../node_modules/css-loader/dist/runtime/api.js ***!
  \******************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBLHFGQUFxRjtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsaUJBQWlCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixxQkFBcUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Ysc0ZBQXNGLHFCQUFxQjtBQUMzRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsaURBQWlELHFCQUFxQjtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Ysc0RBQXNELHFCQUFxQjtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MDIyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/css-loader/dist/runtime/api.js\n");

/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!*************************************************************!*\
  !*** ../node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \*************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanM/NmY4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/css-loader/dist/runtime/sourceMaps.js\n");

/***/ }),

/***/ "./styles.css":
/*!********************!*\
  !*** ./styles.css ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"../node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"../node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"../node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"../node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./styles.css */ \"../node_modules/css-loader/dist/cjs.js!./styles.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMuY3NzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLE1BQStGO0FBQy9GLE1BQXFGO0FBQ3JGLE1BQTRGO0FBQzVGLE1BQStHO0FBQy9HLE1BQXdHO0FBQ3hHLE1BQXdHO0FBQ3hHLE1BQW9HO0FBQ3BHO0FBQ0E7O0FBRUE7O0FBRUEsNEJBQTRCLHFHQUFtQjtBQUMvQyx3QkFBd0Isa0hBQWE7O0FBRXJDLHVCQUF1Qix1R0FBYTtBQUNwQztBQUNBLGlCQUFpQiwrRkFBTTtBQUN2Qiw2QkFBNkIsc0dBQWtCOztBQUUvQyxhQUFhLDBHQUFHLENBQUMsdUZBQU87Ozs7QUFJOEM7QUFDdEUsT0FBTyxpRUFBZSx1RkFBTyxJQUFJLDhGQUFjLEdBQUcsOEZBQWMsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3R5bGVzLmNzcz8wNzJmIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./styles.css\n");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \*****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7O0FBRUEsa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEscUJBQXFCLDZCQUE2QjtBQUNsRDs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzPzc4YzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!*********************************************************************!*\
  !*** ../node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzREFBc0Q7O0FBRXREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcz9hZDE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/style-loader/dist/runtime/insertBySelector.js\n");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!***********************************************************************!*\
  !*** ../node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz8zMWVlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/style-loader/dist/runtime/insertStyleElement.js\n");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxjQUFjLEtBQXdDLEdBQUcsc0JBQWlCLEdBQUcsQ0FBSTs7QUFFakY7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzP2JmNTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\n");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!****************************************************************!*\
  !*** ../node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \****************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0RBQWtEO0FBQ2xEOztBQUVBO0FBQ0EsMENBQTBDO0FBQzFDOztBQUVBOztBQUVBO0FBQ0EsaUZBQWlGO0FBQ2pGOztBQUVBOztBQUVBO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0EsYUFBYTtBQUNiOztBQUVBOztBQUVBO0FBQ0EseURBQXlEO0FBQ3pELElBQUk7O0FBRUo7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcz9iZDFhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/style-loader/dist/runtime/styleDomAPI.js\n");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!**********************************************************************!*\
  !*** ../node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcz9lNzhiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/style-loader/dist/runtime/styleTagTransform.js\n");

/***/ }),

/***/ "./SimplePanel.tsx":
/*!*************************!*\
  !*** ./SimplePanel.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SimplePanel\": () => (/* binding */ SimplePanel)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @grafana/ui */ \"@grafana/ui\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_grafana_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_Arc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Arc */ \"./components/Arc.tsx\");\n/* harmony import */ var _components_SearchField__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/SearchField */ \"./components/SearchField.tsx\");\n/* harmony import */ var dataParser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dataParser */ \"./dataParser.ts\");\n/* harmony import */ var pathDataParser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! pathDataParser */ \"./pathDataParser.ts\");\n/* harmony import */ var styles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! styles */ \"./styles.ts\");\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! utils */ \"./utils.ts\");\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _object_spread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n    return target;\n}\n\n\n\n\n\n\n\n\n\n/**\n * Grafana Arc diagram panel\n *\n * @param {*} { options, data, width, height, id }\n * @return { Arc } Arc diagram\n */ const SimplePanel = ({ options , data , width , height , id  })=>{\n    const [query, setQuery] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [zoomState, setZoomState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(10);\n    const onClick = (isIncrement, isReset)=>{\n        if (!isIncrement && zoomState === 10) {\n            return;\n        } else {\n            setZoomState(isIncrement ? zoomState + 1 : zoomState - 1);\n        }\n        if (isReset) {\n            setZoomState(10);\n        }\n    };\n    let graphOptions = _object_spread({}, options);\n    const theme = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_1__.useTheme2)();\n    if (options.isCluster && data.series[0].fields.length < 5) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, \"Node clustering requires a 4th group by\");\n    }\n    if (options.isCluster && data.series[0].fields.length > 5) {\n    //return <div>Node clustering does not support a 5th group by</div>;\n    }\n    if (options.isCluster && (options.srcCluster === \"\" || options.dstCluster === \"\")) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, \"Choose fields for clustering\");\n    }\n    // check if source equals dst\n    if (!options.hopMode) {\n        const source = options.src ? data.series[0].fields.find((obj)=>obj.name === options.src).name : data.series[0].fields[0].name;\n        const target = options.dest ? data.series[0].fields.find((obj)=>obj.name === options.dest).name : data.series[0].fields[1].name;\n        // catch errors\n        if (source === target) {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, \"Source equals target\");\n        }\n        if (options.isCluster && (options.srcCluster === source || options.srcCluster === target || options.dstCluster === source || options.dstCluster === target)) {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, \"Fields for clustering can not be links source or target fields\");\n        }\n    }\n    let parsedData = {\n        uniqueNodes: [],\n        links: []\n    };\n    try {\n        if (!options.hopMode) {\n            parsedData = (0,dataParser__WEBPACK_IMPORTED_MODULE_4__.parseData)(data, graphOptions, theme);\n        } else {\n            parsedData = (0,pathDataParser__WEBPACK_IMPORTED_MODULE_5__.parsePathData)(data, graphOptions, theme);\n        }\n    } catch (error) {\n        console.error('parsing error: ', error);\n    }\n    // check if diagram fits panel\n    if ((0,utils__WEBPACK_IMPORTED_MODULE_7__.calcDiagramHeight)(parsedData.uniqueNodes, parsedData.links, width) > height) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, \"Increase panels height to fit diagram\");\n    }\n    const textColor = theme.colors.text.primary;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        id: \"scroll-box\",\n        style: styles__WEBPACK_IMPORTED_MODULE_6__.styles.panelContainerStyle\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_Arc__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        textColor: textColor,\n        parsedData: parsedData,\n        graphOptions: graphOptions,\n        width: width,\n        height: height,\n        query: query,\n        isDarkMode: theme.isDark,\n        panelId: id,\n        zoomState: zoomState\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_6__.styles.toolBarStyle\n    }, options.search && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_SearchField__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        onQuery: setQuery,\n        nodeList: parsedData.uniqueNodes,\n        isDarkMode: theme.isDark\n    }), options.zoom && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_6__.styles.zoomButtonWrapper\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        id: \"zoom-button\",\n        style: styles__WEBPACK_IMPORTED_MODULE_6__.styles.zoomButtonStyle(theme.isDark, 0),\n        onClick: ()=>onClick(false)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_6__.styles.zoomIcon(theme.isDark),\n        src: \"public/plugins/esnet-arcdiagram-panel/img/area_zoom_out.svg\",\n        alt: \"\"\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        id: \"zoom-button\",\n        style: styles__WEBPACK_IMPORTED_MODULE_6__.styles.zoomButtonStyle(theme.isDark, 1),\n        onClick: ()=>onClick(true)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_6__.styles.zoomIcon(theme.isDark),\n        src: \"public/plugins/esnet-arcdiagram-panel/img/area_zoom_in.svg\",\n        alt: \"\"\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        id: \"zoom-button\",\n        style: styles__WEBPACK_IMPORTED_MODULE_6__.styles.zoomButtonStyle(theme.isDark, 2),\n        onClick: ()=>onClick(true, true)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_6__.styles.zoomIcon(theme.isDark),\n        src: \"public/plugins/esnet-arcdiagram-panel/img/reset_icon.svg\",\n        alt: \"\"\n    })))));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./SimplePanel.tsx\n");

/***/ }),

/***/ "./components/Arc.tsx":
/*!****************************!*\
  !*** ./components/Arc.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3 */ \"d3\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(d3__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! utils */ \"./utils.ts\");\n/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles.css */ \"./styles.css\");\n/* harmony import */ var styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! styles */ \"./styles.ts\");\n\n\n\n\n\nlet toolTip = {\n    source: \"\",\n    target: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null),\n    field: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null),\n    pos: [\n        0,\n        0\n    ]\n};\nfunction Arc(props) {\n    let uniqueNodes = props.parsedData.uniqueNodes;\n    let links = props.parsedData.links;\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), gRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), labelRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), tooltipRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [showTooltip, setShowTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const handleToggleTooltip = (isActive)=>{\n        setShowTooltip(isActive);\n    };\n    function updateTooltip(pos, isActive, sourceId, targetId, displayValue, linkId) {\n        // when only sourceId is passed, display node and its targets\n        if (targetId === undefined) {\n            toolTip.source = (0,utils__WEBPACK_IMPORTED_MODULE_2__.idToName)(sourceId, uniqueNodes);\n            // get targets for passed nodes as strings\n            const nodeTargets = (0,utils__WEBPACK_IMPORTED_MODULE_2__.getNodeTargets)({\n                id: sourceId,\n                links\n            });\n            if (nodeTargets.length > 1) {\n                toolTip.target = nodeTargets.map((id)=>(0,utils__WEBPACK_IMPORTED_MODULE_2__.idToName)(id, uniqueNodes)).filter((value, index, array)=>array.indexOf(value) === index).map((string, index)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n                        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.toolTipStyle.text(props.zoom),\n                        key: index\n                    }, string, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"br\", null)));\n            } else if (nodeTargets.length === 1) {\n                toolTip.target = (0,utils__WEBPACK_IMPORTED_MODULE_2__.idToName)(nodeTargets[0], uniqueNodes);\n            } else {\n                toolTip.target = \"\";\n            }\n            if (props.graphOptions.isCluster) {\n                toolTip.field = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"b\", {\n                    style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.toolTipStyle.preface\n                }, \"Cluster: \"), \" \", uniqueNodes[sourceId].cluster);\n            } else {\n                toolTip.field = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"b\", {\n                    style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.toolTipStyle.preface\n                }, \"Weight: \"), uniqueNodes[sourceId].sum);\n            }\n        } else {\n            toolTip.source = (0,utils__WEBPACK_IMPORTED_MODULE_2__.idToName)(sourceId, uniqueNodes);\n            toolTip.target = (0,utils__WEBPACK_IMPORTED_MODULE_2__.idToName)(targetId, uniqueNodes);\n            const hoverLink = links.find((item)=>item.source === sourceId && item.target === targetId);\n            toolTip.field = props.parsedData.fields.map((field, index)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n                    key: index\n                }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"b\", {\n                    style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.toolTipStyle.preface\n                }, field.displayName, \":\"), hoverLink[`${field.field}Display`].map((string, index)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n                        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.toolTipStyle.text(props.zoom),\n                        key: index\n                    }, string, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"br\", null)))));\n        }\n        // toggle tooltip\n        handleToggleTooltip(isActive);\n        // update position\n        const panelContainer = document.querySelectorAll(`[data-panelid=\"${props.panelId}\"]`)[0];\n        if (panelContainer !== undefined) {\n            const mapBounds = panelContainer.getBoundingClientRect();\n            let offsetY = pos[1] - mapBounds.top, offsetX = pos[0] - mapBounds.left;\n            const toolTipDom = document.querySelectorAll(\"#tooltip\")[0], toolTipBounds = toolTipDom.getBoundingClientRect();\n            let leftOrRight = \"left\";\n            if (offsetX + toolTipBounds.right > mapBounds.right) {\n                leftOrRight = \"right\";\n                offsetX = mapBounds.right - pos[0];\n            }\n            let topOrBottom = \"top\";\n            // add margin of 31.99px\n            if (toolTipBounds.height + pos[1] + 31.99 > mapBounds.bottom) {\n                topOrBottom = \"bottom\";\n                offsetY = mapBounds.bottom - pos[1];\n            }\n            if (topOrBottom === \"top\") {\n                toolTipDom.style.top = `${offsetY}px`;\n            } else {\n                toolTipDom.style.bottom = `${offsetY}px`;\n            }\n            if (leftOrRight === \"left\") {\n                toolTipDom.style.left = `${offsetX}px`;\n            } else {\n                toolTipDom.style.right = `${offsetX}px`;\n            }\n        }\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // removes the graph if it exists in the dom so it gets rendered with updated dimensions\n        d3__WEBPACK_IMPORTED_MODULE_1__.selectAll(`[data-panelid=\"${props.panelId}\"] circle, [data-panelid=\"${props.panelId}\"] path, [data-panelid=\"${props.panelId}\"] text`).remove();\n        const width = props.width, height = props.height;\n        const container = containerRef.current, graph = gRef.current, labelBox = labelRef.current;\n        // render labels\n        const text = d3__WEBPACK_IMPORTED_MODULE_1__.select(labelBox).selectAll(`[data-panelid=\"${props.panelId}\"] text`).data(uniqueNodes);\n        text.enter().append(\"text\")// if node has large radius, offset the label for readability\n        .attr(\"x\", (d)=>{\n            return uniqueNodes.find((e)=>e.id === d.id).radius >= 7 ? -(uniqueNodes.find((e)=>e.id === d.id).radius * 1.6) : -10;\n        }).attr(\"y\", (d)=>{\n            return uniqueNodes.find((e)=>e.id === d.id).radius >= 7 ? uniqueNodes.find((e)=>e.id === d.id).radius * 0.8 : 10;\n        }).text((d, i)=>uniqueNodes[i].name).style(\"text-anchor\", \"end\").attr('fill', ()=>{\n            return props.isDarkMode ? \"white\" : \"black\";\n        }).attr('font-size', props.graphOptions.fontSize).attr('transform', (d, i)=>\"translate(\" + 0 + \",\" + height + \")rotate(-45)\").style(\"margin-right\", \"5px\").attr('name', (d, i)=>{\n            return uniqueNodes[i].name;\n        }).attr('id', (d, i)=>{\n            return i;\n        });\n        // get array of equally spaced values for positioning of graph on x axis\n        const values = (0,utils__WEBPACK_IMPORTED_MODULE_2__.linSpace)(props.graphOptions.marginLeft, width - props.graphOptions.marginRight, uniqueNodes.length);\n        const labelsAsHtml = document.querySelectorAll(`[data-panelid=\"${props.panelId}\"] text`);\n        let offsetBottom = (0,utils__WEBPACK_IMPORTED_MODULE_2__.calcBottomOffset)(labelsAsHtml);\n        // Update the labels position\n        d3__WEBPACK_IMPORTED_MODULE_1__.selectAll(`[data-panelid=\"${props.panelId}\"] text`).attr('transform', (d, i)=>\"translate(\" + values[i] + \",\" + (height - (0,utils__WEBPACK_IMPORTED_MODULE_2__.calcBottomOffset)(labelsAsHtml)) + \")rotate(-45)\");\n        // check if label is out of bounds\n        Array.from(labelsAsHtml).forEach((element)=>{\n            (0,utils__WEBPACK_IMPORTED_MODULE_2__.replaceEllipsis)(element, false);\n        });\n        offsetBottom = (0,utils__WEBPACK_IMPORTED_MODULE_2__.calcBottomOffset)(labelsAsHtml);\n        // Update the labels position\n        d3__WEBPACK_IMPORTED_MODULE_1__.selectAll(`[data-panelid=\"${props.panelId}\"] text`).attr('transform', (d, i)=>\"translate(\" + values[i] + \",\" + (height - offsetBottom) + \")rotate(-45)\");\n        // render nodes\n        const svg = d3__WEBPACK_IMPORTED_MODULE_1__.select(container).selectAll(`[data-panelid=\"${props.panelId}\"] circle`).data(uniqueNodes);\n        svg.enter().append(\"circle\").attr(\"cx\", (d, i)=>values[i]).attr(\"cy\", height - offsetBottom).attr(\"r\", (n)=>{\n            return n === null || n === void 0 ? void 0 : n.radius;\n        }).style(\"fill\", (d, i)=>uniqueNodes[i].color).attr(\"id\", (d, i)=>uniqueNodes[i].id).attr(\"name\", (d, i)=>uniqueNodes[i].name).attr(\"radius\", (d, i)=>uniqueNodes[i].radius);\n        // render links\n        const g = d3__WEBPACK_IMPORTED_MODULE_1__.select(graph).selectAll(`[data-panelid=\"${props.panelId}\"] path`).data(links);\n        g.enter().append('path').attr('d', function(d, i) {\n            const start = values[links[i].source];\n            const end = values[links[i].target];\n            const radiusX = Math.abs(start - end) / 2; // X-axis radius\n            let radiusY = radiusX * 1; // Y-axis radius (adjust the value as desired for the desired elliptical shape)\n            if (props.graphOptions.hopMode) {\n                if (links[i].isOverlap) {\n                    radiusY = radiusX * links[i].mapRadiusY;\n                }\n            }\n            const largeArcFlag = Math.abs(start - end) > Math.PI ? 1 : 0; // Determines whether the arc should be greater than or less than 180 degrees\n            return [\n                'M',\n                start,\n                height - offsetBottom,\n                'A',\n                radiusX,\n                ',',\n                radiusY,\n                0,\n                largeArcFlag,\n                ',',\n                start < end ? 1 : 0,\n                end,\n                ',',\n                height - offsetBottom\n            ].join(' ');\n        }).style(\"fill\", \"none\").attr(\"stroke\", (l)=>{\n            return l === null || l === void 0 ? void 0 : l.color;\n        }).attr(\"id\", (d, i)=>links[i].id).attr(\"stroke-width\", (l)=>{\n            return l === null || l === void 0 ? void 0 : l.strokeWidth;\n        }).style(\"opacity\", props.graphOptions.arcOpacity).attr(\"source\", (d, i)=>links[i].source).attr(\"target\", (d, i)=>links[i].target).attr(\"sum\", (d, i)=>links[i].sum).attr(\"displayValue\", (d, i)=>links[i].displayValue).attr(\"path\", (d, i)=>links[i].path);\n        /********************************** Highlighting **********************************/ const nodes = d3__WEBPACK_IMPORTED_MODULE_1__.selectAll(`[data-panelid=\"${props.panelId}\"] circle`);\n        const paths = d3__WEBPACK_IMPORTED_MODULE_1__.selectAll(`[data-panelid=\"${props.panelId}\"] path`);\n        const labels = d3__WEBPACK_IMPORTED_MODULE_1__.selectAll(`[data-panelid=\"${props.panelId}\"] text`);\n        const duration = 200;\n        const isQuery = props.query.length !== 0;\n        const queryMatches = (0,utils__WEBPACK_IMPORTED_MODULE_2__.getQueryMatches)(props.query, uniqueNodes);\n        nodes.on(\"mouseover\", function(d) {\n            // Tooltip\n            updateTooltip([\n                d.clientX,\n                d.clientY\n            ], true, Number(d.srcElement.id));\n            labelsAsHtml[d.srcElement.id].setAttribute(\"name\", labelsAsHtml[d.srcElement.id].innerHTML);\n            const nodeTargets = (0,utils__WEBPACK_IMPORTED_MODULE_2__.getNodeTargets)({\n                id: Number(d.srcElement.id),\n                links\n            });\n            // add ellipsis for node being hovered over & target nodes\n            (0,utils__WEBPACK_IMPORTED_MODULE_2__.replaceEllipsis)(labelsAsHtml[d.srcElement.id], true);\n            nodeTargets.forEach((e)=>{\n                (0,utils__WEBPACK_IMPORTED_MODULE_2__.replaceEllipsis)(labelsAsHtml[e], true);\n            });\n            nodes.style(\"opacity\", (n)=>{\n                if (isQuery) {\n                    return queryMatches.has(n.id) ? 1 : 0.1;\n                } else {\n                    return nodeTargets.includes(n.id) ? 1 : 0.1;\n                }\n            }).transition().attr(\"r\", (n)=>{\n                if (isQuery) {\n                    return uniqueNodes[n.id].radius;\n                } else {\n                    return nodeTargets.includes(n.id) ? uniqueNodes[n.id].radius * 2 : uniqueNodes[n.id].radius;\n                }\n            }).duration(duration);\n            d3__WEBPACK_IMPORTED_MODULE_1__.select(this).style(\"opacity\", 1).transition().duration(duration).attr(\"r\", uniqueNodes[d.srcElement.id].radius * 2);\n            paths.transition().style('opacity', (l)=>{\n                if (isQuery) {\n                    return queryMatches.has(l.source) || queryMatches.has(l.target) ? props.graphOptions.arcOpacity : .1;\n                } else {\n                    /* eslint-disable eqeqeq */ return d.srcElement.id == (l === null || l === void 0 ? void 0 : l.source) || d.srcElement.id == (l === null || l === void 0 ? void 0 : l.target) ? props.graphOptions.arcOpacity : .1;\n                }\n            }).attr('stroke-width', (l)=>{\n                /* eslint-disable eqeqeq */ return d.srcElement.id == (l === null || l === void 0 ? void 0 : l.source) || d.srcElement.id == (l === null || l === void 0 ? void 0 : l.target) ? (l === null || l === void 0 ? void 0 : l.strokeWidth) * 2 : l === null || l === void 0 ? void 0 : l.strokeWidth;\n            }).duration(duration);\n            labels.transition().duration(duration).attr(\"font-size\", (label_d)=>{\n                if (isQuery) {\n                    return label_d.name === d.srcElement.getAttribute(\"name\") ? props.graphOptions.fontSize * 1.6 : props.graphOptions.fontSize;\n                } else {\n                    return label_d.name === d.srcElement.getAttribute(\"name\") || nodeTargets.includes(label_d.id) ? props.graphOptions.fontSize * 1.6 : props.graphOptions.fontSize;\n                }\n            }).style(\"opacity\", (label_d)=>{\n                if (isQuery) {\n                    return label_d.name === d.srcElement.getAttribute(\"name\") ? 1 : .1;\n                } else {\n                    return label_d.name === d.srcElement.getAttribute(\"name\") || nodeTargets.includes(label_d.id) ? 1 : .1;\n                }\n            });\n        }).on('mouseout', function(d) {\n            const nodeTargets = (0,utils__WEBPACK_IMPORTED_MODULE_2__.getNodeTargets)({\n                id: Number(d.srcElement.id),\n                links\n            });\n            (0,utils__WEBPACK_IMPORTED_MODULE_2__.replaceEllipsis)(labelsAsHtml[d.srcElement.id], false);\n            (0,utils__WEBPACK_IMPORTED_MODULE_2__.resetLabel)(labelsAsHtml[d.srcElement.id]);\n            nodeTargets.forEach((e)=>{\n                (0,utils__WEBPACK_IMPORTED_MODULE_2__.resetLabel)(labelsAsHtml[e]);\n            });\n            handleToggleTooltip(false);\n            nodes.transition().duration(duration).attr(\"r\", (n)=>{\n                return uniqueNodes[n.id].radius;\n            }).style(\"opacity\", (n)=>{\n                if (isQuery) {\n                    return queryMatches.has(n.id) ? 1 : .1;\n                } else {\n                    return 1;\n                }\n            });\n            d3__WEBPACK_IMPORTED_MODULE_1__.select(this).transition().duration(duration).attr(\"r\", uniqueNodes[d.srcElement.id].radius);\n            paths.transition().duration(duration).style(\"opacity\", (l)=>{\n                if (isQuery) {\n                    return queryMatches.has(l.source) || queryMatches.has(l.target) ? props.graphOptions.arcOpacity : .1;\n                } else {\n                    return props.graphOptions.arcOpacity;\n                }\n            }).attr('stroke-width', (l)=>{\n                return l === null || l === void 0 ? void 0 : l.strokeWidth;\n            });\n            labels.transition().duration(duration).attr(\"font-size\", props.graphOptions.fontSize).style(\"opacity\", (l)=>{\n                if (isQuery) {\n                    return queryMatches.has(l.id) ? 1 : .1;\n                } else {\n                    return 1;\n                }\n            });\n        });\n        /********************************** Link tooltip **********************************/ paths.on(\"mouseover\", function(d) {\n            updateTooltip([\n                d.clientX,\n                d.clientY\n            ], true, Number(d.srcElement.getAttribute(\"source\")), Number(d.srcElement.getAttribute(\"target\")), d.srcElement.getAttribute(\"displayValue\"), d.srcElement.id);\n            paths.style(\"opacity\", (l)=>{\n                if (isQuery) {\n                    return queryMatches.has(l.source) || queryMatches.has(l.target) ? props.graphOptions.arcOpacity : .1;\n                } else if (props.graphOptions.hopMode) {\n                    return Number(d.srcElement.getAttribute(\"path\")) === l.path ? props.graphOptions.arcOpacity : .1;\n                } else {\n                    return .1;\n                }\n            }).transition().duration(duration);\n            d3__WEBPACK_IMPORTED_MODULE_1__.select(this).transition().style(\"opacity\", props.graphOptions.arcOpacity).duration(duration);\n        }).on('mouseout', function(d) {\n            handleToggleTooltip(false);\n            paths.transition().duration(duration).style(\"opacity\", (l)=>{\n                if (isQuery) {\n                    return queryMatches.has(l.source) || queryMatches.has(l.target) ? props.graphOptions.arcOpacity : .1;\n                } else {\n                    return props.graphOptions.arcOpacity;\n                }\n            }).attr('stroke-width', (l)=>{\n                return l === null || l === void 0 ? void 0 : l.strokeWidth;\n            });\n            d3__WEBPACK_IMPORTED_MODULE_1__.select(this).transition().style(\"opacity\", (l)=>{\n                if (isQuery) {\n                    return queryMatches.has(l.source) || queryMatches.has(l.target) ? props.graphOptions.arcOpacity : .1;\n                } else {\n                    return props.graphOptions.arcOpacity;\n                }\n            }).duration(duration).attr('stroke-width', (l)=>{\n                return l === null || l === void 0 ? void 0 : l.strokeWidth;\n            });\n        });\n        if (props.graphOptions.search && isQuery) {\n            (0,utils__WEBPACK_IMPORTED_MODULE_2__.evaluateQuery)(props.query, uniqueNodes, labels, paths, nodes, props.graphOptions.arcOpacity);\n        }\n    /* eslint-disable react-hooks/exhaustive-deps */ }, [\n        props.graphOptions,\n        links,\n        props.height,\n        props.width,\n        uniqueNodes\n    ]);\n    if (document.querySelectorAll(`[data-panelid=\"${props.panelId}\"] #canvas`)[0] !== undefined) {\n        (0,utils__WEBPACK_IMPORTED_MODULE_2__.handleZoom)(document.querySelectorAll(`[data-panelid=\"${props.panelId}\"] #canvas`)[0], props.zoomState);\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.containerStyle\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        id: \"canvas\",\n        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.containerStyle\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.containerStyle,\n        ref: containerRef\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.containerStyle,\n        ref: gRef\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.labelStyle,\n        ref: labelRef\n    }))), showTooltip && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: tooltipRef,\n        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.toolTipStyle.box,\n        id: \"tooltip\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.toolTipStyle.text(props.graphOptions.tooltipFontSize)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"b\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.toolTipStyle.preface\n    }, props.graphOptions.toolTipSource), \" \", \" \", toolTip.source), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"br\", null), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.toolTipStyle.text(props.graphOptions.tooltipFontSize)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"b\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.toolTipStyle.preface\n    }, props.graphOptions.toolTipTarget), toolTip.target), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"br\", null), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n        style: styles__WEBPACK_IMPORTED_MODULE_4__.styles.toolTipStyle.text(props.graphOptions.tooltipFontSize)\n    }, \" \", toolTip.field)));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Arc);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Arc.tsx\n");

/***/ }),

/***/ "./components/CustomRangeSlider.tsx":
/*!******************************************!*\
  !*** ./components/CustomRangeSlider.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CustomRangeSlider\": () => (/* binding */ CustomRangeSlider)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @grafana/ui */ \"@grafana/ui\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_grafana_ui__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst CustomRangeSlider = ({ value , onChange , item , suffix  })=>{\n    const onValueChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value)=>{\n        onChange(String(value));\n    }, [\n        onChange\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_1__.RangeSlider, {\n        min: 1,\n        max: 50,\n        onAfterChange: onValueChange,\n        onChange: onValueChange,\n        orientation: \"horizontal\",\n        value: [\n            1,\n            15\n        ]\n    }));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0N1c3RvbVJhbmdlU2xpZGVyLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFzRDtBQUNaO0FBUW5DLE1BQU1HLG9CQUFxQyxDQUFDLEVBQUVDLE1BQUssRUFBRUMsU0FBUSxFQUFFQyxLQUFJLEVBQUVDLE9BQU0sRUFBRSxHQUFLO0lBRXZGLE1BQU1DLGdCQUFnQlAsa0RBQVdBLENBQy9CLENBQUNHLFFBQWdDO1FBQy9CQyxTQUFTSSxPQUFPTDtJQUNsQixHQUVBO1FBQUNDO0tBQVM7SUFHWixxQkFDRSwyREFBQ0ssMkJBQ0MsMkRBQUNSLG9EQUFXQTtRQUNSUyxLQUFLO1FBQ0xDLEtBQUs7UUFDTEMsZUFBZUw7UUFDZkgsVUFBVUc7UUFDVk0sYUFBWTtRQUNaVixPQUFPO1lBQ0g7WUFDQTtTQUNIOztBQUlYLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL0N1c3RvbVJhbmdlU2xpZGVyLnRzeD9hOWExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBSZWFjdE5vZGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUmFuZ2VTbGlkZXIgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5pbXBvcnQgeyBTdGFuZGFyZEVkaXRvclByb3BzLCBTdHJpbmdGaWVsZENvbmZpZ1NldHRpbmdzIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5cblxuaW50ZXJmYWNlIFByb3BzIGV4dGVuZHMgU3RhbmRhcmRFZGl0b3JQcm9wczxzdHJpbmcsIFN0cmluZ0ZpZWxkQ29uZmlnU2V0dGluZ3M+IHtcbiAgc3VmZml4PzogUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgY29uc3QgQ3VzdG9tUmFuZ2VTbGlkZXI6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHZhbHVlLCBvbkNoYW5nZSwgaXRlbSwgc3VmZml4IH0pID0+IHtcblxuICBjb25zdCBvblZhbHVlQ2hhbmdlID0gdXNlQ2FsbGJhY2soXG4gICAgKHZhbHVlOiBudW1iZXJbXSB8IHVuZGVmaW5lZCkgPT4ge1xuICAgICAgb25DaGFuZ2UoU3RyaW5nKHZhbHVlKSlcbiAgICB9LFxuICAgIFxuICAgIFtvbkNoYW5nZV1cbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8UmFuZ2VTbGlkZXJcbiAgICAgICAgICBtaW49ezF9XG4gICAgICAgICAgbWF4PXs1MH1cbiAgICAgICAgICBvbkFmdGVyQ2hhbmdlPXtvblZhbHVlQ2hhbmdlfVxuICAgICAgICAgIG9uQ2hhbmdlPXtvblZhbHVlQ2hhbmdlfVxuICAgICAgICAgIG9yaWVudGF0aW9uPVwiaG9yaXpvbnRhbFwiXG4gICAgICAgICAgdmFsdWU9e1tcbiAgICAgICAgICAgICAgMSxcbiAgICAgICAgICAgICAgMTVcbiAgICAgICAgICBdfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtcblxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlQ2FsbGJhY2siLCJSYW5nZVNsaWRlciIsIkN1c3RvbVJhbmdlU2xpZGVyIiwidmFsdWUiLCJvbkNoYW5nZSIsIml0ZW0iLCJzdWZmaXgiLCJvblZhbHVlQ2hhbmdlIiwiU3RyaW5nIiwiZGl2IiwibWluIiwibWF4Iiwib25BZnRlckNoYW5nZSIsIm9yaWVudGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/CustomRangeSlider.tsx\n");

/***/ }),

/***/ "./components/SearchField.tsx":
/*!************************************!*\
  !*** ./components/SearchField.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SearchField)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styles */ \"./styles.ts\");\n\n\nfunction SearchField(props) {\n    const handleChange = (e)=>{\n        props.onQuery(e.target.value);\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        id: \"search-field\",\n        style: styles__WEBPACK_IMPORTED_MODULE_1__.styles.searchFieldStyle\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n        placeholder: \"Search nodes/edges\",\n        style: styles__WEBPACK_IMPORTED_MODULE_1__.styles.inputStyle(props.isDarkMode),\n        type: \"text\",\n        onChange: handleChange\n    }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1NlYXJjaEZpZWxkLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBDO0FBQ1g7QUFFaEIsU0FBU0UsWUFBWUMsS0FBVSxFQUFFO0lBRTVDLE1BQU1DLGVBQWUsQ0FBQ0MsSUFBcUM7UUFDdkRGLE1BQU1HLE9BQU8sQ0FBQ0QsRUFBRUUsTUFBTSxDQUFDQyxLQUFLO0lBQ2hDO0lBRUEscUJBQ0UsMkRBQUNDO1FBQUlDLElBQUc7UUFBZUMsT0FBT1YsMkRBQXVCO3FCQUNuRCwyREFBQ1k7UUFBTUMsYUFBWTtRQUFxQkgsT0FBT1YscURBQWlCLENBQUNFLE1BQU1hLFVBQVU7UUFBR0MsTUFBSztRQUFPQyxVQUFVZDs7QUFHbEgsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NvbXBvbmVudHMvU2VhcmNoRmllbGQudHN4PzlkZTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENoYW5nZUV2ZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBzdHlsZXMgfSBmcm9tICdzdHlsZXMnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNlYXJjaEZpZWxkKHByb3BzOiBhbnkpIHtcblxuICAgIGNvbnN0IGhhbmRsZUNoYW5nZSA9IChlOiBDaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgICAgICBwcm9wcy5vblF1ZXJ5KGUudGFyZ2V0LnZhbHVlKVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGlkPVwic2VhcmNoLWZpZWxkXCIgc3R5bGU9e3N0eWxlcy5zZWFyY2hGaWVsZFN0eWxlfT5cbiAgICAgICAgPGlucHV0IHBsYWNlaG9sZGVyPVwiU2VhcmNoIG5vZGVzL2VkZ2VzXCIgc3R5bGU9e3N0eWxlcy5pbnB1dFN0eWxlKHByb3BzLmlzRGFya01vZGUpfSB0eXBlPVwidGV4dFwiIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9Lz5cbiAgICAgIDwvZGl2PlxuICAgIClcbn1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsInN0eWxlcyIsIlNlYXJjaEZpZWxkIiwicHJvcHMiLCJoYW5kbGVDaGFuZ2UiLCJlIiwib25RdWVyeSIsInRhcmdldCIsInZhbHVlIiwiZGl2IiwiaWQiLCJzdHlsZSIsInNlYXJjaEZpZWxkU3R5bGUiLCJpbnB1dCIsInBsYWNlaG9sZGVyIiwiaW5wdXRTdHlsZSIsImlzRGFya01vZGUiLCJ0eXBlIiwib25DaGFuZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/SearchField.tsx\n");

/***/ }),

/***/ "./dataParser.ts":
/*!***********************!*\
  !*** ./dataParser.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseData\": () => (/* binding */ parseData)\n/* harmony export */ });\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! utils */ \"./utils.ts\");\n\n/**\n * Takes data from Grafana query and returns it in the format needed for this panel\n *\n * @param data the data returned by the query\n * @param options the field options from the editor panel\n * @param theme needed for utility functions for example to map color strings to hex values\n * @return {uniqueNodes} list of unique nodes to be rendered on the x axis\n * @return {links} array of objects with fields source, target, arcWeightValue, strokewidth where each object represents one link\n * @return {hexColors} colors converted to hex\n */ function parseData(data, options, theme) {\n    var _allData_find, _allData_find1, _allData_find2, _options_arcRange, _options_arcRange1;\n    const allData = data.series[0].fields;\n    // if src/dst not defined in options, take first/second group by default\n    const sourceString = options.src ? allData.find((obj)=>obj.name === options.src).name : allData[0].name;\n    const targetString = options.dest ? allData.find((obj)=>obj.name === options.dest).name : allData[1].name;\n    const sourceValues = (_allData_find = allData.find((obj)=>obj.name === sourceString)) === null || _allData_find === void 0 ? void 0 : _allData_find.values;\n    const targetValues = (_allData_find1 = allData.find((obj)=>obj.name === targetString)) === null || _allData_find1 === void 0 ? void 0 : _allData_find1.values;\n    const arcWeightString = options.arcWeightSource ? allData.find((obj)=>obj.name === options.arcWeightSource).name : allData[allData.length - 1].name;\n    const arcWeightValues = (_allData_find2 = allData.find((obj)=>obj.name === arcWeightString)) === null || _allData_find2 === void 0 ? void 0 : _allData_find2.values;\n    const fields = (0,utils__WEBPACK_IMPORTED_MODULE_0__.getFieldDisplayNames)(allData, sourceString, targetString);\n    const hexColors = {\n        nodeColor: theme.visualization.getColorByName(options.nodeColor)\n    };\n    /********************************** Nodes **********************************/ // get source and target arrays and create array of unique nodes from them\n    const uniqueNodes = Array.from([\n        ...new Set([\n            ...sourceValues,\n            ...targetValues\n        ])\n    ]).map((str, index)=>({\n            id: index,\n            name: str,\n            sum: 0,\n            radius: 0,\n            cluster: \"\",\n            color: hexColors.nodeColor\n        }));\n    /********************************** Links **********************************/ let srcById = sourceValues.map((name)=>{\n        const dictionaryItem = uniqueNodes.find((item)=>item.name === name);\n        return dictionaryItem ? dictionaryItem.id : null;\n    });\n    let dstById = targetValues.map((name)=>{\n        const dictionaryItem = uniqueNodes.find((item)=>item.name === name);\n        return dictionaryItem ? dictionaryItem.id : null;\n    });\n    let links = srcById.map((element, index)=>{\n        var _allData_find;\n        return {\n            srcName: sourceValues.buffer[index],\n            dstName: targetValues.buffer[index],\n            source: element,\n            target: dstById[index],\n            arcWeightValue: arcWeightValues.buffer[index],\n            strokeWidth: 0,\n            color: allData[allData.length - 1].display(allData[allData.length - 1].values.buffer[index]).color,\n            [options.colorConfigField]: (_allData_find = allData.find((obj)=>obj.name === options.colorConfigField)) === null || _allData_find === void 0 ? void 0 : _allData_find.values.buffer[index]\n        };\n    });\n    //if(!options.isCluster) {\n    links.forEach((link, index)=>{\n        fields.forEach((field)=>{\n            var _allData_find, _allData_find1;\n            Object.assign(link, {\n                [field.field]: []\n            });\n            link[field.field].push((_allData_find = allData.find((obj)=>obj.name === field.field)) === null || _allData_find === void 0 ? void 0 : _allData_find.values.buffer[index]);\n            const display = allData.find((obj)=>obj.name === field.field).display((_allData_find1 = allData.find((obj)=>obj.name === field.field)) === null || _allData_find1 === void 0 ? void 0 : _allData_find1.values.buffer[index]);\n            const suffix = display.suffix === undefined ? \"\" : display.suffix;\n            Object.assign(link, {\n                [`${field.field}Display`]: [\n                    `${display.text} ${suffix}`\n                ]\n            });\n        });\n    });\n    //}\n    /********************************** Node clustering **********************************/ if (options.isCluster) {\n        (0,utils__WEBPACK_IMPORTED_MODULE_0__.clusterNodes)(uniqueNodes, links, options, theme, allData);\n    }\n    /********************************** Bundle overlapping links **********************************/ if (allData.length > 3) {\n        const uniqueLinks = links.reduce((acc, cur, index)=>{\n            const existing = acc.find((e)=>e.source === cur.source && e.target === cur.target);\n            if (existing) {\n                fields.forEach((field)=>{\n                    if (allData.find((obj)=>obj.name === field.field).state.range !== undefined) {\n                        let newValue = existing[field.field][0] + cur[field.field][0];\n                        existing[field.field] = [\n                            newValue\n                        ];\n                        const display = allData.find((obj)=>obj.name === field.field).display(newValue);\n                        existing[`${field.field}Display`] = [\n                            `${display.text} ${display.suffix}`\n                        ];\n                    } else {\n                        if (!existing[field.field].includes(cur[field.field])) {\n                            cur[field.field].forEach((fieldEntry)=>{\n                                existing[field.field].push(fieldEntry);\n                            });\n                        }\n                        existing[`${field.field}Display`] = existing[field.field];\n                    }\n                });\n            } else {\n                const addLink = {\n                    srcName: cur.srcName,\n                    dstName: cur.dstName,\n                    source: cur.source,\n                    target: cur.target,\n                    arcWeightValue: cur.arcWeightValue,\n                    displayValue: cur.displayValue,\n                    strokeWidth: 0,\n                    color: cur.color,\n                    [options.colorConfigField]: cur[options.colorConfigField]\n                };\n                fields.forEach((field)=>{\n                    Object.assign(addLink, {\n                        [field.field]: []\n                    });\n                    addLink[field.field] = cur[field.field];\n                    const display = allData.find((obj)=>obj.name === field.field).display(cur[field.field][0]);\n                    const suffix = display.suffix === undefined ? \"\" : display.suffix;\n                    if (allData.find((obj)=>obj.name === field.field).state.range !== undefined) {\n                        Object.assign(addLink, {\n                            [`${field.field}Display`]: [\n                                `${display.text} ${suffix}`\n                            ]\n                        });\n                    } else {\n                        Object.assign(addLink, {\n                            [`${field.field}Display`]: cur[field.field]\n                        });\n                    }\n                });\n                acc.push(addLink);\n            }\n            return acc;\n        }, []);\n        links = uniqueLinks;\n    }\n    // accumulate nodesums after potential bundling\n    (0,utils__WEBPACK_IMPORTED_MODULE_0__.addNodeSum)(links, uniqueNodes);\n    (0,utils__WEBPACK_IMPORTED_MODULE_0__.calcNodeRadius)(uniqueNodes, links, options);\n    /********************************** Colors **********************************/ // create groups for the field specified\n    let groups = [];\n    if (options.linkColorConfig !== \"default\" && options.colorConfigField) {\n        // create unique groups according to the setting specified in options\n        groups = [\n            ...new Set(links.map((item)=>{\n                if (Array.isArray(item[options.colorConfigField])) {\n                    return item[options.colorConfigField][item[options.colorConfigField].length - 1];\n                }\n                return item[options.colorConfigField];\n            }))\n        ].map((group)=>({\n                [options.colorConfigField]: group,\n                color: \"\"\n            }));\n        console.log(groups);\n        const spacedColors = (0,utils__WEBPACK_IMPORTED_MODULE_0__.getEvenlySpacedColors)(groups.length, theme.isDark);\n        groups.forEach((e, i)=>{\n            e.color = spacedColors[i];\n        });\n    }\n    /********************************** Stroke width/ node radius **********************************/ // set range for mapping\n    const linkScaleFrom = (_options_arcRange = options.arcRange) === null || _options_arcRange === void 0 ? void 0 : _options_arcRange.split(\",\").map(Number)[0], linkScaleTo = (_options_arcRange1 = options.arcRange) === null || _options_arcRange1 === void 0 ? void 0 : _options_arcRange1.split(\",\").map(Number)[1];\n    const minLink = Number(Math.min(...links.map((e)=>e.arcWeightValue))), maxLink = Number(Math.max(...links.map((e)=>e.arcWeightValue)));\n    console.log(links);\n    links.forEach((e)=>{\n        (0,utils__WEBPACK_IMPORTED_MODULE_0__.calcStrokeWidth)(options.arcFromSource, options.scale, options.arcThickness, e, linkScaleFrom, linkScaleTo, minLink, maxLink);\n        // link color by field\n        if (options.linkColorConfig === \"field\" && groups) {\n            const linkGroup = !Array.isArray(e[options.colorConfigField]) ? e[options.colorConfigField] : e[options.colorConfigField][e[options.colorConfigField].length - 1];\n            console.log(linkGroup);\n            e.color = groups.find((group)=>group[options.colorConfigField] === linkGroup).color;\n        }\n    });\n    /**********************************************************************************/ return {\n        uniqueNodes,\n        links,\n        hexColors,\n        fields\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dataParser.ts\n");

/***/ }),

/***/ "./module.ts":
/*!*******************!*\
  !*** ./module.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"plugin\": () => (/* binding */ plugin)\n/* harmony export */ });\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @grafana/data */ \"@grafana/data\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_grafana_data__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _SimplePanel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SimplePanel */ \"./SimplePanel.tsx\");\n/* harmony import */ var _components_CustomRangeSlider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/CustomRangeSlider */ \"./components/CustomRangeSlider.tsx\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _async_to_generator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\n\n\n\nconst AppearanceCategory = [\n    'Appearance'\n];\nconst DataCategory = [\n    'Data'\n];\nconst ModeCategory = [\n    'Mode'\n];\nconst plugin = new _grafana_data__WEBPACK_IMPORTED_MODULE_0__.PanelPlugin(_SimplePanel__WEBPACK_IMPORTED_MODULE_1__.SimplePanel).setPanelOptions((builder)=>{\n    return builder.addBooleanSwitch({\n        path: 'hopMode',\n        name: 'Visualize traceroute',\n        defaultValue: false,\n        category: ModeCategory,\n        showIf: (config)=>!config.isCluster\n    }).addSelect({\n        path: 'delimiter',\n        name: 'String delimiter',\n        description: 'Character to seperate nodes by',\n        defaultValue: \"Space\",\n        category: ModeCategory,\n        settings: {\n            allowCustomValue: false,\n            options: [\n                {\n                    label: \"Space\",\n                    value: \"space\"\n                },\n                {\n                    label: \",\",\n                    value: \",\"\n                },\n                {\n                    label: \";\",\n                    value: \";\"\n                },\n                {\n                    label: \":\",\n                    value: \":\"\n                }\n            ]\n        },\n        showIf: (config)=>config.hopMode\n    }).addBooleanSwitch({\n        path: 'arcFromSource',\n        name: 'Arc thickness from source',\n        defaultValue: false,\n        category: AppearanceCategory\n    }).addBooleanSwitch({\n        path: 'radiusFromSource',\n        name: 'Node radius from source',\n        defaultValue: false,\n        category: AppearanceCategory,\n        showIf: (config)=>!config.hopMode\n    }).addSelect({\n        path: 'arcWeightSource',\n        name: 'Weight field',\n        description: 'Select a field for the arc and node weight (has to be a metric):',\n        category: AppearanceCategory,\n        settings: {\n            allowCustomValue: false,\n            options: [],\n            getOptions: function() {\n                var _ref = _async_to_generator(function*(context) {\n                    const options = [];\n                    if (context && context.data) {\n                        for (const frame of context.data){\n                            for (const field of frame.fields){\n                                const value = field.name;\n                                options.push({\n                                    value,\n                                    label: value\n                                });\n                            }\n                        }\n                    }\n                    return Promise.resolve(options);\n                });\n                return function(context) {\n                    return _ref.apply(this, arguments);\n                };\n            }()\n        },\n        showIf: (config)=>config.arcFromSource || config.radiusFromSource\n    }).addSliderInput({\n        path: 'arcThickness',\n        name: 'Arc thickness',\n        defaultValue: 1,\n        settings: {\n            min: 1,\n            max: 15,\n            step: 1\n        },\n        showIf: (config)=>!config.arcFromSource,\n        category: AppearanceCategory\n    }).addSliderInput({\n        path: 'arcOpacity',\n        name: 'Arc opacity',\n        defaultValue: 1,\n        settings: {\n            min: .6,\n            max: 1,\n            step: .1\n        },\n        category: AppearanceCategory\n    }).addSliderInput({\n        path: 'nodeRadius',\n        name: 'Node radius',\n        defaultValue: 5,\n        settings: {\n            min: 5,\n            max: 15,\n            step: 1\n        },\n        showIf: (config)=>!config.radiusFromSource,\n        category: AppearanceCategory\n    }).addSelect({\n        path: 'linkColorConfig',\n        name: 'Link color',\n        description: 'Select configuration for the link color',\n        defaultValue: \"default\",\n        category: AppearanceCategory,\n        settings: {\n            allowCustomValue: false,\n            options: [\n                {\n                    label: \"Default\",\n                    value: \"default\"\n                },\n                {\n                    label: \"By field\",\n                    value: \"field\"\n                }\n            ]\n        }\n    }).addSelect({\n        path: 'colorConfigField',\n        name: 'Field',\n        description: 'Select a field to base the link color on:',\n        category: AppearanceCategory,\n        settings: {\n            allowCustomValue: false,\n            options: [],\n            getOptions: function() {\n                var _ref = _async_to_generator(function*(context) {\n                    const options = [];\n                    if (context && context.data) {\n                        for (const frame of context.data){\n                            for (const field of frame.fields){\n                                const name = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_0__.getFieldDisplayName)(field, frame, context.data);\n                                const value = name;\n                                options.push({\n                                    value,\n                                    label: name\n                                });\n                            }\n                        }\n                    }\n                    return Promise.resolve(options);\n                });\n                return function(context) {\n                    return _ref.apply(this, arguments);\n                };\n            }()\n        },\n        showIf: (config)=>config.linkColorConfig !== \"default\"\n    }).addColorPicker({\n        path: 'nodeColor',\n        name: 'Node Color',\n        defaultValue: 'blue',\n        category: AppearanceCategory,\n        showIf: (config)=>!config.isCluster\n    }).addSliderInput({\n        path: 'fontSize',\n        name: 'Font size',\n        defaultValue: 10,\n        settings: {\n            min: 5,\n            max: 20,\n            step: 1\n        },\n        category: AppearanceCategory\n    }).addSliderInput({\n        path: 'tooltipFontSize',\n        name: 'Tooltip font size',\n        defaultValue: 8,\n        settings: {\n            min: 8,\n            max: 20,\n            step: 1\n        },\n        category: AppearanceCategory\n    }).addSliderInput({\n        path: 'yRad',\n        name: 'Margin between overlapping links',\n        defaultValue: 1.3,\n        settings: {\n            min: 1,\n            max: 2,\n            step: .1\n        },\n        showIf: (config)=>config.hopMode,\n        category: AppearanceCategory\n    }).addSliderInput({\n        path: 'marginLeft',\n        name: 'Margin from left border',\n        defaultValue: 50,\n        settings: {\n            min: 0,\n            max: 200,\n            step: 1\n        },\n        category: AppearanceCategory\n    }).addSliderInput({\n        path: 'marginRight',\n        name: 'Margin from right border',\n        defaultValue: 50,\n        settings: {\n            min: 0,\n            max: 200,\n            step: 1\n        },\n        category: AppearanceCategory\n    }).addBooleanSwitch({\n        path: 'search',\n        name: 'Show search bar',\n        defaultValue: false,\n        category: AppearanceCategory\n    }).addBooleanSwitch({\n        path: 'zoom',\n        name: 'Show zoom button',\n        defaultValue: false,\n        category: AppearanceCategory\n    }).addTextInput({\n        path: \"toolTipSource\",\n        name: 'Tooltip source',\n        category: AppearanceCategory,\n        defaultValue: \"From: \",\n        description: 'Text to be displayed infront of target node.'\n    }).addTextInput({\n        path: \"toolTipTarget\",\n        name: 'Tooltip target',\n        category: AppearanceCategory,\n        defaultValue: \"To: \",\n        description: 'Text to be displayed infront of source node.'\n    }).addSelect({\n        path: 'scale',\n        name: 'Scaling',\n        defaultValue: \"lin\",\n        description: 'Select the scaling of the diagram',\n        settings: {\n            allowCustomValue: false,\n            options: [\n                {\n                    label: 'Linear',\n                    value: 'lin'\n                },\n                {\n                    label: \"Logarithmic\",\n                    value: \"log\"\n                }\n            ]\n        },\n        showIf: (config)=>config.radiusFromSource || config.arcFromSource,\n        category: DataCategory\n    }).addCustomEditor({\n        id: \"setRange\",\n        path: \"arcRange\",\n        editor: _components_CustomRangeSlider__WEBPACK_IMPORTED_MODULE_2__.CustomRangeSlider,\n        name: 'Range for weighted links',\n        description: 'Range which the arc thickness is being mapped to',\n        category: DataCategory,\n        defaultValue: \"1,15\",\n        showIf: (config)=>config.arcFromSource\n    }).addCustomEditor({\n        id: \"setRange\",\n        path: \"nodeRange\",\n        editor: _components_CustomRangeSlider__WEBPACK_IMPORTED_MODULE_2__.CustomRangeSlider,\n        name: 'Range for weighted nodes',\n        description: 'Range which the node radius is being mapped to',\n        category: DataCategory,\n        defaultValue: \"1,15\",\n        showIf: (config)=>config.radiusFromSource\n    }).addBooleanSwitch({\n        path: 'isCluster',\n        name: 'Activate node clustering',\n        defaultValue: false,\n        category: DataCategory\n    }).addSelect({\n        path: 'srcCluster',\n        name: 'Source cluster',\n        description: 'Select the field to cluster the source by:',\n        category: DataCategory,\n        defaultValue: \"\",\n        settings: {\n            allowCustomValue: false,\n            options: [],\n            getOptions: function() {\n                var _ref = _async_to_generator(function*(context) {\n                    const options = [];\n                    if (context && context.data) {\n                        for (const frame of context.data){\n                            for (const field of frame.fields){\n                                const name = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_0__.getFieldDisplayName)(field, frame, context.data);\n                                const value = name;\n                                options.push({\n                                    value,\n                                    label: name\n                                });\n                            }\n                        }\n                    }\n                    return Promise.resolve(options);\n                });\n                return function(context) {\n                    return _ref.apply(this, arguments);\n                };\n            }()\n        },\n        showIf: (config)=>config.isCluster\n    }).addSelect({\n        path: 'dstCluster',\n        name: 'Destination cluster',\n        description: 'Select the field to cluster the target by:',\n        category: DataCategory,\n        defaultValue: \"\",\n        settings: {\n            allowCustomValue: false,\n            options: [],\n            getOptions: function() {\n                var _ref = _async_to_generator(function*(context) {\n                    const options = [];\n                    if (context && context.data) {\n                        for (const frame of context.data){\n                            for (const field of frame.fields){\n                                const name = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_0__.getFieldDisplayName)(field, frame, context.data);\n                                const value = name;\n                                options.push({\n                                    value,\n                                    label: name\n                                });\n                            }\n                        }\n                    }\n                    return Promise.resolve(options);\n                });\n                return function(context) {\n                    return _ref.apply(this, arguments);\n                };\n            }()\n        },\n        showIf: (config)=>config.isCluster\n    }).addSelect({\n        path: 'pathField',\n        name: 'Path',\n        description: 'Select the field to use as traceroute:',\n        category: DataCategory,\n        defaultValue: \"\",\n        settings: {\n            allowCustomValue: false,\n            options: [],\n            getOptions: function() {\n                var _ref = _async_to_generator(function*(context) {\n                    const options = [];\n                    if (context && context.data) {\n                        for (const frame of context.data){\n                            for (const field of frame.fields){\n                                const name = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_0__.getFieldDisplayName)(field, frame, context.data);\n                                const value = name;\n                                options.push({\n                                    value,\n                                    label: name\n                                });\n                            }\n                        }\n                    }\n                    return Promise.resolve(options);\n                });\n                return function(context) {\n                    return _ref.apply(this, arguments);\n                };\n            }()\n        },\n        showIf: (config)=>config.hopMode\n    }).addSelect({\n        path: 'src',\n        name: 'Source',\n        description: 'Select the field to use as source:',\n        category: DataCategory,\n        settings: {\n            allowCustomValue: false,\n            options: [],\n            getOptions: function() {\n                var _ref = _async_to_generator(function*(context) {\n                    const options = [];\n                    if (context && context.data) {\n                        for (const frame of context.data){\n                            for (const field of frame.fields){\n                                const name = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_0__.getFieldDisplayName)(field, frame, context.data);\n                                const value = name;\n                                options.push({\n                                    value,\n                                    label: name\n                                });\n                            }\n                        }\n                    }\n                    return Promise.resolve(options);\n                });\n                return function(context) {\n                    return _ref.apply(this, arguments);\n                };\n            }()\n        },\n        showIf: (config)=>!config.hopMode\n    }).addSelect({\n        path: 'dest',\n        name: 'Destination',\n        description: 'Select the field to use as target:',\n        category: DataCategory,\n        defaultValue: \"\",\n        settings: {\n            allowCustomValue: false,\n            options: [],\n            getOptions: function() {\n                var _ref = _async_to_generator(function*(context) {\n                    const options = [];\n                    if (context && context.data) {\n                        for (const frame of context.data){\n                            for (const field of frame.fields){\n                                const name = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_0__.getFieldDisplayName)(field, frame, context.data);\n                                const value = name;\n                                options.push({\n                                    value,\n                                    label: name\n                                });\n                            }\n                        }\n                    }\n                    return Promise.resolve(options);\n                });\n                return function(context) {\n                    return _ref.apply(this, arguments);\n                };\n            }()\n        },\n        showIf: (config)=>!config.hopMode\n    });\n}).useFieldConfig({\n    disableStandardOptions: [\n        _grafana_data__WEBPACK_IMPORTED_MODULE_0__.FieldConfigProperty.NoValue,\n        _grafana_data__WEBPACK_IMPORTED_MODULE_0__.FieldConfigProperty.Max,\n        _grafana_data__WEBPACK_IMPORTED_MODULE_0__.FieldConfigProperty.Min\n    ],\n    standardOptions: {\n        [_grafana_data__WEBPACK_IMPORTED_MODULE_0__.FieldConfigProperty.Color]: {\n            settings: {\n                byValueSupport: true,\n                bySeriesSupport: true,\n                preferThresholdsMode: true\n            }\n        }\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./module.ts\n");

/***/ }),

/***/ "./pathDataParser.ts":
/*!***************************!*\
  !*** ./pathDataParser.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parsePathData\": () => (/* binding */ parsePathData)\n/* harmony export */ });\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! utils */ \"./utils.ts\");\n\n/**\n * Takes data from Grafana query and returns it in the format needed for this panel\n *\n * @param data the data returned by the query\n * @param options the field options from the editor panel\n * @param theme needed for utility functions for example to map color strings to hex values\n * @return {uniqueNodes} list of unique nodes to be rendered on the x axis\n * @return {links} array of objects with fields source, target, sum, strokewidth where each object represents one link\n * @return {hexColors} colors converted to hex\n */ function parsePathData(data, options, theme) {\n    var _allData_find, _options_arcRange, _options_arcRange1;\n    const allData = data.series[0].fields;\n    const paths = allData[0].values.buffer;\n    const arcWeightString = options.arcWeightSource ? allData.find((obj)=>obj.name === options.arcWeightSource).name : allData[allData.length - 1].name;\n    const arcWeightValues = (_allData_find = allData.find((obj)=>obj.name === arcWeightString)) === null || _allData_find === void 0 ? void 0 : _allData_find.values;\n    const fields = (0,utils__WEBPACK_IMPORTED_MODULE_0__.getFieldDisplayNames)(allData);\n    const delimiter = options.delimiter === \"space\" ? \" \" : options.delimiter;\n    /********************************** Nodes **********************************/ let uniqueNodes = Array.from([\n        ...new Set(allData[0].values.buffer.join(delimiter).split(delimiter))\n    ]).map((str, index)=>({\n            id: index,\n            name: str,\n            sum: 1,\n            radius: 5,\n            color: options.nodeColor\n        }));\n    /********************************** Links **********************************/ const pathColors = (0,utils__WEBPACK_IMPORTED_MODULE_0__.getEvenlySpacedColors)(paths.length, theme.isDark);\n    let links = [];\n    paths.forEach((path, pathIndex)=>{\n        const pathNodes = String(path).split(' ');\n        for(let i = 0; i < pathNodes.length; i++){\n            var _uniqueNodes_find, _uniqueNodes_find1;\n            const source = (_uniqueNodes_find = uniqueNodes.find((node)=>node.name === pathNodes[i])) === null || _uniqueNodes_find === void 0 ? void 0 : _uniqueNodes_find.id;\n            const target = (_uniqueNodes_find1 = uniqueNodes.find((node)=>node.name === pathNodes[i + 1])) === null || _uniqueNodes_find1 === void 0 ? void 0 : _uniqueNodes_find1.id;\n            const isOverlap = links.some((link)=>link.source === source && link.target === target);\n            if (target !== undefined) {\n                const link = {\n                    id: 0,\n                    source,\n                    target,\n                    path: pathIndex,\n                    arcWeightValue: arcWeightValues.buffer[pathIndex],\n                    strokeWidth: 1,\n                    color: pathColors[pathIndex],\n                    displayValue: `${allData[allData.length - 1].display(allData[allData.length - 1].values.buffer[pathIndex]).text}${allData[allData.length - 1].display(allData[allData.length - 1].values.buffer[pathIndex]).suffix !== undefined ? allData[allData.length - 1].display(allData[allData.length - 1].values.buffer[pathIndex]).suffix : \"\"}`,\n                    isOverlap,\n                    mapRadiusY: 0\n                };\n                fields.forEach((field)=>{\n                    var _allData_find, _allData_find1;\n                    Object.assign(link, {\n                        [field.field]: []\n                    });\n                    link[field.field].push((_allData_find = allData.find((obj)=>obj.name === field.field)) === null || _allData_find === void 0 ? void 0 : _allData_find.values.buffer[pathIndex]);\n                    const display = allData.find((obj)=>obj.name === field.field).display((_allData_find1 = allData.find((obj)=>obj.name === field.field)) === null || _allData_find1 === void 0 ? void 0 : _allData_find1.values.buffer[pathIndex]);\n                    const suffix = display.suffix === undefined ? \"\" : display.suffix;\n                    Object.assign(link, {\n                        [`${field.field}Display`]: [\n                            `${display.text} ${suffix}`\n                        ]\n                    });\n                });\n                links.push(link);\n            }\n        }\n    });\n    links.forEach((link, index)=>{\n        link.id = index;\n    });\n    // assign overlap index to render elliptical arc\n    const overlapLinks = links.filter((link)=>link.isOverlap);\n    const overlapGroups = [];\n    const visited = [];\n    for(let i = 0; i < overlapLinks.length; i++){\n        const currentLink = overlapLinks[i];\n        const overlapGroup = [\n            currentLink\n        ];\n        // keep track of visited links, go to next iteration if link already part of group\n        if (visited.includes(currentLink)) {\n            continue;\n        }\n        for(let j = i + 1; j < overlapLinks.length; j++){\n            const compareLink = overlapLinks[j];\n            if (currentLink.source === compareLink.source && currentLink.target === compareLink.target) {\n                overlapGroup.push(compareLink);\n                visited.push(compareLink);\n            }\n        }\n        overlapGroups.push(overlapGroup);\n    }\n    // iterate over overlapGroups and assign radiusY\n    for(let i = 0; i < overlapGroups.length; i++){\n        const currentGroup = overlapGroups[i];\n        let mapRadiusY = options.yRad;\n        for(let j = 0; j < currentGroup.length; j++){\n            const currentLink = currentGroup[j];\n            currentLink.mapRadiusY = mapRadiusY;\n            mapRadiusY += options.yRad - 1;\n        }\n    }\n    /********************************** Stroke width/ node radius **********************************/ // set range for mapping\n    const linkScaleFrom = (_options_arcRange = options.arcRange) === null || _options_arcRange === void 0 ? void 0 : _options_arcRange.split(\",\").map(Number)[0];\n    const linkScaleTo = (_options_arcRange1 = options.arcRange) === null || _options_arcRange1 === void 0 ? void 0 : _options_arcRange1.split(\",\").map(Number)[1];\n    const minLink = Number(Math.min(...links.map((e)=>e.arcWeightValue)));\n    const maxLink = Number(Math.max(...links.map((e)=>e.arcWeightValue)));\n    for(let i = 0; i < links.length; i++){\n        (0,utils__WEBPACK_IMPORTED_MODULE_0__.calcStrokeWidth)(options.arcFromSource, options.scale, options.arcThickness, links[i], linkScaleFrom, linkScaleTo, minLink, maxLink);\n    }\n    (0,utils__WEBPACK_IMPORTED_MODULE_0__.calcNodeRadius)(uniqueNodes, links, options);\n    /**********************************************************************************/ return {\n        uniqueNodes,\n        links,\n        fields\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pathDataParser.ts\n");

/***/ }),

/***/ "./styles.ts":
/*!*******************!*\
  !*** ./styles.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"styles\": () => (/* binding */ styles)\n/* harmony export */ });\nconst styles = {\n    containerStyle: {\n        width: \"100%\",\n        height: \"100%\"\n    },\n    labelStyle: {\n        width: \"100%\",\n        height: \"100%\",\n        \"z-index\": \"10\"\n    },\n    buttonStyle: {\n        width: \"30px\",\n        height: \"30px\",\n        top: 0,\n        position: \"absolute\"\n    },\n    toolTipStyle: {\n        box: {\n            position: \"absolute\",\n            left: \"\",\n            top: \"\",\n            width: \"auto\",\n            height: \"auto\",\n            background: \"white\",\n            padding: \"1em\",\n            margin: \"1em\",\n            \"max-width\": \"300px\",\n            \"border-radius\": \"5px\",\n            opacity: 0.9\n        },\n        text (fontSize) {\n            return {\n                color: \"black\",\n                \"font-size\": `${fontSize}px`,\n                margin: \"0\",\n                \"font-weight\": \"100\"\n            };\n        },\n        preface: {\n            \"font-weight\": \"900\"\n        }\n    },\n    panelContainerStyle: {\n        height: \"100%\",\n        width: \"100%\"\n    },\n    searchFieldStyle: {\n        display: \"inline-block\",\n        margin: \"0em 1em\",\n        \"vertical-align\": \"middle\"\n    },\n    inputStyle (isDarkMode) {\n        return {\n            width: \"200px\",\n            height: \"40px\",\n            background: isDarkMode ? \"rgb(244 245 245 / 83%)\" : \"hsla(0, 0%, 0%, 1)\",\n            color: isDarkMode ? \"black\" : \"white\",\n            padding: \"1em\",\n            \"border-radius\": \"30px\"\n        };\n    },\n    toolBarStyle: {\n        top: \"10px\",\n        right: 0,\n        position: \"absolute\"\n    },\n    zoomButtonWrapper: {\n        margin: \"0em 1em\",\n        \"vertical-align\": \"middle\",\n        display: \"inline-block\"\n    },\n    zoomButtonStyle (isDarkMode, position) {\n        let styles, borderRadius = \"30px\", padding = \"5px\";\n        styles = {\n            display: \"inline-block\",\n            \"background-color\": isDarkMode ? \"rgba(244, 245, 245, 0.83)\" : \"black\",\n            \"border\": \"1px solid rgba(0, 0, 0, 0.1)\",\n            \"cursor\": \"pointer\",\n            \"transition\": \"all 250ms\",\n            \"border-top-left-radius\": \"0px\",\n            \"border-bottom-left-radius\": \"0px\",\n            \"border-top-right-radius\": \"0px\",\n            \"border-bottom-right-radius\": \"0px\",\n            \"padding-left\": padding,\n            \"padding-right\": padding\n        };\n        if (position === 0) {\n            styles[\"border-top-left-radius\"] = borderRadius;\n            styles[\"border-bottom-left-radius\"] = borderRadius;\n            styles[\"padding-left\"] = padding;\n        } else if (position === 2) {\n            styles[\"border-top-right-radius\"] = borderRadius;\n            styles[\"border-bottom-right-radius\"] = borderRadius;\n            styles[\"padding-right\"] = padding;\n        }\n        return styles;\n    },\n    zoomIcon (isDarkMode) {\n        return {\n            height: \"40px\",\n            width: \"40px\",\n            padding: \"0.3em\",\n            filter: isDarkMode ? \"invert(0)\" : \"invert(1)\",\n            animation: \"inAnimation 0.5s ease-in\"\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFNBQVM7SUFDbEJDLGdCQUFnQjtRQUNkQyxPQUFPO1FBQ1BDLFFBQVE7SUFDVjtJQUNBQyxZQUFZO1FBQ1ZGLE9BQU87UUFDUEMsUUFBUTtRQUNSLFdBQVc7SUFDYjtJQUNBRSxhQUFhO1FBQ1hILE9BQU87UUFDUEMsUUFBUTtRQUNSRyxLQUFJO1FBQ0pDLFVBQVU7SUFDWjtJQUNBQyxjQUFjO1FBQ1pDLEtBQUs7WUFDSEYsVUFBVTtZQUNWRyxNQUFNO1lBQ05KLEtBQUs7WUFDTEosT0FBTztZQUNQQyxRQUFRO1lBQ1JRLFlBQVk7WUFDWkMsU0FBUztZQUNUQyxRQUFRO1lBQ1IsYUFBYTtZQUNiLGlCQUFpQjtZQUNqQkMsU0FBUztRQUNYO1FBQ0FDLE1BQUtDLFFBQWdCLEVBQUU7WUFDckIsT0FBTztnQkFDTEMsT0FBTztnQkFDVCxhQUFhLENBQUMsRUFBRUQsU0FBUyxFQUFFLENBQUM7Z0JBQzVCSCxRQUFRO2dCQUNSLGVBQWU7WUFDZjtRQUNGO1FBQ0FLLFNBQVM7WUFDUCxlQUFlO1FBQ2pCO0lBQ0Y7SUFDQUMscUJBQXFCO1FBQ25CaEIsUUFBUTtRQUNSRCxPQUFPO0lBQ1Q7SUFDQWtCLGtCQUFrQjtRQUNoQkMsU0FBUztRQUNUUixRQUFRO1FBQ1Isa0JBQWtCO0lBQ3BCO0lBQ0FTLFlBQVdDLFVBQW1CLEVBQUU7UUFDOUIsT0FBTztZQUNMckIsT0FBTztZQUNQQyxRQUFRO1lBQ1JRLFlBQVksYUFBZSwyQkFBMkIsb0JBQW9CO1lBQzFFTSxPQUFPLGFBQWUsVUFBVSxPQUFPO1lBQ3ZDTCxTQUFTO1lBQ1QsaUJBQWlCO1FBQ25CO0lBQ0Y7SUFDQVksY0FBYztRQUNabEIsS0FBSztRQUNMbUIsT0FBTztRQUNQbEIsVUFBVTtJQUNaO0lBQ0FtQixtQkFBbUI7UUFDakJiLFFBQVE7UUFDUixrQkFBa0I7UUFDbEJRLFNBQVM7SUFDWDtJQUNBTSxpQkFBZ0JKLFVBQW1CLEVBQUVoQixRQUFnQixFQUFFO1FBQ3JELElBQUlQLFFBQVE0QixlQUFlLFFBQVFoQixVQUFVO1FBQzdDWixTQUFTO1lBQ1BxQixTQUFTO1lBQ1Qsb0JBQW9CRSxhQUFhLDhCQUE4QixPQUFPO1lBQ3RFLFVBQVU7WUFDVixVQUFVO1lBQ1YsY0FBYztZQUNkLDBCQUEwQjtZQUMxQiw2QkFBNkI7WUFDN0IsMkJBQTJCO1lBQzNCLDhCQUE4QjtZQUM5QixnQkFBZ0JYO1lBQ2hCLGlCQUFpQkE7UUFDbkI7UUFDQSxJQUFHTCxhQUFhLEdBQUc7WUFDakJQLE1BQU0sQ0FBQyx5QkFBeUIsR0FBRzRCO1lBQ25DNUIsTUFBTSxDQUFDLDRCQUE0QixHQUFHNEI7WUFDdEM1QixNQUFNLENBQUMsZUFBZSxHQUFHWTtRQUMzQixPQUFPLElBQUlMLGFBQWEsR0FBRztZQUN6QlAsTUFBTSxDQUFDLDBCQUEwQixHQUFHNEI7WUFDcEM1QixNQUFNLENBQUMsNkJBQTZCLEdBQUc0QjtZQUN2QzVCLE1BQU0sQ0FBQyxnQkFBZ0IsR0FBR1k7UUFDNUIsQ0FBQztRQUNELE9BQU9aO0lBQ1Q7SUFDQTZCLFVBQVNOLFVBQW1CLEVBQUU7UUFDNUIsT0FBTztZQUNMcEIsUUFBUTtZQUNSRCxPQUFPO1lBQ1BVLFNBQVM7WUFDVGtCLFFBQVFQLGFBQWEsY0FBYyxXQUFXO1lBQzlDUSxXQUFXO1FBQ2I7SUFDRjtBQUNKLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZXMudHM/N2IzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgc3R5bGVzID0ge1xuICAgIGNvbnRhaW5lclN0eWxlOiB7XG4gICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICBoZWlnaHQ6IFwiMTAwJVwiXG4gICAgfSBhcyBSZWFjdC5DU1NQcm9wZXJ0aWVzLFxuICAgIGxhYmVsU3R5bGU6IHtcbiAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgICBcInotaW5kZXhcIjogXCIxMFwiLFxuICAgIH0gYXMgUmVhY3QuQ1NTUHJvcGVydGllcyxcbiAgICBidXR0b25TdHlsZToge1xuICAgICAgd2lkdGg6IFwiMzBweFwiLFxuICAgICAgaGVpZ2h0OiBcIjMwcHhcIixcbiAgICAgIHRvcDowLFxuICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIlxuICAgIH0gYXMgUmVhY3QuQ1NTUHJvcGVydGllcyxcbiAgICB0b29sVGlwU3R5bGU6IHtcbiAgICAgIGJveDoge1xuICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgICBsZWZ0OiBcIlwiLFxuICAgICAgICB0b3A6IFwiXCIsXG4gICAgICAgIHdpZHRoOiBcImF1dG9cIixcbiAgICAgICAgaGVpZ2h0OiBcImF1dG9cIixcbiAgICAgICAgYmFja2dyb3VuZDogXCJ3aGl0ZVwiLFxuICAgICAgICBwYWRkaW5nOiBcIjFlbVwiLFxuICAgICAgICBtYXJnaW46IFwiMWVtXCIsXG4gICAgICAgIFwibWF4LXdpZHRoXCI6IFwiMzAwcHhcIixcbiAgICAgICAgXCJib3JkZXItcmFkaXVzXCI6IFwiNXB4XCIsXG4gICAgICAgIG9wYWNpdHk6IDAuOVxuICAgICAgfSBhcyBSZWFjdC5DU1NQcm9wZXJ0aWVzLFxuICAgICAgdGV4dChmb250U2l6ZTogbnVtYmVyKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgY29sb3I6IFwiYmxhY2tcIixcbiAgICAgICAgXCJmb250LXNpemVcIjogYCR7Zm9udFNpemV9cHhgLFxuICAgICAgICBtYXJnaW46IFwiMFwiLFxuICAgICAgICBcImZvbnQtd2VpZ2h0XCI6IFwiMTAwXCJcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHByZWZhY2U6IHtcbiAgICAgICAgXCJmb250LXdlaWdodFwiOiBcIjkwMFwiXG4gICAgICB9IGFzIFJlYWN0LkNTU1Byb3BlcnRpZXMsXG4gICAgfSwgXG4gICAgcGFuZWxDb250YWluZXJTdHlsZToge1xuICAgICAgaGVpZ2h0OiBcIjEwMCVcIixcbiAgICAgIHdpZHRoOiBcIjEwMCVcIlxuICAgIH0gYXMgUmVhY3QuQ1NTUHJvcGVydGllcyxcbiAgICBzZWFyY2hGaWVsZFN0eWxlOiB7XG4gICAgICBkaXNwbGF5OiBcImlubGluZS1ibG9ja1wiLFxuICAgICAgbWFyZ2luOiBcIjBlbSAxZW1cIixcbiAgICAgIFwidmVydGljYWwtYWxpZ25cIjogXCJtaWRkbGVcIixcbiAgICB9IGFzIFJlYWN0LkNTU1Byb3BlcnRpZXMsXG4gICAgaW5wdXRTdHlsZShpc0RhcmtNb2RlOiBib29sZWFuKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3aWR0aDogXCIyMDBweFwiLFxuICAgICAgICBoZWlnaHQ6IFwiNDBweFwiLFxuICAgICAgICBiYWNrZ3JvdW5kOiAoaXNEYXJrTW9kZSkgPyBcInJnYigyNDQgMjQ1IDI0NSAvIDgzJSlcIiA6IFwiaHNsYSgwLCAwJSwgMCUsIDEpXCIsXG4gICAgICAgIGNvbG9yOiAoaXNEYXJrTW9kZSkgPyBcImJsYWNrXCIgOiBcIndoaXRlXCIsXG4gICAgICAgIHBhZGRpbmc6IFwiMWVtXCIsXG4gICAgICAgIFwiYm9yZGVyLXJhZGl1c1wiOiBcIjMwcHhcIlxuICAgICAgfVxuICAgIH0sXG4gICAgdG9vbEJhclN0eWxlOiB7XG4gICAgICB0b3A6IFwiMTBweFwiLFxuICAgICAgcmlnaHQ6IDAsXG4gICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiXG4gICAgfSBhcyBSZWFjdC5DU1NQcm9wZXJ0aWVzLFxuICAgIHpvb21CdXR0b25XcmFwcGVyOiB7XG4gICAgICBtYXJnaW46IFwiMGVtIDFlbVwiLFxuICAgICAgXCJ2ZXJ0aWNhbC1hbGlnblwiOiBcIm1pZGRsZVwiLFxuICAgICAgZGlzcGxheTogXCJpbmxpbmUtYmxvY2tcIlxuICAgIH0gYXMgUmVhY3QuQ1NTUHJvcGVydGllcyxcbiAgICB6b29tQnV0dG9uU3R5bGUoaXNEYXJrTW9kZTogYm9vbGVhbiwgcG9zaXRpb246IG51bWJlcikge1xuICAgICAgbGV0IHN0eWxlcywgYm9yZGVyUmFkaXVzID0gXCIzMHB4XCIsIHBhZGRpbmcgPSBcIjVweFwiXG4gICAgICBzdHlsZXMgPSB7XG4gICAgICAgIGRpc3BsYXk6IFwiaW5saW5lLWJsb2NrXCIsXG4gICAgICAgIFwiYmFja2dyb3VuZC1jb2xvclwiOiBpc0RhcmtNb2RlID8gXCJyZ2JhKDI0NCwgMjQ1LCAyNDUsIDAuODMpXCIgOiBcImJsYWNrXCIsXG4gICAgICAgIFwiYm9yZGVyXCI6IFwiMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKVwiLFxuICAgICAgICBcImN1cnNvclwiOiBcInBvaW50ZXJcIixcbiAgICAgICAgXCJ0cmFuc2l0aW9uXCI6IFwiYWxsIDI1MG1zXCIsXG4gICAgICAgIFwiYm9yZGVyLXRvcC1sZWZ0LXJhZGl1c1wiOiBcIjBweFwiLFxuICAgICAgICBcImJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXNcIjogXCIwcHhcIixcbiAgICAgICAgXCJib3JkZXItdG9wLXJpZ2h0LXJhZGl1c1wiOiBcIjBweFwiLFxuICAgICAgICBcImJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzXCI6IFwiMHB4XCIsXG4gICAgICAgIFwicGFkZGluZy1sZWZ0XCI6IHBhZGRpbmcsXG4gICAgICAgIFwicGFkZGluZy1yaWdodFwiOiBwYWRkaW5nXG4gICAgICB9XG4gICAgICBpZihwb3NpdGlvbiA9PT0gMCkge1xuICAgICAgICBzdHlsZXNbXCJib3JkZXItdG9wLWxlZnQtcmFkaXVzXCJdID0gYm9yZGVyUmFkaXVzXG4gICAgICAgIHN0eWxlc1tcImJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXNcIl0gPSBib3JkZXJSYWRpdXNcbiAgICAgICAgc3R5bGVzW1wicGFkZGluZy1sZWZ0XCJdID0gcGFkZGluZ1xuICAgICAgfSBlbHNlIGlmIChwb3NpdGlvbiA9PT0gMikge1xuICAgICAgICBzdHlsZXNbXCJib3JkZXItdG9wLXJpZ2h0LXJhZGl1c1wiXSA9IGJvcmRlclJhZGl1c1xuICAgICAgICBzdHlsZXNbXCJib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1c1wiXSA9IGJvcmRlclJhZGl1c1xuICAgICAgICBzdHlsZXNbXCJwYWRkaW5nLXJpZ2h0XCJdID0gcGFkZGluZ1xuICAgICAgfVxuICAgICAgcmV0dXJuIHN0eWxlc1xuICAgIH0sXG4gICAgem9vbUljb24oaXNEYXJrTW9kZTogYm9vbGVhbikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaGVpZ2h0OiBcIjQwcHhcIixcbiAgICAgICAgd2lkdGg6IFwiNDBweFwiLFxuICAgICAgICBwYWRkaW5nOiBcIjAuM2VtXCIsXG4gICAgICAgIGZpbHRlcjogaXNEYXJrTW9kZSA/IFwiaW52ZXJ0KDApXCIgOiBcImludmVydCgxKVwiLFxuICAgICAgICBhbmltYXRpb246IFwiaW5BbmltYXRpb24gMC41cyBlYXNlLWluXCJcbiAgICAgIH1cbiAgICB9LFxufVxuIl0sIm5hbWVzIjpbInN0eWxlcyIsImNvbnRhaW5lclN0eWxlIiwid2lkdGgiLCJoZWlnaHQiLCJsYWJlbFN0eWxlIiwiYnV0dG9uU3R5bGUiLCJ0b3AiLCJwb3NpdGlvbiIsInRvb2xUaXBTdHlsZSIsImJveCIsImxlZnQiLCJiYWNrZ3JvdW5kIiwicGFkZGluZyIsIm1hcmdpbiIsIm9wYWNpdHkiLCJ0ZXh0IiwiZm9udFNpemUiLCJjb2xvciIsInByZWZhY2UiLCJwYW5lbENvbnRhaW5lclN0eWxlIiwic2VhcmNoRmllbGRTdHlsZSIsImRpc3BsYXkiLCJpbnB1dFN0eWxlIiwiaXNEYXJrTW9kZSIsInRvb2xCYXJTdHlsZSIsInJpZ2h0Iiwiem9vbUJ1dHRvbldyYXBwZXIiLCJ6b29tQnV0dG9uU3R5bGUiLCJib3JkZXJSYWRpdXMiLCJ6b29tSWNvbiIsImZpbHRlciIsImFuaW1hdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./styles.ts\n");

/***/ }),

/***/ "./utils.ts":
/*!******************!*\
  !*** ./utils.ts ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addNodeSum\": () => (/* binding */ addNodeSum),\n/* harmony export */   \"calcBottomOffset\": () => (/* binding */ calcBottomOffset),\n/* harmony export */   \"calcDiagramHeight\": () => (/* binding */ calcDiagramHeight),\n/* harmony export */   \"calcNodeRadius\": () => (/* binding */ calcNodeRadius),\n/* harmony export */   \"calcStrokeWidth\": () => (/* binding */ calcStrokeWidth),\n/* harmony export */   \"clusterNodes\": () => (/* binding */ clusterNodes),\n/* harmony export */   \"evaluateQuery\": () => (/* binding */ evaluateQuery),\n/* harmony export */   \"getEvenlySpacedColors\": () => (/* binding */ getEvenlySpacedColors),\n/* harmony export */   \"getFieldDisplayNames\": () => (/* binding */ getFieldDisplayNames),\n/* harmony export */   \"getNodeTargets\": () => (/* binding */ getNodeTargets),\n/* harmony export */   \"getQueryMatches\": () => (/* binding */ getQueryMatches),\n/* harmony export */   \"handleZoom\": () => (/* binding */ handleZoom),\n/* harmony export */   \"idToName\": () => (/* binding */ idToName),\n/* harmony export */   \"linSpace\": () => (/* binding */ linSpace),\n/* harmony export */   \"mapToLinRange\": () => (/* binding */ mapToLinRange),\n/* harmony export */   \"mapToLogRange\": () => (/* binding */ mapToLogRange),\n/* harmony export */   \"replaceEllipsis\": () => (/* binding */ replaceEllipsis),\n/* harmony export */   \"resetLabel\": () => (/* binding */ resetLabel)\n/* harmony export */ });\n/*\nA collection of utility functions\n*/ // find string by id\nfunction idToName(id, dic) {\n    return dic.find((obj)=>obj.id === id).name;\n}\n// get array of targets for node\nfunction getNodeTargets({ id , links  }) {\n    return links.filter((obj)=>obj.source === id).map((obj)=>obj.target);\n}\n// map number to log\nfunction mapToLogRange(value, rangeMin, rangeMax, minLinkSum, maxLinkSum) {\n    const logMinValue = Math.log10(minLinkSum);\n    const logMaxValue = Math.log10(maxLinkSum);\n    const logRange = logMaxValue - logMinValue;\n    const factor = (rangeMax - 1) / logRange;\n    const logValue = Math.log10(value);\n    const mappedValue = (logValue - logMinValue) * factor + rangeMin;\n    return mappedValue;\n}\nfunction mapToLinRange(value, rangeMin, rangeMax, minLinkSum, maxLinkSum) {\n    const inputRange = maxLinkSum - minLinkSum;\n    const outputRange = rangeMax - rangeMin;\n    const scaledValue = (value - minLinkSum) / inputRange;\n    const mappedValue = scaledValue * outputRange + rangeMin;\n    return mappedValue;\n}\n// get an array of evenly spaced colors\nfunction getEvenlySpacedColors(amount, darkMode) {\n    // add darkmode colors\n    const colors = [];\n    const lightColors = [\n        '#FFD700',\n        '#00BFFF',\n        '#FF8C00',\n        '#FF1493',\n        '#7FFF00',\n        '#9400D3',\n        '#00FFFF',\n        '#FF69B4',\n        '#32CD32',\n        '#FFDAB9'\n    ];\n    const darkColors = [\n        '#7CFC00',\n        '#1E90FF',\n        '#FFA500',\n        '#FFC0CB',\n        '#8B008B',\n        '#32CD32',\n        '#FF00FF',\n        '#FF6347',\n        '#FFFF00',\n        '#FF1493'\n    ];\n    for(let i = 0; i < amount; i++){\n        const colorIndex = i % darkColors.length;\n        colors.push(darkMode ? darkColors[colorIndex] : lightColors[colorIndex]);\n    }\n    return colors;\n}\n// get array of n equally spaced values in specific range\nfunction linSpace(start, stop, n) {\n    const step = (stop - start) / (n - 1);\n    return Array.from({\n        length: n\n    }, (_, i)=>start + i * step);\n}\nfunction calcStrokeWidth(arcFromSource, scale, arcThickness, e, linkScaleFrom, linkScaleTo, minLink, maxLink) {\n    if (arcFromSource) {\n        // check if we apply logarithmic or linear scaling\n        if (scale === \"log\") {\n            e.strokeWidth = mapToLogRange(e.arcWeightValue, linkScaleFrom, linkScaleTo, minLink, maxLink);\n        } else {\n            // call function to map to lin range instead\n            e.strokeWidth = mapToLinRange(e.arcWeightValue, linkScaleFrom, linkScaleTo, minLink, maxLink);\n        }\n    } else {\n        e.strokeWidth = arcThickness;\n    }\n}\nfunction replaceEllipsis(label, isHighlighted) {\n    var _label_getAttribute;\n    const labelBoundingBox = label.getBoundingClientRect().width * (isHighlighted ? 1.6 : 1);\n    const mapRatio = isHighlighted ? 0.2 : 0.3;\n    const labelOffsetX = Number((_label_getAttribute = label.getAttribute(\"transform\")) === null || _label_getAttribute === void 0 ? void 0 : _label_getAttribute.split(\",\")[0].substring(10));\n    // check if label is out of bounds\n    if (labelBoundingBox > labelOffsetX) {\n        const overlap = labelBoundingBox - labelOffsetX;\n        label.innerHTML = \"...\" + label.innerHTML.substring(overlap * mapRatio, label.innerHTML.length);\n    }\n}\nfunction resetLabel(label) {\n    label.innerHTML = label.getAttribute(\"name\");\n}\nfunction evaluateQuery(query, nodeList, labels, links, nodes, arcOpacity) {\n    let matches = nodeList.map(({ name , id  })=>({\n            name,\n            id\n        }));\n    matches = matches.filter((e)=>String(e.name).toLowerCase().includes(query.toLowerCase()));\n    const numericalMatches = new Set(matches.map((e)=>e.id));\n    if (query) {\n        // highlight labels\n        labels.style(\"opacity\", (label)=>{\n            return numericalMatches.has(label.id) ? 1 : .1;\n        });\n        // highlight links\n        links.style(\"opacity\", (link)=>{\n            return numericalMatches.has(link.source) || numericalMatches.has(link.target) ? arcOpacity : .1;\n        });\n        // highlight nodes\n        nodes.style(\"opacity\", (node)=>{\n            return numericalMatches.has(node.id) ? 1 : .1;\n        });\n    }\n}\nfunction getQueryMatches(query, nodeList) {\n    let matches = nodeList.map(({ name , id  })=>({\n            name,\n            id\n        }));\n    matches = matches.filter((e)=>String(e.name).toLowerCase().includes(query.toLowerCase()));\n    const numericalMatches = new Set(matches.map((e)=>e.id));\n    return numericalMatches;\n}\nfunction handleZoom(canvas, zoomState) {\n    canvas.style.transform = `scale(${zoomState / 10})`;\n}\nfunction addNodeSum(links, uniqueNodes) {\n    // Initialize object to store aggregated sums\n    const nodeSums = {};\n    // Loop through links array and populate nodeSums object\n    links.forEach((link)=>{\n        const { source , target , arcWeightValue  } = link;\n        if (nodeSums[source]) {\n            nodeSums[source] += arcWeightValue;\n        } else {\n            nodeSums[source] = arcWeightValue;\n        }\n        if (nodeSums[target]) {\n            nodeSums[target] += arcWeightValue;\n        } else {\n            nodeSums[target] = arcWeightValue;\n        }\n    });\n    uniqueNodes.map(function(element, index) {\n        element.sum = nodeSums[index];\n    });\n}\nfunction calcNodeRadius(uniqueNodes, links, options) {\n    var _options_nodeRange, _options_nodeRange1;\n    const nodeScaleFrom = (_options_nodeRange = options.nodeRange) === null || _options_nodeRange === void 0 ? void 0 : _options_nodeRange.split(\",\").map(Number)[0];\n    const nodeScaleTo = (_options_nodeRange1 = options.nodeRange) === null || _options_nodeRange1 === void 0 ? void 0 : _options_nodeRange1.split(\",\").map(Number)[1];\n    const minNode = Number(Math.min(...uniqueNodes.map((e)=>e.sum)));\n    const maxNode = Number(Math.max(...uniqueNodes.map((e)=>e.sum)));\n    uniqueNodes.forEach((e)=>{\n        // check if arc thickness is set to source\n        if (options.radiusFromSource) {\n            // check if we apply logarithmic or linear scaling\n            if (options.scale === \"log\") {\n                e.radius = mapToLogRange(e.sum, nodeScaleFrom, nodeScaleTo, minNode, maxNode);\n            } else {\n                e.radius = mapToLinRange(e.sum, nodeScaleFrom, nodeScaleTo, minNode, maxNode);\n            }\n        } else {\n            e.radius = options.nodeRadius;\n        }\n    });\n}\nfunction calcDiagramHeight(nodes, links, panelWidth) {\n    let maxArcHeight = 0;\n    if (links.length !== 0) {\n        let maxNodesCrossed = 0;\n        let maxArc = null;\n        for (const link of links){\n            const nodesCrossed = Math.abs(link.target - link.source);\n            if (nodesCrossed > maxNodesCrossed) {\n                maxNodesCrossed = nodesCrossed;\n                maxArc = link;\n            }\n        }\n        const maxArcDistance = maxArc.target - maxArc.source;\n        const step = (panelWidth - 50 - 50) / (nodes.length - 1);\n        maxArcHeight = maxArcDistance * step / 2;\n    }\n    const longestName = nodes.reduce((acc, curr)=>{\n        if (curr.name.length > acc.name.length) {\n            return curr;\n        } else {\n            return acc;\n        }\n    }).name;\n    // * 3.77 maps string to pixels, * 1.6 maps to highlighted tag\n    const longestNameSize = longestName.length * 3.77 * 1.6;\n    // 31.99px is the height of the panel title\n    const graphHeight = maxArcHeight + longestNameSize + 31.99;\n    return graphHeight;\n}\nfunction clusterNodes(uniqueNodes, links, options, theme, allData) {\n    var _allData_find, _allData_find1;\n    const srcCluster = (_allData_find = allData.find((obj)=>obj.name === options.srcCluster)) === null || _allData_find === void 0 ? void 0 : _allData_find.values.buffer;\n    const dstCluster = (_allData_find1 = allData.find((obj)=>obj.name === options.dstCluster)) === null || _allData_find1 === void 0 ? void 0 : _allData_find1.values.buffer;\n    // add cluster to nodes\n    for(let i = 0; i < links.length; i++){\n        Object.assign(links[i], {\n            [options.srcCluster]: []\n        });\n        links[i][options.srcCluster].push(srcCluster[i]);\n        Object.assign(links[i], {\n            [options.dstCluster]: []\n        });\n        links[i][options.dstCluster].push(dstCluster[i]);\n        uniqueNodes[links[i].source].cluster = links[i][options.srcCluster][0];\n        uniqueNodes[links[i].target].cluster = links[i][options.dstCluster][0];\n    }\n    // order \n    uniqueNodes.sort((a, b)=>{\n        if (a.cluster < b.cluster) {\n            return -1; // a should come before b\n        }\n        if (a.cluster > b.cluster) {\n            return 1; // a should come after b\n        }\n        return 0; // the order of a and b remains unchanged\n    });\n    for(let i = 0; i < uniqueNodes.length; i++){\n        uniqueNodes[i].id = i;\n    }\n    // create groups for clusters\n    let clusters = [];\n    // create unique groups according to the setting specified in options\n    clusters = [\n        ...new Set(uniqueNodes.map((item)=>item.cluster))\n    ].map((cluster)=>({\n            name: cluster,\n            color: \"\"\n        }));\n    const spacedColors = getEvenlySpacedColors(clusters.length, theme.isDark);\n    clusters.forEach((e, i)=>{\n        e.color = spacedColors[i];\n    });\n    uniqueNodes.forEach((e)=>{\n        e.color = clusters.find((cluster)=>cluster.name === e.cluster).color;\n    });\n    // reassign links source and target values because node order was changed\n    links.forEach((link)=>{\n        link.source = uniqueNodes.find((node)=>node.name === link.srcName).id;\n        link.target = uniqueNodes.find((node)=>node.name === link.dstName).id;\n    });\n}\nfunction calcBottomOffset(labels) {\n    // after the labels are rendered, we can find out the amount of margin we need to apply\n    // from the bottom and left so that the diagram is readable. The amount is being calculated from\n    // the boundingbox of the largest highlighted label\n    let labelHeights = Array.from(labels, (label)=>label.getBoundingClientRect().height);\n    // Map to highlighted labels (size increases by 60%)\n    let offsetBottom = Math.max(...labelHeights);\n    offsetBottom *= 1.6;\n    return offsetBottom;\n}\nfunction getFieldDisplayNames(allData, sourceString, targetString) {\n    let displayNames = [];\n    allData.forEach((field)=>{\n        const displayName = field.state.displayName !== undefined ? field.state.displayName : field.name;\n        // check if the displayname is defined\n        if (field.name !== sourceString && field.name !== targetString) {\n            displayNames.push({\n                field: field.name,\n                displayName: displayName\n            });\n        }\n    });\n    return displayNames;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils.ts\n");

/***/ }),

/***/ "@grafana/data":
/*!********************************!*\
  !*** external "@grafana/data" ***!
  \********************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_data__;

/***/ }),

/***/ "@grafana/ui":
/*!******************************!*\
  !*** external "@grafana/ui" ***!
  \******************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_ui__;

/***/ }),

/***/ "d3":
/*!*********************!*\
  !*** external "d3" ***!
  \*********************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_d3__;

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./module.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});;